<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[KING]]></title>
  <link href="http://pbking1.github.com/atom.xml" rel="self"/>
  <link href="http://pbking1.github.com/"/>
  <updated>2015-03-01T15:22:02-05:00</updated>
  <id>http://pbking1.github.com/</id>
  <author>
    <name><![CDATA[pb]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CLEP microeconomic practise exam]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/28/clep-microeconomic-practise-exam/"/>
    <updated>2015-02-28T15:03:29-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/28/clep-microeconomic-practise-exam</id>
    <content type="html"><![CDATA[<h3>exam 1</h3>

<ul>
<li>1.If a producing firm does not have enough time to expand its plant capacity生产规模, it is:

<ul>
<li><strong>operating in the short run</strong></li>
<li>因为没时间，所以要赶紧做事，以免被别人打败

<ul>
<li>所以只能进行短期运营</li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li>2.Economic costs of production differ from accounting costs of production in that:

<ul>
<li><strong>economic costs add the opportunity cost of a firm using its own resources.</strong></li>
<li>经济利润和会计利润

<ul>
<li>会计利润：总收入减总成本</li>
<li>经济利润：总收入减总成本减机会成本</li>
</ul>
</li>
</ul>
</li>
<li><p>3.An example of a long run adjustment is:</p>

<ul>
<li><strong>Walmart builds another Supercenter.</strong></li>
<li>长期运营的话就要扩大规模</li>
</ul>
</li>
<li><p>4.The reason the marginal product of labor in the short run increases at first and then falls is because:</p>

<ul>
<li><strong>there are fewer opportunities for division of labor and specialization.</strong></li>
<li>边际产量：增加一个劳动力增加的产量</li>
<li>边际产量递减规律

<ul>
<li>边际产量递减，所以边际成本递增</li>
</ul>
</li>
<li>一开始效果明显，到后来基数大了所以就不明显了

<ul>
<li>工人少，人数增加效率增加</li>
<li>工人越多，就会存在协调问题，所以效率就会下降</li>
</ul>
</li>
</ul>
</li>
<li><p>5.If 11 workers can produce a total of 54 units of a product and another worker has a marginal product of six, then the average product of 12 workers is:</p>

<ul>
<li><strong>(54 + 6)/12 = 5</strong></li>
</ul>
</li>
<li><p>6.Economies of scale exist because as a firm increases its size in the long run长期:</p>

<ul>
<li>labor and management can specialize their activities more.    &ndash; as a larger input buyer the firm can purchase inputs at a lower per unit cost.    &ndash; the firm can afford more sophisticated technology in production.    &ndash; 规模经济：            &ndash; 短期无法改变固定成本，只有长期才能改变固定成本。                  &ndash; 长期的曲线是由很多短期的曲线

<pre><code>  - 随着产量增加，平均总成本下降(这一段就叫规模经济)
  - 平均总成本上升的(这一段叫规模不经济)        - 固定成本：器材(本来就有的)            - 固有资产        - 可变成本：劳动力（可以增加可以减少）            - 会随着产量变动而变动的成本
</code></pre>

<ul>
<li>平均固定成本：固有资产平均分到课本成本上

<ul>
<li>随着产量的增加，递减的</li>
</ul>
</li>
<li>平均可变成本：例如原材料

<ul>
<li>随着产量的增加，递增的</li>
</ul>
</li>
<li>平均总成本：平均可变成本 + 平均固定成本

<ul>
<li>一开始是平均固定成本起主导作用，所以下降</li>
<li>然后是平均可变成本起主导作用，所以增加</li>
<li>斜率就为边际成本</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>7.In natural monopolies自然垄断 such as the generation of electricity, long-run average costs continue to decrease as the plant size gets larger, because:</p>

<ul>
<li><strong>diseconomies of scale are very minor but economies of scale continue.规模经济持续</strong></li>
<li>由于规模经济造成的垄断，叫自然垄断

<ul>
<li>因为企业应为规模经济成本比较低。 所以比其他新来的企业更有竞争力</li>
</ul>
</li>
</ul>
</li>
<li><p>8.In figure 10.2, the difference between average total costs and average variable costs is:</p></li>
<li><img src="http://pbking1.github.com/images/econ/1.png" alt="Image" /></li>
<li><img src="http://pbking1.github.com/images/econ/">

<ul>
<li><strong>average fixed costs.</strong></li>
<li>平均总成本 = 平均可变成本 + 平均固定成本</li>
</ul>
</li>
<li>9.In figure 10.2, average variable costs approach average total costs as output rises because:

<ul>
<li><strong>average fixed costs are falling.</strong></li>
</ul>
</li>
<li>10.In figure 10.2, when marginal costs are rising:

<ul>
<li><strong>marginal product of labor（劳动边际产量） is declining.</strong></li>
<li>边际产量递减</li>
</ul>
</li>
<li><p>11.Both individual buyers and sellers in perfect competition:</p>

<ul>
<li><strong>have to take the market price as a given.</strong></li>
<li>都是价格接受者</li>
<li>完全竞争市场：卖家很多，买家很多，而且市场物品一样。企业能够只有进出。

<ul>
<li>当价格高于成本时，就会有新的企业进入

<ul>
<li>这时候供给多了，价格下降</li>
<li>然后变回原来的价格。然后企业就退出</li>
<li>然后价格有上升</li>
<li>所有都是价格接受者（价格就是边际成本）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>12.If a perfectly competitive seller is producing at an output where price is $11 and the marginal cost is $14.54, then to maximise profits the firm should:</p>

<ul>
<li><strong>produce a smaller level of output.</strong></li>
<li>边际成本比市场价格高

<ul>
<li>无利可图， 所以压缩产量</li>
</ul>
</li>
</ul>
</li>
<li><p>13.A very large number of small sellers who sell identical products implies:</p>

<ul>
<li><strong>the inability of one seller to influence price.</strong></li>
<li>很多卖家卖相同产品，所以都是价格接受者</li>
<li>所以不能调价，不然买家就会跑到别的市场买</li>
<li>完全竞争</li>
</ul>
</li>
<li><p><img src="http://pbking1.github.com/images/econ/2.png" alt="Image" /></p></li>
<li><img src="http://pbking1.github.com/images/econ/"></li>
<li><p>14.At price P1, the firm in figure 11.1 would produce:</p>

<ul>
<li><strong>zero</strong></li>
<li>这种图都是短期的，长期的只有一个u型曲线</li>
<li>市场价格P1低于平均总成本，所以无利可图，所以不生产</li>
</ul>
</li>
<li><p>15.At price P2, the firm in figure 11.1 would produce:</p>

<ul>
<li><strong>Q5</strong></li>
<li></li>
</ul>
</li>
<li><p>16.At price P1, the firm in figure 11.1 would:</p>

<ul>
<li><strong>lose fixed costs.</strong></li>
</ul>
</li>
<li><p>17.At price P3, the firm in figure 11.1 would:</p>

<ul>
<li><strong>break down</strong></li>
</ul>
</li>
<li><p>18.At price P4 in the long run, the industry including the firm in figure 11.1 would:</p>

<ul>
<li><strong>have entry of new firms.</strong></li>
</ul>
</li>
<li><p>19.At price P2 in the long run, the industry including the firm in figure 11.1 would:</p>

<ul>
<li><strong>have exit of some existing firms.</strong></li>
</ul>
</li>
<li><p>20.When a competitive firm finds that the market price is below its minimum average variable cost level, it will sell:</p>

<ul>
<li><strong>nothing at all, the firm shuts down.</strong></li>
</ul>
</li>
<li><p>21.If, as the industry expands, a competitive industry can supply larger quantities at the same long-run market price, it is:</p>

<ul>
<li><strong>a constant-cost industry.</strong></li>
</ul>
</li>
<li><p>22.A local electricity-generating company has a monopoly that is protected by a barrier to entry that takes the form of:</p>

<ul>
<li><strong>economies of scale.</strong></li>
</ul>
</li>
<li><p><img src="http://pbking1.github.com/images/econ/3.png" alt="Image" /></p></li>
<li><img src="http://pbking1.github.com/images/econ/"></li>
<li><p>23.To profit maximize the firm in figure 14.1 will produce:</p>

<ul>
<li><strong>Q2</strong>.</li>
</ul>
</li>
<li><p>24.The profit maximize price for the firm in figure 14.1 is:</p>

<ul>
<li><strong>P3</strong></li>
</ul>
</li>
<li><p>25.If average total costs are ATC1, the firm in figure 14.1 will:</p>

<ul>
<li><strong>make a profit</strong></li>
</ul>
</li>
<li><p>26.In figure 14.1, the difference between the monopoly output and the competitive output is:</p>

<ul>
<li><strong>Q3-Q2</strong></li>
</ul>
</li>
<li><p>27.A profit maximizing monopolistʹs price is:</p>

<ul>
<li><strong>greater than what the price would be if the mononoplistʹs industry were competitive.</strong></li>
</ul>
</li>
<li><p>28.The important economic concept illustrated by increasing opportunity costs is:</p>

<ul>
<li><strong>the more resources devoted to any activity, the smaller the payoff of devoting more resources to that activity.</strong></li>
</ul>
</li>
<li><p>29.A production possibilities frontier model shows that:</p>

<ul>
<li><strong>if all resources are fully and efficiently utilized, more output of good X can only be achieved by producing less of another good.</strong></li>
</ul>
</li>
<li><p>30.If George can mow 10 lawns or cultivate 5 gardens a day while Jack can mow 6 lawns or cultivate 4 gardens a day, then:</p>

<ul>
<li><strong>Jack has a comparative advantage in lawn mowing.</strong></li>
</ul>
</li>
<li><p>31.If last year the Ajax firm sold 250 sofas at $1,000 each and this year Ajax sold 500 sofas at $1,500 each, then</p>

<ul>
<li><strong>the demand for sofas increased.</strong></li>
</ul>
</li>
<li><p>32.The demand for big screen TVs would fall, if big screen TVs are normal goods and:</p>

<ul>
<li><strong>buyerʹs of big screen TVs incomes fall because of a recession萧条.</strong></li>
</ul>
</li>
<li><p>33.A change in demand represents a <strong><strong><strong><strong> while a change in quantity demanded is a </strong></strong></strong></strong>.</p>

<ul>
<li><strong>shift to a new demand curve</strong>; <strong>movement along one demand curve</strong></li>
</ul>
</li>
<li><p>34.If the demand for a good increases when there is high unemployment, we can conclude that the commodity is:</p>

<ul>
<li><strong>an inferior下级 good</strong></li>
</ul>
</li>
<li><p>35.An advance in technology increases supply:</p>

<ul>
<li><strong>because laborʹs or capitalʹs productivity increases and costs of production fall.</strong></li>
</ul>
</li>
<li><p>36.When a strike at a major local employer occurs, the demand for television sets in that local market will:</p>

<ul>
<li><strong>decreases because buyers incomes have decreased.</strong></li>
</ul>
</li>
<li><p>37.If the current market price for a particular book is $30 a unit and a price ceiling is imposed at $20 per book, then:</p>

<ul>
<li><strong>there will an increase in the quantity demanded of the book.</strong></li>
<li><strong>a shortage of the book will develop at the ceiling price.</strong>    &ndash; <strong>a price of $20 per book is the legally allowed maximum price of the book.</strong></li>
</ul>
</li>
<li><p>38.Among the impacts of the minimum wage工资 is that:</p>

<ul>
<li><strong>higher costs are imposed on employers.</strong>    &ndash; <strong>employers substitute other lower cost inputs in place of higher priced labor.</strong>     &ndash; <strong>higher product prices result because production costs are increased.</strong></li>
</ul>
</li>
<li><p>39.After a city imposes a rent control law:</p>

<ul>
<li><strong>landlords reduce the quantity of apartments offered for rent.</strong></li>
</ul>
</li>
<li><p>40.Consumers pay 100% of a new sales tax on a good:</p>

<ul>
<li><strong>when the demand is perfectly inelastic.</strong></li>
</ul>
</li>
<li><p>41.Which of the following statements about elasticity of demand is correct?</p>

<ul>
<li><strong>Demand is more elastic in a long time period than it is in a short time period.</strong></li>
</ul>
</li>
<li><p>42.Which of the following goods would most likely have the most inelastic demand?</p>

<ul>
<li><strong>Bread</strong></li>
</ul>
</li>
<li><p>43.If at a price of $100, 10 units were sold while at a price of $125, eight units were sold, the price elasticity of demand value using the midpoint formula is:</p>

<ul>
<li><strong>one</strong></li>
</ul>
</li>
<li><p>44.If at a price of $50, 20 units are sold and at a price of $60, 0 units are sold, the price elasticity of demand of the good is:</p>

<ul>
<li><strong>perfectly elastic.</strong></li>
</ul>
</li>
<li><p>45.When demand is price elastic, a fall in price causes total revenue to rise because:</p>

<ul>
<li><strong>the increase in quantity sold is large enough to offset the lower price.</strong></li>
</ul>
</li>
<li><p>46.If the cross-price elasticity of demand for goods A and B is a positive value, this means the two goods are:</p>

<ul>
<li><strong>substitutes</strong></li>
</ul>
</li>
<li><p>47.If you expect the economy is going to boom and average income in the economy will rise in the foreseeable future, the type of firm that would be able to increase its sales if your expectations aremet is:</p>

<ul>
<li><strong>one that sells a luxury good.</strong></li>
</ul>
</li>
<li><p>48.An external cost is created when you:</p>

<ul>
<li><strong>litter on the side of the road.</strong></li>
</ul>
</li>
<li><p>49.Because producers do not bear the external cost of pollution:</p>

<ul>
<li><strong>production is beyond the economically efficient level.</strong></li>
</ul>
</li>
<li><p><img src="http://pbking1.github.com/images/econ/4.png" alt="Image of Yaktocat" /></p></li>
<li><img src="http://pbking1.github.com/images/econ/"></li>
<li>50.An efficient way to get the firm in figure 5.1 to produce what society wants is:

<ul>
<li><strong>a tax to make the firm realize the external costs it imposes on others.</strong></li>
</ul>
</li>
</ul>


<h3>exam 2</h3>

<ul>
<li><p>1.Ex-President Carter’s recommendation of registering women for the draft raised an uproar around the country. One opponent of this proposal stated: &ldquo;Women are needed at home to rear the children, let the men fight the wars.&rdquo; This opponent implied that:</p>

<ul>
<li><strong>the opportunity cost associated with drafting women is higher than the opportunity cost of drafting men.</strong></li>
</ul>
</li>
<li><p>2.Which of the following accurately describes the fundamental problem at the core of all economic analysis? The fundamental problem is:</p>

<ul>
<li><strong>understanding how scarce resources are allocated among competing uses to best satisfy society’s unlimited wants.</strong></li>
</ul>
</li>
<li><p>3.If an individual’s demand for frozen dinners increases when the price of steak rises, we would infer that:</p>

<ul>
<li><strong>steak and frozen dinners are substitutes for this person</strong>.</li>
</ul>
</li>
<li><p>4.On the New York Stock Exchange, the current price per share for stock of the Boston Celtics, a NBA basketball team, is $8.25. At that price the total quantity of shares demanded is 2,500, while the total quantity supplied for trade is 2,000. It follows that</p>

<ul>
<li><strong>there is a shortage of shares of the Boston Celtics on the stock exchange.</strong></li>
</ul>
</li>
<li><p>6.Suppose a political candidate in the upcoming November elections promises voters more funding for AIDS research and child care, and assures them they will not have to sacrifice any other goods or services to obtain the additional programs.</p>

<ul>
<li><strong>This may be possible if the economy has unemployed resources.</strong></li>
</ul>
</li>
<li><p>7.This year the demand for new homes increases while at the same time the supply also increases. As a result of these changes in the market for new homes you can conclude that:</p>

<ul>
<li><strong>the equilibrium number of new homes will increase.</strong></li>
</ul>
</li>
<li><p>8.Some time ago the government of China required many highly skilled technicians and scientists to engage in unskilled agricultural labor in order to develop &ldquo;proper social attitudes.&rdquo; This policy caused China to produce</p>

<ul>
<li><strong>inside its PPF.</strong></li>
</ul>
</li>
<li><p>9.Recent health studies claim that consuming a glass of wine with afternoon or evening meals significantly reduces the risk of heart disease. If people believe this new information, what is likely to occur to the short-run equilibrium in the wine market?
  &ndash;<strong> Equilibrium price and quantity will both rise due to an increase in the demand for wine.</strong></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[computer architecture 1]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/13/computer-architecture-1/"/>
    <updated>2015-02-13T14:28:43-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/13/computer-architecture-1</id>
    <content type="html"><![CDATA[<h3>charpter1</h3>

<ul>
<li><p>What is computer architecture</p>

<ul>
<li>4 classes of computers

<ul>
<li>personal computer</li>
<li>server computer</li>
<li>embedded computer</li>
<li>supercomputer
<!--more--></li>
</ul>
</li>
<li><p>What does “PostPC era” mean</p>

<ul>
<li>personal mobile device(PMD)</li>
<li>cloud computing

<ul>
<li>server are replace by cloud computing</li>
<li>Software as a Service(Saas)</li>
</ul>
</li>
<li>Portion of software run on a PMD, and a portion(part of) run in the cloud</li>
</ul>
</li>
<li><p>What factors could affect performance</p>

<ul>
<li>algorithm</li>
<li>programming language, compiler, architecture</li>
<li>processor and memory system</li>
<li>I/O system(including OS and hardware)</li>
</ul>
</li>
<li><p>Eight great ideas – Know what they mean</p>

<ul>
<li>1.design for moore&rsquo;s law</li>
<li>2.use abstraction to simplify design</li>
<li>3.make the common case fast</li>
<li>4.performance via parallelism</li>
<li>5.performance via pipelining</li>
<li>6.performance via prediction</li>
<li>7.hierarchy of memory</li>
<li>8.dependability via redundancy</li>
</ul>
</li>
</ul>
</li>
<li><p>Different levels of program code</p>

<ul>
<li>HLL &ndash;> Assembly language &ndash;> ML</li>
<li>5 components of a computer

<ul>
<li>input</li>
<li>output</li>
<li>control

<ul>
<li>tells datapath, memory, I/O what to do according to the instructions.</li>
</ul>
</li>
<li>datapath

<ul>
<li>performs the arithmetic operations</li>
</ul>
</li>
<li>memory</li>
</ul>
</li>
<li><p>input &ndash;>(control, datapath)&ndash;>output</p></li>
<li><p>What is ISA?</p>

<ul>
<li>instruction set architecture

<ul>
<li>the hardware/software interface</li>
</ul>
</li>
</ul>
</li>
<li><p>Understand “Yield” in terms of chip manufacturing?</p>

<ul>
<li>Proportion of working dies per wafer晶圆(硅半导体集成电路制作所用的硅晶片)</li>
</ul>
</li>
<li><p>Response time vs Throughput</p>

<ul>
<li>Response time

<ul>
<li>How long it takes to do one task</li>
</ul>
</li>
<li>Throughput

<ul>
<li>Total work done per unit time</li>
</ul>
</li>
</ul>
</li>
<li><p>Elapsed time vs CPU time</p>

<ul>
<li>elapsed time

<ul>
<li>wall clock time

<ul>
<li>total response time, inkling everything</li>
<li>can be used to determine the system performance</li>
</ul>
</li>
</ul>
</li>
<li>cpu time

<ul>
<li>the time that cpu spent for <strong>a given process</strong></li>
<li>can be divide into user CPU time and system CPU time</li>
</ul>
</li>
</ul>
</li>
<li><p>Know how to calculate CPU time, CPI_avg, IPC, Clock rate, Clock Cycle Time, and Performance</p>

<ul>
<li>1 cycle per second &ndash;> 1 Hz

<ul>
<li>1 GHz = 10<sup>9</sup> hz</li>
</ul>
</li>
<li>clock rate(frequency)

<ul>
<li>cycle per second</li>
</ul>
</li>
<li>clock cycle time(period)

<ul>
<li>duration of a clock cycle</li>
</ul>
</li>
<li>CPU time

<ul>
<li>CPU time = CPU clock cycle * clock cycle time = CPU Clock cycle / Clock Rate</li>
</ul>
</li>
<li>Instruction count

<ul>
<li>determine by program, ISA, compiler</li>
</ul>
</li>
<li>Average cycle per instruction(CPI)

<ul>
<li>IPC = 1/CPI</li>
</ul>
</li>
<li>Clock Cycle = Instruction * Average Cycle per instruction</li>
<li>CPU time = Instruction * CPI * Clock Cycle Time

<ul>
<li>= Instruction Count * CPI / Clock Rate</li>
<li>= Instruction Count / (Clock Rate * IPC)</li>
<li>= (Instruction/program) * (Cycles/Instruction) * (Seconds/Cycle)</li>
<li>= IC * PCI * CC</li>
</ul>
</li>
<li>Clock Cycles = sum(CPI * Instruction Count)</li>
<li>how to measure performance

<ul>
<li>use instruction/second

<ul>
<li>so we can use the format clock rate/CPI</li>
</ul>
</li>
</ul>
</li>
<li>Performance depends on

<ul>
<li>Algorithm:affects IC, CPI</li>
<li>programming language: affects IC, CPI</li>
<li>Compiler:affects IC, CPI</li>
<li>ISA:affects IC, CPI, CC</li>
</ul>
</li>
<li>if you want an improvement in the execution time

<ul>
<li>you need to deduce the percentage of old time

<ul>
<li>for example

<ul>
<li>if you want to improve 50%, then you should use (100%-50%)=50% rather than (100% + 50%) = 150%</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>speed up

<ul>
<li>use the (old execute time) / (new execute time)

<ul>
<li>old time = old instruction count * old average cycle per instruction / clock rate</li>
<li>new time = new instruction count * new average cycle per instruction / clock rate

<ul>
<li>old time / new time = old instruction count * old average cycle per instruction / (new instruction count * new average cycle per instruction)</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Could explain why “Power Wall” is a problem?</p>

<ul>
<li><p>situation</p>

<ul>
<li>can not reduce voltage further, and will make transistor more leaky</li>
</ul>
</li>
<li><p>Power = Capacitive Load * Voltage * Frequency</p></li>
<li><p>Understand what are the challenges on multicore processors</p>

<ul>
<li>Multicore processors: more than one core per chip</li>
<li>Hard to do

<ul>
<li>Programming for performance (not only for correctness)</li>
<li>Load balancing</li>
<li>Optimizing communication and synchronization</li>
</ul>
</li>
</ul>
</li>
<li><p>Fallacies and Pitfalls</p>

<ul>
<li>Fallacy: Some commonly held misconceptions that you might encounter

<ul>
<li>Computers at low utilization use little bit power</li>
<li>Designing for performance and designing for energy efficiency are unrelated</li>
</ul>
</li>
<li>PiGall: easily made mistakes

<ul>
<li> They are only true in a limited context</li>
<li>Can help you avoid making the same mistakes

<ul>
<li>example:

<ul>
<li>If you improve one aspect of a computer, then you would expect a proportional improvement in the overall performance</li>
<li>Using a subset of the performance equal on as a performance metric.</li>
<li>MIPS as a Performance Metric</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>e.g. MIPS, Amdahl’s Law, etc.</p></li>
</ul>
</li>
</ul>


<h3>chapter 2</h3>

<ul>
<li>Understand what is instruction and instruction set?

<ul>
<li>instruction set: the vocabulary of all commands understood

<ul>
<li>different computer have different instruction set</li>
</ul>
</li>
<li>instruction: words of computer&rsquo;s language</li>
<li>instruction set architecture(ISA): ISA serves as the interface between software and hardware

<ul>
<li>provide the mechanism by which software tells hardware what should be done</li>
</ul>
</li>
</ul>
</li>
<li>Differences between RISC and CISC

<ul>
<li>RISC

<ul>
<li>reduced instruction set computer</li>
<li>difference

<ul>
<li>fixed instruction lengths 32 bits</li>
<li>load store instruction sets</li>
<li>limited addressing modes</li>
<li>limited operations</li>
<li>simpler, cheaper</li>
<li>MIPS: typical of RISC ISAs</li>
</ul>
</li>
</ul>
</li>
<li>CISC

<ul>
<li>x86</li>
</ul>
</li>
</ul>
</li>
<li><p>MIPS ISA</p>

<ul>
<li><p>MIPS has a number 32 32-bit registers</p>

<ul>
<li>32 bit data called a word</li>
<li>memory is byte addressed

<ul>
<li>each address identifies a byte</li>
</ul>
</li>
<li>MIPS is big endian</li>
</ul>
</li>
<li><p>R and I types of instruction format</p>

<ul>
<li>R-format

<ul>
<li><code>op(6 bits)-rs(5 bits)-rt(5 bits)-rd(5 bits)-shamt(5 bits)-funct(6 bits)</code></li>
<li>add, sub</li>
</ul>
</li>
<li>I-format

<ul>
<li><code>op(6 bits)-rs(5 bits)-rt(5 bits)-constant or offset address(16 bits)</code></li>
<li>addi, lw, sw, beq, bne</li>
</ul>
</li>
</ul>
</li>
<li><p>Big endian, little endian</p>

<ul>
<li>little endian: <strong>least</strong> significant byte store at least-address of memory</li>
<li>big endian: <strong>Most</strong> significant byte store at least-address of memory</li>
</ul>
</li>
<li> Memory alignment

<ul>
<li>although computer are byte-addressable</li>
<li>memory typically organised in n-byte lines</li>
<li><strong>only the char[N] are the same in both big endian and little endian</strong></li>
</ul>
</li>
</ul>
</li>
<li><p>How to represent unsigned and signed integers</p>

<ul>
<li>What is 2s-complement, how, why

<ul>
<li>Most-negative: 1000 0000 &hellip; 0000</li>
<li>Most-positive: 0111 1111 &hellip; 1111</li>
<li>Bit 31 is called “sign bit”</li>
<li>求负：取反加一</li>
</ul>
</li>
</ul>
</li>
<li><p>Sign extension</p>

<ul>
<li>leading bit = 1 &ndash;> negative</li>
<li>range

<ul>
<li>–2,147,483,648t o +2,147,483,647</li>
</ul>
</li>
<li>Sign extension: replicate the sign bit to the left</li>
<li>2<sup>31</sup> &ndash; 1 = 0x7FFFFFFF</li>
<li>-2<sup>31</sup> = 0x80000000</li>
<li>overflow problem

<ul>
<li>for add instruciton

<ul>
<li>128 + x > 2<sup>31</sup> &ndash; 1 the upper bound</li>
<li>128 + x &lt; -2<sup>31</sup> the lower bound</li>
</ul>
</li>
<li>so if you want to overflow, you need to bigger than 2<sup>31</sup> &ndash; 1 and smaller than -2<sup>31</sup></li>
</ul>
</li>
</ul>
</li>
<li><p>Logical operations: sll, srl, and, or, nor</p></li>
<li><p>Conditional operations: beq, bne</p>

<ul>
<li>beq: branch equal</li>
<li>bne: branch not equal</li>
</ul>
</li>
<li><p>Concept of “basic block”</p>

<ul>
<li>a basic block is a sequence of instructions with no embedded branch, no branch target</li>
</ul>
</li>
<li><p>How “Procedure calling” is supported</p>

<ul>
<li>procedure is used to structure program</li>
<li>each procedure performs a specific task</li>
<li>working like a black box</li>
</ul>
</li>
<li><p>Know jal (for calling), and jr (for return)</p>

<ul>
<li>jal procedureName

<ul>
<li>puts address of following instruction in $ra</li>
<li>jump to target address</li>
<li>procedure call</li>
</ul>
</li>
<li>jr $ra

<ul>
<li>jump-register</li>
<li>copy $ra to PC</li>
<li>procedure return</li>
</ul>
</li>
</ul>
</li>
<li><p>Understand the fact(n) assembly example</p></li>
<li><p>The memory layout of a program</p></li>
<li><p>J-type instruction format, e.g., j and jal</p>

<ul>
<li><code>op(6 bits)-instruction address(26 bits)</code></li>
</ul>
</li>
<li><p>Know how to calculate the target of PC-relative addressing, and target of (pseudo) direct jump addressing</p>

<ul>
<li>target address = PC + offset * 4</li>
<li>pseudo instructions: not real instruction

<ul>
<li>move $t0, $t1 &ndash;> add $t0, $zero, $t1</li>
<li>blt $t0, $t1, L &ndash;> slt $at, $t0, $t1

<ul>
<li> bne $at, $zero, L</li>
</ul>
</li>
<li>$at : assembler temporary</li>
</ul>
</li>
</ul>
</li>
<li><p>Hardware synchronisation instructions</p>

<ul>
<li><p>ll rt, offset(rs)</p>

<ul>
<li>load linked</li>
</ul>
</li>
<li><p>sc rt, offset(rs)</p>

<ul>
<li>store conditional</li>
</ul>
</li>
<li>rt is both input and output</li>
</ul>
</li>
<li><p>Know what information is stored in object modules</p>

<ul>
<li>the assembler translate program into <strong>machine instructions</strong> which are stored in object modules</li>
</ul>
</li>
<li><p>Know what are Compiler, Assembler, Linker, Loader used for?</p>

<ul>
<li>C program compile through compiler</li>
<li>the compiler come up with assembly language program</li>
<li>then assembler generate object(Machine language module)</li>
<li>object(machine language module and library routine) go to linker</li>
<li>the linker static link and generate executable machine language program</li>
<li>then go to loader and load into memory</li>
</ul>
</li>
<li><p>A few fallacies and pithalls</p>

<ul>
<li>instruction count and CPI are not good performance indicators in isolation</li>
<li>compiler optimisation are sensitive to algorithm</li>
<li>java compiled code s significantly faster than JVM interpreted</li>
<li>nothing can fix a dumb algorithm</li>
<li>use assembly code for high performance</li>
<li>powerful instruction &ndash;> high performance</li>
<li>importance of binary compatibility => instruction set does not change</li>
<li>sequential words are at sequential byte addresses

<ul>
<li>increment by 4</li>
</ul>
</li>
<li>using a pointer to an automatic variable outside its defining procedure

<ul>
<li>e.g passing pointer back via returning result

<ul>
<li>because pointer becomes invalid when stack popped</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>MIPS instruction</p></li>
<li><table>
<thead>
<tr>
<th>MIPS instructions </th>
<th> Name </th>
<th> format</th>
</tr>
</thead>
<tbody>
<tr>
<td>add</td>
<td>add</td>
<td>R</td>
</tr>
<tr>
<td>subtract</td>
<td>sub</td>
<td>R</td>
</tr>
<tr>
<td>add immediate</td>
<td>addi</td>
<td>I</td>
</tr>
<tr>
<td>load word</td>
<td>lw</td>
<td>I</td>
</tr>
<tr>
<td>store word </td>
<td> sw </td>
<td> I</td>
</tr>
<tr>
<td>load half </td>
<td> lh </td>
<td> I</td>
</tr>
<tr>
<td>load half unsigned </td>
<td> lhu </td>
<td> I</td>
</tr>
<tr>
<td>store half </td>
<td> sh </td>
<td> I</td>
</tr>
<tr>
<td>load byte </td>
<td> lb </td>
<td>  I </td>
</tr>
<tr>
<td>load byte unsigned</td>
<td> lbu </td>
<td> I</td>
</tr>
<tr>
<td>store byte </td>
<td> sb </td>
<td> I</td>
</tr>
<tr>
<td>load linked </td>
<td> ll </td>
<td> I</td>
</tr>
<tr>
<td>store conditional </td>
<td> sc </td>
<td> I</td>
</tr>
<tr>
<td>load upper immediate </td>
<td> lui </td>
<td> I</td>
</tr>
<tr>
<td>and </td>
<td> and </td>
<td> R</td>
</tr>
<tr>
<td>or </td>
<td> or </td>
<td> R</td>
</tr>
<tr>
<td>nor </td>
<td> nor </td>
<td> R</td>
</tr>
<tr>
<td>and immediate </td>
<td> andi </td>
<td> I</td>
</tr>
<tr>
<td>or immediate </td>
<td> ori </td>
<td> I</td>
</tr>
<tr>
<td>shift left logical </td>
<td> all </td>
<td> R</td>
</tr>
<tr>
<td>shift right logical </td>
<td> srl </td>
<td> R</td>
</tr>
<tr>
<td>branch on equal </td>
<td> beq </td>
<td> I</td>
</tr>
<tr>
<td>branch on not equal </td>
<td> bne </td>
<td> I</td>
</tr>
<tr>
<td>set less than </td>
<td> slt </td>
<td> R</td>
</tr>
<tr>
<td>set less than immediate  </td>
<td> slti </td>
<td> I</td>
</tr>
<tr>
<td>set less than immediate unsigned</td>
<td> sltiu </td>
<td> I</td>
</tr>
<tr>
<td>jump </td>
<td> j </td>
<td> J</td>
</tr>
<tr>
<td>jump register </td>
<td> jr </td>
<td> R</td>
</tr>
<tr>
<td>jump and link </td>
<td> jal </td>
<td> J</td>
</tr>
</tbody>
</table>
</li>
<li><p>thus we can see that R instruction contain the kind</p>

<ul>
<li>add, sub, and, or , nor, slt, shift, jump register, move, multi</li>
</ul>
</li>
<li>the I instruction contain

<ul>
<li>contain the load, store, immediate command, branch</li>
</ul>
</li>
<li><p>J instruction only have j and jal</p></li>
<li><p>汇编代码示例</p>

<ul>
<li>1.<code>if (i == j) f = g + h; else f = g - h</code>

<ul>
<li>beq $s3, $s4, Then</li>
<li>sub $s0, $s1, $s2</li>
<li>J Exit</li>
<li>Then: add $s0, $s1, $s2</li>
<li>Exit: &hellip;</li>
</ul>
</li>
<li>2.<code>while(array[i] == k) i+=1</code>

<ul>
<li>Loop:sll $t1, $s3, 2 //t1 = i * 4</li>
<li>add $t1, $t1, $s6</li>
<li>lw $t0, $t1</li>
<li>beq $s5, $t0, EXIT</li>
<li>addi $s3, $s3, 1</li>
<li>j Loop</li>
<li>EXIT:&hellip;</li>
</ul>
</li>
<li><p>3.leaf procedure example</p>

<ul>
<li><p><code>
int leaf_example(int, g, h, i, j){
  int f;
  f = (g + h) - (i - j);
  return f;
}
</code></p></li>
<li><p>MIPS code:</p>

<ul>
<li>addi $sp, $sp, -4  //save s0 on stack</li>
<li>sw $s0, 0($sp)</li>
<li>add $t0, $a0, $a1</li>
<li>add $t1, $a2, $a3</li>
<li>sub $s0, $t0, $t1</li>
<li>add $v0, $s0, $zero   //store result</li>
<li>lw $s0, 0($sp)   //store s0</li>
<li>addi $sp, $sp, 4</li>
<li>jr $ra  //return</li>
</ul>
</li>
</ul>
</li>
<li><p> 4.no leaf procedure example</p>

<ul>
<li><p> <code>
int fact(int n){
   if(n &lt; 1){
       return 1;
   }else{
       return n * fact(n - 1);
   }
}
int main(){
   int n = 10;
   fact(n);
   printf(n);
}
</code></p></li>
<li><p> MIPS code:</p>

<ul>
<li> fact:

<ul>
<li>addi $sp, $sp, -8</li>
<li>lw $ra, 4($sp)</li>
<li>lw $a0, 0($sp)</li>
<li>slti $t0, $a0, 1  //n &lt; 1, t0 = 1</li>
<li>beq $t0, $zero, L1 //if t0 == 0(means n >= 1) go to L1</li>
<li>addi $v0, $zer0, 1</li>
<li>addi $sp, $sp, 8</li>
<li>jr $ra //return address</li>
</ul>
</li>
<li> L1:

<ul>
<li>addi $a0, $a0, -1 //n = n &ndash; 1</li>
<li>jal fact //递归</li>
<li>sw $a0, 0($sp)</li>
<li>sw $ra, 4($sp)</li>
<li>addi $sp, $sp, 8</li>
<li>multi $v0, $a0, $v0 //n*fact(n-1)</li>
<li>jr $ra  //return address</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>segment place</p>

<ul>
<li>code segment &ndash;> data segment &ndash;> heap segment &ndash;> stack segment

<h3>chapter 3</h3></li>
</ul>
</li>
<li><p>Given a logic function, know how to draw its logic gate diagram</p></li>
<li><p>Given a logic gate diagram, know how to write down its logic function</p></li>
<li>Know how a full adder is implemented</li>
<li>Know what are decoder and multiplexer and how they work</li>
<li>Understand clock, register, SRAM, DRAM

<ul>
<li>SRAM:static Random Access Memory</li>
<li>DRAM:dynamic Random Access Memory</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[linkedin_api_example]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/12/linkedin-api-example/"/>
    <updated>2015-02-12T14:51:14-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/12/linkedin-api-example</id>
    <content type="html"><![CDATA[<ul>
<li>we can use the RESTFUL api to get some information in linkedin

<ul>
<li><a href="https://apigee.com/console/linkedin">https://apigee.com/console/linkedin</a>

<ul>
<li>this is a online simluator to perform RESTFUL api of linkedin</li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li>and the sample code below is using the linkedin package from thrid party

<ul>
<li>you can download the package using the following link

<ul>
<li><a href="https://pypi.python.org/pypi/python-linkedin/4.0">https://pypi.python.org/pypi/python-linkedin/4.0</a></li>
<li><a href="https://github.com/ozgur/python-linkedin">https://github.com/ozgur/python-linkedin</a></li>
</ul>
</li>
</ul>
</li>
<li>code

<ul>
<li>the following code can produce some result

<ul>
<li>but I have some problem in using the search api

<ul>
<li>application.search_profile(selectors=[{&lsquo;people&rsquo;: [&lsquo;first-name&rsquo;, &lsquo;last-name&rsquo;]}], params={&lsquo;keywords&rsquo;: &lsquo;apple microsoft&rsquo;})</li>
</ul>
</li>
<li>Search URL is &lsquo;<a href="https://api.linkedin.com/v1/people-search:">https://api.linkedin.com/v1/people-search:</a>(people:(first-name,last-name))?keywords=apple%20microsoft&rsquo;</li>
</ul>
</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#! /usr/bin/env python
</span><span class='line'># -*- coding: utf-8 -*-
</span><span class='line'>
</span><span class='line'>CONSUMER_KEY = 'xxxxxxx'     # This is api_key
</span><span class='line'>CONSUMER_SECRET = 'xxxxxxx'   # This is secret_key
</span><span class='line'>
</span><span class='line'>USER_TOKEN = 'xxxxxxx'   # This is oauth_token
</span><span class='line'>USER_SECRET = 'xxxxxxx'   # This is oauth_secret
</span><span class='line'>RETURN_URL = 'http://localhost:8000'
</span><span class='line'>
</span><span class='line'>from linkedin import linkedin
</span><span class='line'>from oauthlib import *
</span><span class='line'>from urllib2 import *
</span><span class='line'>import urllib2
</span><span class='line'>from json import dumps, loads
</span><span class='line'># Define CONSUMER_KEY, CONSUMER_SECRET,  
</span><span class='line'># USER_TOKEN, and USER_SECRET from the credentials 
</span><span class='line'># provided in your LinkedIn application
</span><span class='line'>
</span><span class='line'># Instantiate the developer authentication class
</span><span class='line'>authentication = linkedin.LinkedInDeveloperAuthentication(CONSUMER_KEY, CONSUMER_SECRET, 
</span><span class='line'>                                                      USER_TOKEN, USER_SECRET, 
</span><span class='line'>                                                      RETURN_URL, linkedin.PERMISSIONS.enums.values())
</span><span class='line'>
</span><span class='line'># Pass it in to the app...
</span><span class='line'>application = linkedin.LinkedInApplication(authentication)
</span><span class='line'>
</span><span class='line'>print application.get_profile()
</span><span class='line'>
</span><span class='line'>print application.get_profile(selectors=['id', 'first-name', 'last-name', 'location', 'distance', 'num-connections', 'skills', 'educations'])
</span><span class='line'>
</span><span class='line'>print application.search_company(selectors=[{'companies': ['name', 'universal-name', 'website-url']}], params={'keywords': 'apple microsoft'})
</span><span class='line'># Search URL is https://api.linkedin.com/v1/company-search:(companies:(name,universal-name,webs
</span><span class='line'>
</span><span class='line'>print application.get_memberships(params={'count': 20})
</span><span class='line'>
</span><span class='line'>print application.get_companies(company_ids=[1035], universal_names=['apple'], selectors=['name'], params={'is-company-admin': 'true'})
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_8]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-8/"/>
    <updated>2015-02-08T22:02:14-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-8</id>
    <content type="html"><![CDATA[<h3>goal part8</h3>

<ul>
<li>C.Public policy to promote competition

<ul>
<li>1.Antitrust policy</li>
<li>2.Regulation</li>
</ul>
</li>
<li>D.Income distribution

<ul>
<li>1.Equity</li>
<li>2.Sources of income ineqiality</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li>C.Public policy to promote competition 促进市场竞争的政策

<ul>
<li>1.Antitrust policy

<ul>
<li>反托拉斯法能促进竞争，了解就行</li>
</ul>
</li>
<li>2.Regulation 政府对垄断的管制

<ul>
<li>如果政府给垄断、垄断竞争、完全竞争企业一次性补贴或一次性征税（lump sum subsidy or tax），不会对企业的MC产生影响，因此不会影响利润最大化产量和价格。</li>
<li>但由于影响了ATC，导致利润或loss有变化。如果征税或补贴是按单位per unit，则会影响MC，继而影响利润最大化产量和价格。</li>
</ul>
</li>
</ul>
</li>
<li>D.Income distribution 收入分配

<ul>
<li>1.Equity

<ul>
<li>收入不平等的来源：歧视，教育程度不同，能力不同，动机不同。</li>
</ul>
</li>
<li>2.Sources of income ineqiality

<ul>
<li>收入不平等的来源</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_7]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-7/"/>
    <updated>2015-02-08T22:02:10-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-7</id>
    <content type="html"><![CDATA[<h3>goal part7</h3>

<ul>
<li>Market Failure and the Role of Government (12%–18%)

<ul>
<li>A.Externalities

<ul>
<li>1.Marginal social benefit and marginal social cost</li>
<li>2.Positive Externalities</li>
<li>3.Negative externalities</li>
<li>4.Remedies</li>
</ul>
</li>
<li>B.Publicgoods

<ul>
<li>1.Public versus private goods</li>
<li>2.Provision of public goods</li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li>Market Failure and the Role of Government 市场失灵和政府管制

<ul>
<li>A.Externalities外部性

<ul>
<li>1.Marginal social benefit and marginal social cost

<ul>
<li>有外部性的经济活动会产生边际社会收益和边际社会成本</li>
</ul>
</li>
<li>2.Positive Externalities

<ul>
<li>正外部性：市场生产的数量&lt;社会最优的数量，MSB>MSC</li>
</ul>
</li>
<li>3.Negative externalities

<ul>
<li>负外部性：市场生产的数量>社会最优的数量，MSB&lt;MSC</li>
</ul>
</li>
<li>4.Remedies

<ul>
<li>对外部性的补救办法：对有负外部性的物品征税，对有正外部性的物品补贴</li>
</ul>
</li>
</ul>
</li>
<li>B.Publicgoods

<ul>
<li>1.Public versus private goods

<ul>
<li>私人物品有排他性和竞争性</li>
<li>公共物品没有排他性没有竞争性s</li>
</ul>
</li>
<li>2.Provision of public goods

<ul>
<li>公共物品的供给：政府收税，统一提供，如国防。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_6]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-6/"/>
    <updated>2015-02-08T22:02:06-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-6</id>
    <content type="html"><![CDATA[<h3>goal part6</h3>

<ul>
<li>Factor Markets (10%–18%)

<ul>
<li>A.Derived factor demand</li>
<li>B.Marginal revenue product</li>
<li>C.Labor market and firms’ hiring of labor</li>
<li>D.Market distribution of income</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li>Factor Markets  要素市场

<ul>
<li>学习时可以类比产品市场的供求均衡</li>
<li>A.Derived factor demand

<ul>
<li>派生需求，概念而已</li>
</ul>
</li>
<li>B.Marginal revenue product

<ul>
<li>边际产量值：增加一单位劳力所引起的产值的变化 MRP=P*MP</li>
</ul>
</li>
<li>C.Labor market and firms’ hiring of labor

<ul>
<li>劳动需求曲线=MRP曲线，MRP=P<em>MPL，利润最大化雇用人数：w=MRP=P</em>MP</li>
<li>A)影响需求

<ul>
<li>Price的变动，影响MRP，即需求曲线移动</li>
<li>Technological Change技术变革：技术进步—>MP增加——>MRP增加——>需求增加</li>
<li>Supply of Other factors如果企业有更多的设备（资本），劳力的MP会提高</li>
</ul>
</li>
<li>B)影响供给

<ul>
<li>Changes in Tastes 女性从家庭中走出；啃老族增加</li>
<li>Changes in other opportunities类似产品市场供给的“substitution”，金融行业吸引人，没人做工程师了……</li>
<li>Immigration 类似产品市场供给的“number of sellers”</li>
</ul>
</li>
</ul>
</li>
<li>D.Market distribution of income</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_5]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-5/"/>
    <updated>2015-02-08T22:02:03-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-5</id>
    <content type="html"><![CDATA[<h3>goal part5</h3>

<ul>
<li>Firm behavior and market structure (25%–35%)

<ul>
<li>1.Profit:

<ul>
<li>a.Accounting versus economic profits</li>
<li>b.Normal profit</li>
<li>c.Profit maximization: MR=MC rule</li>
</ul>
</li>
<li>2.Perfect competition

<ul>
<li>a.Profit maximization</li>
<li>b.Short-run supply and shut-down decision</li>
<li>c.Firm and market behaviors in short-run and long-run equilibria</li>
<li>d.Efficiency and perfect competition</li>
</ul>
</li>
<li>3.Monopoly

<ul>
<li>a.Sources of market power</li>
<li>b.Profit maximization</li>
<li>c.Inefficiency of monopoly</li>
<li>d.Price discrimination</li>
</ul>
</li>
<li>4.Oligopoly

<ul>
<li>a.Interdependence, collusion and cartels</li>
<li>b.Game theory and strategic behavior</li>
</ul>
</li>
<li>5.Monopolistic competition

<ul>
<li>a.Product differentiation and role of advertising</li>
<li>b.Profit maximization</li>
<li>c.Short-run and long-run equilibrium</li>
<li>d.Excess capacity and inefficiency</li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li><p>1.Profit:</p>

<ul>
<li><p> a.Accounting versus economic profits</p>

<ul>
<li> 企业都是最求利益最大化的</li>
<li> 会计利润 = 总收益 &ndash; 显性成本</li>
<li> 经济利润 = 显性成本 &ndash; 隐性成本</li>
</ul>
</li>
<li><p> b.Normal profit</p>

<ul>
<li> 经济利润为0</li>
<li> 但是会计利润不为0</li>
</ul>
</li>
<li>c.Profit maximization: MR=MC rule

<ul>
<li>当MR = MC时，利润最大化</li>
</ul>
</li>
</ul>
</li>
<li><p>2.Perfect competition完全竞争</p>

<ul>
<li>特点：有许多买者与卖者，每个企业都无法影响市场价格，是price-taker，因此企业需求曲线是水平的完全弹性的，市场需求曲线向右下方倾斜；进入退出无壁垒，企业在长期无经济利润，因为有利润或损失的话就会有进入或退出直到把利润清零。</li>
<li>a.Profit maximization

<ul>
<li>P=AR是恒等式，因为P=TR/Q,AR=TR/Q。完全竞争市场很特别，企业获得利润最大化的产量是在P=MC=MR=AR时。</li>
</ul>
</li>
<li>b.Short-run supply and shut-down decision

<ul>
<li>短期的企业供给曲线是MC曲线在AVC上方的那段；在短期，如果P&lt;AVC，企业选择停业；市场长期供给曲线是水平的。</li>
</ul>
</li>
<li>c.Firm and market behaviors in short-run and long-run equilibria

<ul>
<li>窍门：单个企业和整个市场的供求成本图相互对应。因为企业是价格接受者，所以企业的价格线应与市场的一致。当市场需求有变化从而影响市场均衡价格，再反映到企业的价格变化，企业就有了短期利润或损失，吸引新企业进入市场或导致旧企业退出，从而反映到市场供给曲线往右或往左移动，进而形成新的市场均衡价格，反复调整后，长期均衡价格会等于minATC，而此时刚好也等于MC。        &ndash; 计算短期profit或loss时，应找准P和ATC，Profit=TR-TC=(P-ATC)*Q</li>
</ul>
</li>
<li>d.Efficiency and perfect competition

<ul>
<li>因为P=MC，所以完全竞争市场有效率。</li>
</ul>
</li>
</ul>
</li>
<li><p>3.Monopoly垄断</p>

<ul>
<li>特点：只有一家企业，因此需求曲线向右下方倾斜；自己定价，是price maker；有壁垒，因此有长期经济利润</li>
<li>a.Sources of market power

<ul>
<li>垄断的三种来源：天然拥有某种资源，如南非钻石；政府给予的特权，如专利保护；自然垄断，由规模经济引起的，如供电。</li>
</ul>
</li>
<li>b.Profit maximization利益最大化

<ul>
<li>先通过MR=MC的条件确定产量Q，再通过需求曲线找到对应的P，这是垄断企业利润最大化的条件。</li>
</ul>
</li>
<li>c.Inefficiency of monopoly 垄断无效率

<ul>
<li>因为产量少于需求并且收取高于期望的价格，所以垄断是效率低的。too little of the production and charges too high a price</li>
<li>P=AR>MR</li>
<li>会画图。知道Revenue maximizing（MR=0的产量），profit maximizing（MR=MC）, efficient maximizing（P=MC）与fair return企业经济利润为0（ATC和D相交）这四种情况下的产量和价格。</li>
</ul>
</li>
<li>d.Price discrimination价格歧视

<ul>
<li>对每个消费者收取不同的价格，MR曲线与D重合，把所有消费者剩余都剥夺过来变成企业自己的利润。</li>
</ul>
</li>
</ul>
</li>
<li><p>4.Oligopoly 寡头</p>

<ul>
<li>a.Interdependence, collusion and cartels卡特尔、联盟、互赖

<ul>
<li> 受反托拉斯法的约束，有market power，企业数量很少；合作的话，如同垄断一般获利最大，如果不合作，则利润不高。</li>
</ul>
</li>
<li>b.Game theory and strategic behavior博弈论和占优策略

<ul>
<li> 会利用支付矩阵分析占优策略。题目中可能一方有占优策略另一方无占优策略，那么没有的那方要先揣测出有占优的那方的意图。</li>
</ul>
</li>
</ul>
</li>
<li><p>5.Monopolistic competition垄断竞争</p>

<ul>
<li>a.Product differentiation and role of advertising

<ul>
<li> 有许多卖者，每个卖者提供略有差别的产品，无壁垒，有决定价格的能力，做广告的必要性</li>
</ul>
</li>
<li>b.Profit maximisation

<ul>
<li>P=AR>MR</li>
</ul>
</li>
<li>c.Short-run and long-run equilibrium

<ul>
<li>短期有profit或loss，吸引新企业进入或旧企业退出市场。</li>
<li>进而达到长期均衡，D与ATC曲线相切，切点刚好是MC=MR投影到D的点，长期利润为0。因为在ATC的下降部分相切，所以有规模经济。</li>
</ul>
</li>
<li>d.Excess capacity and inefficiency

<ul>
<li>垄断竞争无效率体现在：产能过剩 Excess capacity，价格过高 P>MC</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>exercise</h4>

<ul>
<li>1.What is the connection between elasticity and total revenue?

<ul>
<li><strong>elasticity弹性 and total revenue总收益 are related</strong>

<ul>
<li><strong>if a good is elastic in demand, total revenue will increase(decrease) with a price decrease(increase).</strong></li>
<li>2.Explain why the short-run demand curve is usually less elastic than the long-run demand curve?</li>
</ul>
</li>
<li><strong>题意为：为什么短期需求曲线比长期需求曲线更加没弹性。</strong></li>
<li><p><strong>因为你在长期需求是有更多时间来决策，因此会增加你的选择可能性。并且增加需求弹性</strong></p></li>
<li><p>3.Which item in each pair has the larger elasticity of demand? Why?    &ndash; a. <strong>Sports Illustrated</strong> or a magazine    &ndash; b.Vacations or <strong>vacations in Cancun</strong>    &ndash; c.<strong>Broccoli</strong> or vegetables    &ndash; d.<strong>An IUPUI education</strong> or a college education</p></li>
<li>4.Define income elasticity of demand and cross-elasticity of demand.</li>
<li><strong>Income elasticity of demand:</strong>

<ul>
<li><strong>the percentage change in quantity demanded for a given percentage change in income.</strong></li>
</ul>
</li>
<li><strong>cross-elasticity of demand:</strong>

<ul>
<li><strong>the percentage change in the demand for good x when there is a given %change in the price of good y</strong>&ndash; 5.What are the differences between momentary, short-run, and long-run supply? Which is the most elastic? The least elastic?     &ndash; <strong>long run supply is the most elastic in demand, monetary货币 is the least elastic in demand</strong></li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_4]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-4/"/>
    <updated>2015-02-08T21:56:16-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-4</id>
    <content type="html"><![CDATA[<h3>goal detail</h3>

<ul>
<li>Production and costs(10%–15%)

<ul>
<li>1.Production functions: short and long run短期和长期的生产函数</li>
<li>2.Marginal product and diminishing returns边际产量和边际产量递减规律</li>
<li>3.Short-run costs短期成本曲线</li>
<li>4.Long-run costs and economies of scale长期成本曲线和规模经济</li>
<li>5.cost minimising input combination</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li><p>1.Production functions: short and long run短期和长期的生产函数</p>

<ul>
<li>生产函数反映投入个数和产量之间的关系。可以用曲线表示，横坐标为投入如劳动力数量，纵坐标为产量。可以用表格表示，一般如下：

<ul>
<li>难点：经济学上short-term和long-term的分界在于是否有一些投入是固定的，

<ul>
<li>在短期，认为没有时间改变如土地和大型设备等投入，如上表，劳力从0个增加到3个，是在设备和土地都不变的条件下；</li>
<li>在长期，认为有足够的时间调整一切投入，劳力、资本和土地都是变量，因此长期生产函数要复杂很多，可用F=f（a,b,c,……n）。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>2.Marginal product and diminishing returns边际产量和边际产量递减规律</p>

<ul>
<li>MP of A = additional output/ additional input of A</li>
<li>Diminishing returns 和 diminishing marginal product都是边际产量递减的意思。在短期，其他投入保持不变，一种投入不断增加，它的边际产量会逐渐减少，这是拥挤造成的生产率下降。</li>
</ul>
</li>
<li><p>3.Short-run costs短期成本曲线</p>

<ul>
<li>成本曲线反映产量与成本之间的关系。横坐标是产量，纵坐标是各种成本，单位是元。</li>
<li>Q为需求数量</li>
<li><table>
<thead>
<tr>
<th>成本名字</th>
<th>定义</th>
<th>公式</th>
</tr>
</thead>
<tbody>
<tr>
<td>explicit costs显性成本 </td>
<td> 需要企业支付货币的投入成本 </td>
<td> no</td>
</tr>
<tr>
<td>Implicit costs隐性成本 </td>
<td> 不需要企业支付货币的投入成本 </td>
<td> no</td>
</tr>
<tr>
<td>Fixed costs固定成本 </td>
<td> 不随产量变动而变动的成本 </td>
<td> no</td>
</tr>
<tr>
<td>Variable costs可变成本 </td>
<td> 随着变量变动而变动的成本 </td>
<td> no</td>
</tr>
<tr>
<td>Total costs总成本 </td>
<td> no </td>
<td> 总成本 = 固定成本 + 可变成本</td>
</tr>
<tr>
<td>average fixed costs平均固定成本 </td>
<td> no </td>
<td> 平均固定成本 = 固定成本 / Q</td>
</tr>
<tr>
<td>average variable costs平均可变成本 </td>
<td> no </td>
<td> 平均可变成本 = 可变成本 / Q</td>
</tr>
<tr>
<td>average total costs平均总成本 </td>
<td> no </td>
<td> 平均总成本 = 总成本 / Q and 平均总成本 = 平均可变成本 + 平均固定成本</td>
</tr>
<tr>
<td>marginal costs边际成本 </td>
<td> 格外以单位产量所引起的成本的增加 </td>
<td> 边际成本 = 总成本的变化量 / Q的变化量</td>
</tr>
</tbody>
</table>
</li>
<li><p>如果产量为0， 则固定成本 = 总成本</p></li>
<li>平均固定成本随着产量的增加而递减，平均可变成本到最后肯定是递增的</li>
<li>因此平均总成本曲线是U型的</li>
<li><strong>边际成本和平均总成本只有在最低点相交一次</strong></li>
<li>边际成本曲线最后是上扬的

<ul>
<li>因为边际产量递减规律

<ul>
<li>企业一开始的时候生产能力有剩余， 增加单一单位的投入量，边际产量就会高于前一单位的投入这样可能出现一段边际成本下降</li>
<li>生产能力全部被利用之后，再增加边际投入，就会出现边际产量递减，边际成本递增</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>4.Long-run costs and economies of scale长期成本曲线和规模经济</p>

<ul>
<li>长期成本曲线比短期成本平坦，因为长期很多投入都是可变的，企业可以选择不同的生产规模</li>
<li>长期有economic of scale 规模经济：指随着产量增加平均总成本不断下降

<ul>
<li>反之是economic of scale规模不经济</li>
</ul>
</li>
<li>constant return to scale规模收益不变：指产量变动而平均总产量不变，或者投入增加的倍数和产出增加的倍数相同</li>
<li>总的来说，可以从两方面描述，要么随着产量的增加平均总产量如何变化，要么是投入增加和产出增加的比例是否相同</li>
<li>规模经济的产生是因为较高的产量水平允许工人实现专业化

<ul>
<li>专业化可以是工人更加精通某一项工作</li>
</ul>
</li>
</ul>
</li>
<li><p>5.cost minimising input combination</p>

<ul>
<li>成本最小化的要素组合：MP(L)/P(L)=MP(K)/P(K)</li>
</ul>
</li>
</ul>


<h3>exercise</h3>

<ul>
<li><p>1.Define marginal cost. Why does marginal cost eventually increase as total product increases?</p>

<ul>
<li><strong>marginal cost is defined as the change in total cost as one more unit of output is produced.</strong></li>
<li><strong>it eventually declines(衰减) in the short run as a result of decreasing marginal product of labor</strong></li>
</ul>
</li>
<li><p>2.What is the relationship between the long-run average cost curve and the short-run average cost curves? What do economies of scale and diseconomies of scale have on the shape of the long-run average cost curve?</p>

<ul>
<li><strong>long run average cost is the &ldquo;bottom envelop&rdquo; of the short run average cost curves</strong></li>
<li><strong>economic of scale is the decreasing sloped part of the curve, constant return to scale is the horizontal portion of the curve, and decreasing return to scale is the upward sloping part of the curve</strong></li>
</ul>
</li>
<li><p>3.What are the two main differences between the short-run and long-run? Why does diminishing marginal product exist in the short-run, but not the long run?</p>

<ul>
<li><strong>a short run will have at least one inputs is fixed in quantity</strong></li>
<li><strong>a long run will have all input varied in number</strong></li>
</ul>
</li>
<li><p>4.Why is marginal revenue equal to both average revenue and price in a perfectly competitive setting?</p>

<ul>
<li><strong>if the price is constant(say $5), then the next unit you sell will be $5(MR = $5)</strong></li>
<li><strong>if all units are sold at $5, then the average is $5(average revenue = $5)</strong></li>
</ul>
</li>
<li><p>5.Why can&rsquo;t a perfectly competitive firm influence industry price?</p>

<ul>
<li><strong>too many small firm with little market share selling homogeneous goods</strong></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_3]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-3/"/>
    <updated>2015-02-08T21:56:14-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-3</id>
    <content type="html"><![CDATA[<h3>goal part3</h3>

<ul>
<li>Theory of consumer choice消费者选择理论(5%–10%)

<ul>
<li>1.Total utility and marginal utility</li>
<li>2.Utility maximization: equalizing marginal utility per dollar</li>
<li>3.Individual and market demand curves</li>
<li>4.Income and substitution effects</li>
</ul>
</li>
</ul>


<!--more-->


<h4>Total utility and marginal utility总效用和边际效用</h4>

<ul>
<li>边际效用是多做一单位事情，效用的增加量。记住law of decreasing marginal utility 边际效用递减规律。

<ul>
<li><strong>边际效用递减规律</strong>：

<ul>
<li>在一定时间内，随着消费某种商品数量的不断增加，消费者从中得到的总效用是在增加的，但是以递减的速度增加的，即边际效用是递减的；

<ul>
<li>当商品消费量达到一定程度后，总效用达到最大值，边际效用为零，如果继续增加消费，总效用不但不会增加，反而会逐渐减少，此时边际效用变为负数。</li>
</ul>
</li>
</ul>
</li>
<li><strong>需求定理</strong>

<ul>
<li>需求量和价格成反方向变化。因为消费者购买商品是为了取得效用，对边际效用大的商品，消费者就愿意支付较高价格，即消费者购买商品支付价格以边际效用为标准。

<ul>
<li>按边际效用递减规律：购买商品越多，边际效用越小，商品价格越低；反之，购买商品越少，边际效用越大，商品价格越高。因此，<em>商品需求量与价格成反方向变化</em></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>边际的含义是额外增量</li>
<li>在边际效用中，自变量是某物品的消费量，而因变量则是满足程度或效用。

<ul>
<li>消费量额外变动所引起的效用的变动即为边际效用。</li>
</ul>
</li>
<li>消费者消费某种商品<strong>满足程度</strong>的高低主要是通过总效用与边际效用两个指标进行衡量</li>
</ul>


<h4>Utility maximization: equalizing marginal utility per dollar</h4>

<ul>
<li>效用最大化条件：边际效用之比等于价格之比 MU1/MU2 =P1/P2，在预算允许的条件下。

<ul>
<li><strong>效用最大化</strong>，即在個人可支配資源的約束條件下，使個人需要和願望得到最大限度的滿足</li>
</ul>
</li>
<li><strong>利潤的最大化</strong>。這裡不對“利潤”做純經濟學的分析，而僅指把利潤定義為企業生產經營的總收入減去總費用的差額部分</li>
</ul>


<h4>Individual and market demand curves</h4>

<ul>
<li>市场需求曲线是很多个人需求曲线的加和。

<ul>
<li>顯示價格與需求量關係的曲線，是指其他條件相同時，在每一價格水平上買主願意購買的商品量的表或曲線</li>
<li>可以符合需求定理的需求曲線只可以是<strong>向右下傾斜</strong>的</li>
</ul>
</li>
<li><p>需求曲線的斜率是指價格和需求量的實際變化量之比。通過某一點的需求曲線越平坦，需求價格彈性就越大．通過某一點的需求曲線越陡峭，需求價格彈性就越小。</p></li>
<li><p><strong>個人需求曲線</strong>(Individual Demand Curve)：單個消費者願意購買某種產品的數量與其價格之間的關係；</p></li>
<li><strong>市場需求曲線</strong>(Market Demand Curve)：市場上全體消費者願意購買某種產品的數量與其價格之間的關係。市場需求曲線可由行業內各個消費者的個人需求曲線橫向相加求得；</li>
</ul>


<h4>Income and substitution effects</h4>

<ul>
<li><p><strong>Income effect收入效应</strong> ：物品A的价格下降增加了收入的实际购买力（real income），能购买更多的物品A和B。</p></li>
<li><p><strong>substitution effect替代效应</strong>：物品A的价格下降使B相对于A的价格上升，能买更少的B和更多的A。</p></li>
<li><p>窍门：物品A价格下降能购买更多的A（替代效应和收入效应相互加强起到同向作用），但B不确定。</p></li>
</ul>


<h4>exercise</h4>

<ul>
<li>1.What determines a household’s consumption possibilities?

<ul>
<li><strong>an individual&rsquo;s consumption possibilities constraint is its budget constraint</strong></li>
<li><strong>and it is determined by the price of the good and the individual&rsquo;s income</strong></li>
</ul>
</li>
<li>2.How would you answer someone who says that marginal utility theory is useless because utility cannot be observed?

<ul>
<li><strong>因为人民在潜意识（subconscious）中会做决策</strong></li>
<li><strong>even though people do not think using the economic terms, they are still making the decision</strong></li>
</ul>
</li>
<li><p>3.What is consumer surplus? How is consumer surplus calculated?</p>

<ul>
<li><strong>consumer surplus 是你愿意付给这个这个商品的价格和你必须付给这个商品的钱的差值。</strong></li>
</ul>
</li>
<li><p>4.What is a firm and what is the fundamental economic problem that all firms face?</p>

<ul>
<li><strong>firm：people organise production</strong></li>
<li><strong>the main problem is how it can allocate its scare resources to maximise its benefit.</strong></li>
<li><strong>for a non-profit, the goal is often to maximise its output subject to this constraint.</strong></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_2]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-2/"/>
    <updated>2015-02-08T21:55:55-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-2</id>
    <content type="html"><![CDATA[<h3>goal part2</h3>

<ul>
<li>Supply and demand(15%–20%)

<ul>
<li>1.Market equilibrium</li>
<li>2.Determinants of supply and demand</li>
<li>3.Price and quantity controls</li>
<li>4.Elasticity

<ul>
<li>a.Price, income and cross-price elasticities of demand</li>
<li>b.Price elasticity of supply</li>
</ul>
</li>
<li>5.Consumer surplus, producer surplus and market efficiency</li>
<li>6.Tax incidence and deadweight loss</li>
</ul>
</li>
</ul>


<!--more-->


<h4>Market equilibrium市场均衡</h4>

<ul>
<li>equilibrium

<ul>
<li><strong>在市场上，市场供求达到平衡时的状态</strong>

<ul>
<li>​A state of balance between the opposing forces of shortages and surpluses盈餘</li>
</ul>
</li>
<li>equally divide the property to all the society member</li>
</ul>
</li>
<li>efficiency

<ul>
<li>the maximum property that the society can get from limited resources</li>
</ul>
</li>
<li>sometimes we need to balance the income of the rich and poor

<ul>
<li>but this will reduce the stimulation of produce and work

<ul>
<li>and make the limited resource fewer</li>
</ul>
</li>
</ul>
</li>
<li>消费者和生产者根据市场价格决定愿意并且能够购买或者能够提供的商品数量，带着各自的盘算，消费者与生产者一起进入市场，最终决定市场的均衡。</li>
<li>市场均衡图由横纵两条坐标轴和供求两条曲线构成。横坐标代表数量quantity，纵坐标代表价格price。需求曲线是向右下方倾斜的一条直线，反映需求量quantity demanded和价格之间的关系；供给曲线是向右上方倾斜的一条直线，反映供给量quantity supplied和价格之间的关系。曲线相交点代表市场均衡点，即在这个价格下，生产的产品刚好被买走。</li>
</ul>


<h4>Determinants of supply and demand</h4>

<ul>
<li>影响商品供求关系的<em>非价格因素</em>的变动对价格和产量的影响我们称之为供求定理</li>
<li><p>Determinants of Demand</p>

<ul>
<li>​Price of the product

<ul>
<li>primary determinant</li>
<li>doesn’t cause the demand curve to shift, but a change in the quantity demanded</li>
<li>all other determinants can cause the demand curve to shift,  a “decrease/increase in demand”</li>
</ul>
</li>
<li>Income</li>
<li>Consumer tastes</li>
<li>Prices of substitute products</li>
<li>Prices of complementary products</li>
<li>Expected future price of the product</li>
</ul>
</li>
<li><p>Determinants of Supply</p>

<ul>
<li>Price of the product

<ul>
<li>a change in price is a ‘change in the quantity supplied’</li>
<li>a change in anything else, ‘change in supply,’ shifts the      supply curve</li>
</ul>
</li>
<li>Prices of inputs required to make the product</li>
<li>Technology and productivity</li>
<li>Expected future price of the product</li>
</ul>
</li>
<li><p>需求变动对市场均衡的影响</p>

<ul>
<li>需求增加引起均衡价格上升，需求减少引起均衡价格下降。</li>
<li>需求增加引起均衡产量增加，需求减产引起均衡产量减少。</li>
<li>需求的变动引起均衡价格与均衡产量同方向变动。</li>
</ul>
</li>
<li>供给变动对市场均衡的影响

<ul>
<li>供给增加引起均衡价格下降，供给减少引起均衡价格上升。</li>
<li>供给增加引起均衡产量的增加，供给减少引起均衡产量的减少。</li>
<li>供给的变动引起均衡价格反方向变动，供给的变动引起均衡产量同方向变动。</li>
</ul>
</li>
<li>Supply and demand affect each other indirectly, not directly</li>
<li>正常物品的需求和收入成正比

<ul>
<li>收入增加会增加每种价格水平下的需求量，并且使得需求曲线向右移动</li>
<li>低档物品的需求和收入成反比，收入增加会使低档物品的需求曲线向左移动</li>
</ul>
</li>
<li>替代品：一种物品价格的上升引起另外一种物品需求量增减的两种物品</li>
<li>互补品：一种物品价格上升引起梁歪一种物品需求量减少的两种物品</li>
<li>嗜好：对一种物品的嗜好的增加会使那种物品的需求增加，并且使得他的需求曲线向右移动</li>
</ul>


<h4>Price and quantity controls</h4>

<ul>
<li>政府价格和市场调控</li>
<li><strong>price control are legal restriction on how high or how low a market price may go</strong>

<ul>
<li>price ceilings价格天花板

<ul>
<li>设定在市场均衡价格之下，导致供不应求</li>
<li>a maximum price sellers are allowed to charge for a good or service</li>
<li>decreases supply</li>
<li>established under the equilibrium price</li>
</ul>
</li>
<li>price floors价格地板

<ul>
<li>设定在市场均衡价格之上，导致供过于求。</li>
<li>a minimum price buyers are required to pay for a good or service</li>
<li>established above the equilibrium or market price</li>
<li>causes a surplus to develop</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>Elasticity彈性</h3>

<h4>Price, income and cross-price elasticities of demand</h4>

<ul>
<li>需求的价格弹性:<strong>用来衡量需求的数量随商品的价格的变动而变动的情况</strong>

<ul>
<li>通常来说，因为商品价格的下跌会导致需求数量的增加，所以一般情况下需求的价格弹性系数为负数。</li>
<li>注意以絕對值比較彈性強弱

<ul>
<li>Ed 的數值是負數，因為價格與需求量是反向關係 (negative relationship)。在比較 elasticity 的強弱時，是不理會數值前的「負號」的，即是只看 Ed 的絕對值 (absolute value) ，絕對值愈大，所代表的彈性愈大。</li>
</ul>
</li>
<li>彈性是以價格和需求量的改變率計算的

<ul>
<li>例如 Good A 和 Good B 的價格同時上升 $5，而需求量同時下降 8，但由於改變率不同，得出的彈性也就不同。</li>
</ul>
</li>
<li>影响因素

<ul>
<li>替代品的多寡</li>
<li>该物消费支出占总所得的比例</li>
<li>物品耐用性</li>
<li>必需品或奢侈品</li>
<li>商品的定义范围</li>
<li>时间的长短</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>Price elasticity of supply</h4>

<ul>
<li>供給的價格彈性(供給彈性):<strong>表示價格變動1%引起供給量變動的程度</strong></li>
<li>根據經濟學中的供給定理，供給量與價格是同方向變動的，即該商品的價格變動的越大，企業的生產就會隨之變化。</li>
<li>供給的價格彈性可以根據es值的大小分為五種類型。es>1表示供給富於彈性；es＜1表示供給缺乏彈性；es=1表示供給單一彈性或單位彈性；es=∞表示供給完全彈性；es=0表示供給完全無彈性。</li>
<li>影响因素

<ul>
<li>增加產量所需追加生產要素費用的大小。一般地說，若增加產量的投資費用較小，則供給彈性大；反之供給彈性小。</li>
<li>時間的長短

<ul>
<li> 一般在短時期內，廠商只能在固定的廠房設備下增加產量，因而供給量的變動有限，這時供給彈性就小。在長期內，廠商能夠通過調整規模來擴大產量，這時供給彈性將大於同種商品在短期內的供給彈性。</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>Consumer surplus, producer surplus and market efficiency</h4>

<ul>
<li><strong>A market is efficient when it provides the most consumer surplus and the most producer surplus possible.  An inefficient market creates what economists call a deadweight loss.</strong></li>
<li><strong>Consumer surplus</strong>

<ul>
<li>the difference in the market price of a good and how much an individual or individuals would be willing to pay

<ul>
<li>消费者剩余=支付意愿–市场价格</li>
<li>for example

<ul>
<li>a person who is willing to spend $4 on a milk shake but the price is only $3 yielding a surplus of $1.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><strong>producer surplus</strong>

<ul>
<li>for example

<ul>
<li>生产者剩余=市场价格–生产成本</li>
<li>the difference between what it costs to produce a good and what price the market provides.</li>
</ul>
</li>
</ul>
</li>
<li>消费者剩余=支付意愿–市场价格；生产者剩余=市场价格–生产成本</li>
</ul>


<h4>Tax incidence and deadweight loss税收负担和无谓损失</h4>

<ul>
<li>无谓损失是市场扭曲引起的总剩余减少；弹性越大，税收的无谓损失越大。

<ul>
<li>无谓损失又为社会净损失，是指由于市场未处于最优运行状态而引起的社会成本, 也就是当偏离竞争均衡时, 所损失的消费者剩余和生产者剩余</li>
</ul>
</li>
</ul>


<h4>excercise</h4>

<ul>
<li><p>1.What is the difference between a &ldquo;change in demand&rdquo; and a change in &ldquo;quantity demanded.&rdquo;</p>

<ul>
<li><strong>A change in demand需求变动 : to a change in the amount that consumers are willing to buy at every possible price, in term of the demand curve shifts.</strong></li>
<li><strong>A change in the quantity demanded数量需求变动 occurs when the price of the product changes. In this case, in terms of the demand curve, there is a movement along the demand one.</strong></li>
</ul>
</li>
<li><p>2.What is the difference between a &ldquo;change in supply&rdquo; and a change in &ldquo;quantity supplied.&rdquo;</p>

<ul>
<li><strong>A change in supply供求变动 refers to a change in the amount that producers are willing to sell at every possible price, in terms of the supply curve, the supply curve shifts</strong></li>
<li><strong>A change in the quantity supplied供给数量 occurs when the price of the product changes. In this case, in terms of the supply curve, there is a movement along the supply curve.</strong></li>
</ul>
</li>
<li><p>3.What does ceteris paribus mean? How does this relate to supply and demand analysis?</p>

<ul>
<li><strong>Ceteris paribus means &ldquo;with other things the same&rdquo;</strong></li>
<li><strong>By holding all other things constant, and allowing only one of these influences to change, we are able to determine its effect on supply or demand.</strong></li>
</ul>
</li>
<li><p>4.<em>Holding demand constant</em>, what is the only thing that can cause a change in quantity demanded? What are the things that cause a change in demand?</p>

<ul>
<li><strong>the change in quantity demanded go up when the price of the good change</strong></li>
<li><strong>all the influence that cause a shift in the curve, may cause a change in demand</strong>&ndash; 5.How do changes in income affect the demand for a good?</li>
<li><strong>Income changes cause the demand for a good to increase or decrease.</strong></li>
<li><strong>if the good in question is normal, an income increase(decrease) will cause the demand 次品&#8221;, an income increase will lower(increase) the demand for good.</strong>&ndash; 6.How do substitute and complementary goods affect the demand for a good.?</li>
<li><strong>if the price of a 替代品 上升(下降), then the demand for the good in question will 上升(下降).</strong></li>
<li><strong>on the other hand, 如果补给品的价格上升(下降)，the demand for the good in question will下降(上升).</strong></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro_to_microeconomic_1]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-1/"/>
    <updated>2015-02-08T21:53:03-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/08/intro-to-microeconomic-1</id>
    <content type="html"><![CDATA[<h3>useful resource</h3>

<ul>
<li><a href="http://www.apstudynotes.org/microeconomics/outlines/chapter-3-economic-systems/">http://www.apstudynotes.org/microeconomics/outlines/chapter-3-economic-systems/</a></li>
<li><a href="http://wenku.baidu.com/view/beadef03de80d4d8d15a4ffb.html">http://wenku.baidu.com/view/beadef03de80d4d8d15a4ffb.html</a></li>
</ul>


<h3>goal part1</h3>

<ul>
<li>Basic Economic Concepts (8%–14%)

<ul>
<li>A.Scarcity,choice and opportunity costs</li>
<li>B.Production possibilities curve</li>
<li>C.Comparative advantage, specialisation and trade</li>
<li>D.Economic systems</li>
<li>E.Property rights and the role of incentives</li>
<li>F.Marginal analysis</li>
</ul>
</li>
</ul>


<!--more-->


<h4>what is economics</h4>

<ul>
<li>a social science that study how resources are used and is often concerned with how resources can be used to their fullest potential</li>
<li>And microeconomic is concerned with the economic problem faced by individual units within the overall economy.</li>
</ul>


<h4>Scarcity稀缺性,choice and opportunity costs机会成本</h4>

<ul>
<li><strong>Scarcity means the society have limited resource</strong>

<ul>
<li>稀缺性指资源是有限的，相对的说，人类的欲望是无限的，所以经济学正是研究资源应该如何有效efficiently配置的学科。</li>
<li>and economic is to study how to manage your own scarify resource</li>
</ul>
</li>
<li>choice and opportunity costs

<ul>
<li>The opportunity cost of a thing is the cost you need to pay to get it.

<ul>
<li>can also be implement as <strong>the next best alternative given up to acquire something</strong></li>
<li>因为精力有限，人类总是面临选择，为了得到某种东西或做某件事所放弃的另一最优选择叫机会成本。比如我花50块钱去看话剧，成本好像只有50元，但从机会成本的角度考虑，我选择了看话剧，放弃了用这50块钱和时间去做另一件能给我带来很高价值的事情，如金融投资能赚到200元，200元就是机会成本</li>
<li>速记公式：Opportunity Cost of doing A=loss in B/gain in A</li>
</ul>
</li>
<li>when people decide to do something, they need to compare the plan they have.</li>
</ul>
</li>
<li><strong>Opportunity Cost of doing A=loss in B/gain in A</strong></li>
</ul>


<h4>Production possibilities curve生產可能性曲線</h4>

<ul>
<li>is used for resource scarcity and choice measure.

<ul>
<li>and used for measure a country how to allocate the limited resources.</li>
</ul>
</li>
<li>Shows the combinations of two goods that can be produced if the economy uses all of its resources fully and efficiently</li>
<li>important infomation

<ul>
<li>the point on the production possibilities curve

<ul>
<li>can be reached</li>
<li>is efficiency</li>
</ul>
</li>
<li>the point inside the production possibilities curve

<ul>
<li>can be reached</li>
<li>is not enough efficiency</li>
</ul>
</li>
<li>the point outside the production possibilities curve

<ul>
<li>can not be reached</li>
</ul>
</li>
</ul>
</li>
<li>横纵坐标轴分别是两种产品的产量；曲线边界上的点是有效的efficient、边界内的点可以实现但效率低attainable but inefficient、边界外的点代表用现有资源无法生产unattainable（但经济扩张以后可以实现）；</li>
<li>依据一般情况画出的曲线应该是弯的，因为存在着机会成本递增规律law of increasing opportunity cost（生产鞋和电脑的资源不可相互替代），特殊情况下是直的，那就是当生产两种物品的资源可替代substitutable的时候（如冰柜和冰箱），机会成本是恒定的。</li>
<li>生产可能性曲线的斜率越小机会成本越小</li>
<li>经济增长使生产可能性边界向外移动</li>
</ul>


<h4>Comparative advantage, specialisation专业化 and trade</h4>

<ul>
<li>难点是绝对优势和比较优势的区别：

<ul>
<li>前者指用比另一个生产者更少的成本生产某种物品的能力</li>
<li>后者指用比另一个生产者更少的机会成本生产某种物品的能力。</li>
</ul>
</li>
<li>people need to compare before making decision</li>
<li>trade

<ul>
<li><strong>trade create value</strong></li>
<li>trade benefit everyone</li>
<li>people can complete a particular task and use to exchange with the others for something else</li>
</ul>
</li>
<li>And market is a good way organise economic activity

<ul>
<li>use &ldquo;invisible hand&rdquo;

<ul>
<li>the buyer and seller decide the market price together</li>
</ul>
</li>
</ul>
</li>
<li>specialisation专业化指生产方各自专注于生产有比较优势的产品，可以提高产量，进而各方进行贸易，对双方都有好处，即使某一方在所有产品上都有绝对优势。</li>
</ul>


<h4>Economic systems</h4>

<ul>
<li>fundamental question.

<ul>
<li>​What is the best way to use the resources at disposal?</li>
<li>What should be produced given our resources?</li>
<li>Once it is decided to produce a certain set of goods and services, how much of each item should be produced?</li>
<li>Who will get how much of each good and service?</li>
</ul>
</li>
</ul>


<h4>Property rights财产权 and the role of incentives激励</h4>

<ul>
<li>计划经济和市场经济

<ul>
<li>前者的特点是公平equitable，政府管制，中央决定生产多少谁生产谁消费；</li>
<li>后者的特点是自由交易，供给和需求决定价格，市场决定生产多少消费多少，产权是私有的。</li>
<li>人类都会对激励做出反应，所谓上有政策下有对策啦：）</li>
</ul>
</li>
<li><strong>The government can protect property right</strong></li>
<li>when the property of the people is not safe, people will not want to work or produce good.</li>
<li>The miss leading of the market市场失灵

<ul>
<li>the situation that the market can not adjust the resource

<ul>
<li>outside外部性: produce or consume a stuff will affect the outsider&rsquo;s benefit.</li>
<li>market force垄断: single buyer or seller have the ability to affect the market</li>
</ul>
</li>
<li>so in some condition, public policy can improve efficiency.</li>
</ul>
</li>
</ul>


<h4>Marginal analysis 边际分析</h4>

<ul>
<li>marginal action

<ul>
<li><strong>when you come up with a decision, you need to consider the next decision first</strong>

<ul>
<li>I think actually it is the prediction</li>
<li>for example

<ul>
<li>if you want to hire a new worker, you will consider the additional cost that hiring the worker might cost. And the value that the worker might bring you.</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>excercise</h4>

<ul>
<li>1.Scarcity exists in the short run because:

<ul>
<li><strong>the world&rsquo;s resources are in finite supply</strong></li>
</ul>
</li>
<li>2.If a nation is currently operating at a point on its production possibilities curve, in order to increase production of one good, the production of other goods must be:

<ul>
<li><strong>decreased</strong></li>
</ul>
</li>
<li>3.If a nation is currently operating at a point inside its production possibilities curve, it:

<ul>
<li><strong>has unemployment and/or inefficiently employed resources</strong></li>
</ul>
</li>
<li>4.Production efficiency is achieved:

<ul>
<li><strong>if resources are reallocated among the production of goods and services and the output of one good can be increased only by reducing the output of other goods.</strong></li>
</ul>
</li>
<li>5.If nation A commits a larger share of its resources to capital and technological improvements than nation B, then over time <strong><strong><strong> will realise </strong></strong></strong> outward shifts in its production possibilities curve.

<ul>
<li><strong>nation B/smaller</strong></li>
</ul>
</li>
<li>6.The sacrifice or opportunity cost associated with an individual&rsquo;s consumption of an additional good:

<ul>
<li><strong>is the reduction in other goods consumed when an individual has no additional income.</strong></li>
</ul>
</li>
<li>7.How is a nation&rsquo;s production possibilities curve affected in the long run by a boom in both new and existing housing sales in the present?

<ul>
<li><strong>Increased housing production in the present means fewer other goods and services, including capital, are produced. The rate of economic growth is lower than it would have been otherwise, causing the production possibilities curve to shift outward by a smaller amount.</strong></li>
</ul>
</li>
<li>8.Which of the following statements best explains why a nation&rsquo;s consumption possibilities line lies outside of its production possibilities line?

<ul>
<li><strong>If nations specialize in and export goods for which they have a comparative advantage and import goods for which they have a comparative disadvantage, more goods can be obtained through domestic production and trade than from domestic production alone.</strong></li>
</ul>
</li>
<li>9.Which of the following best explains a linear production possibilities curve?

<ul>
<li><strong>The opportunity cost of producing a given class of goods over a period of time remains constant.</strong></li>
</ul>
</li>
<li>10.Suppose a nation produces two types of goods, capital and food. However, assume that in the capital goods industry firm A produces 2 units of capital per worker per week whereas firm B produces 5 units of capital per worker per week. If resources are fully employed, is this nation on its production possibilities curve?

<ul>
<li><strong>No, a worker can be reallocated from firm B to firm A for a net gain of 3 units of capital. Thus, the economy must be inside of its production possibilities curve.</strong></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xapian_tutorial_3]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/06/xapian-tutorial-3/"/>
    <updated>2015-02-06T02:50:50-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/06/xapian-tutorial-3</id>
    <content type="html"><![CDATA[<h4>filter</h4>

<ul>
<li>There is a <code>faceted Search</code>, which is to preview the result of the query in many category.

<ul>
<li>like if we search for &lsquo;apple&rsquo;

<ul>
<li>the result may be classified into two

<ul>
<li>one is apple fruit</li>
<li>one is apple company</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>actually, this is a filter.

<ul>
<li>we can classify before index, and store into index</li>
<li>and use value to filter them when query</li>
</ul>
</li>
</ul>


<!--more-->


<h4>how to build filter value</h4>

<ul>
<li>use <code>Document::add_value</code></li>
</ul>


<h4>how to use filter when query</h4>

<ul>
<li>two ways

<ul>
<li>one is use <code>Xapian::MatchDecider</code>, this return a bool value.

<ul>
<li>or we can use <code>Xapian::ValueSetMatchDecider</code>

<ul>
<li><code>Xapian::ValueSetMatchDecider(slot, inclusive)</code>

<ul>
<li>slot means which slot to filter</li>
<li>inclusive means using filter or reduce</li>
</ul>
</li>
<li>use <code>Xapian::ValueSetMatchDecider::add_value(string)</code>

<ul>
<li>user can decide one or many set of value

<ul>
<li>when document belong to one of these value

<ul>
<li>make it filter or stay</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>use <code>MatchSpy</code></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[public speech note]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/05/public-speech-note/"/>
    <updated>2015-02-05T22:50:10-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/05/public-speech-note</id>
    <content type="html"><![CDATA[<h3>public speech technic note</h3>

<h4>audience</h4>

<ul>
<li>focus on a single person

<ul>
<li>reduce pressure</li>
</ul>
</li>
<li>audience is very important</li>
<li>help emotionally connect to audience</li>
<li>help you visualise one single person to talk to</li>
</ul>


<!--more-->


<h4>venue(speech place)</h4>

<ul>
<li>room dynamic

<ul>
<li>size and shape</li>
<li>how many seats</li>
<li>raised stage</li>
<li>floor plan</li>
<li>anything unusual</li>
</ul>
</li>
<li>audience dynamic

<ul>
<li>broad room style</li>
<li>line style</li>
<li>meeting style</li>
</ul>
</li>
<li>speaker equipment

<ul>
<li>ask for any equipment I may need</li>
</ul>
</li>
</ul>


<h4>develop personal credibility</h4>

<ul>
<li>make people believe you speak</li>
<li>introduction is very important</li>
<li>use confidence and competence to build credibility

<ul>
<li>confidence

<ul>
<li>dress appropriately

<ul>
<li>find an insider to tell you</li>
</ul>
</li>
<li>use non-verbal skills

<ul>
<li>make eye contact</li>
<li>let the audience to look at your body</li>
</ul>
</li>
<li>sound confidence

<ul>
<li>first sound must be clear</li>
</ul>
</li>
</ul>
</li>
<li>demonstrate(prove) competence

<ul>
<li>speak the topic you familiar about</li>
<li>share your experience

<ul>
<li>just a brief detail</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>generate idea for the speech</h4>

<ul>
<li>collect ideas

<ul>
<li>use note</li>
<li>use card</li>
</ul>
</li>
<li>open your mind</li>
<li>note the idea

<ul>
<li>fact and information</li>
<li>stories</li>
<li>things that inspires you</li>
</ul>
</li>
</ul>


<h4>find the story</h4>

<ul>
<li>story trigger

<ul>
<li><strong>something happens to someone</strong>

<ul>
<li>why happen</li>
</ul>
</li>
<li>what is the story behind the number</li>
<li>what did she do differentlyy</li>
</ul>
</li>
<li>who, what, where, when</li>
<li>overcome obstacles</li>
<li>using creativity</li>
<li>tell the story according to the fact</li>
</ul>


<h4>building story broad</h4>

<ul>
<li>recall key details</li>
<li>draw the step</li>
</ul>


<h4>rehearsing(排练)</h4>

<ul>
<li>rehearse the position(sitting or standing)</li>
<li>rehearse the actual clothes</li>
<li>use a real audience</li>
<li>record and watch yourself</li>
<li>listen to yourself</li>
<li>rehearse the real hours</li>
</ul>


<h4>warming up</h4>

<ul>
<li>in the morning

<ul>
<li>do not clearing your throat</li>
<li>get up early</li>
<li>avoid cold drinks</li>
<li>sing, talk or hum(use your voice before speech)</li>
</ul>
</li>
<li>in the afternoon or night

<ul>
<li>save your voice</li>
<li>avoid caffeine</li>
<li>avoid CO2 drink</li>
</ul>
</li>
</ul>


<h4>saying yes to the microphone</h4>

<ul>
<li>test before start</li>
<li>may sound loud to you but not to the audience</li>
</ul>


<h4>nervous</h4>

<ul>
<li>keep hand behind your back and look up</li>
</ul>


<h4>strong opening</h4>

<ul>
<li>cold open

<ul>
<li>ask an open-ended question

<ul>
<li>do not ask yes-no question</li>
</ul>
</li>
<li>open with a story

<ul>
<li>have mystery</li>
</ul>
</li>
<li>tell them to image something

<ul>
<li>make your audience part of your presentation</li>
</ul>
</li>
<li>a quote or a fact

<ul>
<li>risk approach</li>
<li>use surprising fact</li>
</ul>
</li>
</ul>
</li>
<li>common mistake

<ul>
<li>un-original phrases</li>
<li>clearing your throat</li>
<li>technical issue</li>
<li>telling a joke</li>
</ul>
</li>
</ul>


<h4>introducing your agenda</h4>

<ul>
<li>the agenda

<ul>
<li>purpose</li>
<li>topic</li>
<li>participant</li>
<li>length</li>
</ul>
</li>
</ul>


<h4>use more vocal variety</h4>

<ul>
<li>声音起伏</li>
<li>volume

<ul>
<li>break a pattern</li>
</ul>
</li>
</ul>


<h4>eliminating crutch</h4>

<ul>
<li>when feel under pressure

<ul>
<li>try to relax</li>
</ul>
</li>
<li>reduce or avoid stress</li>
</ul>


<h4>how to use props(道具) and visual aids</h4>

<ul>
<li>demonstration

<ul>
<li>showing is far more effective than talking</li>
</ul>
</li>
<li>provide a graphic or chart</li>
<li>for dramatic fact</li>
<li>practise the props

<ul>
<li>if thing go wrong

<ul>
<li>how to recover</li>
</ul>
</li>
</ul>
</li>
<li>presentation is important</li>
</ul>


<h4>strong close</h4>

<ul>
<li>make the end word very clear</li>
<li>short summary</li>
<li>re-state title</li>
<li>call to action</li>
<li>a personal tagline</li>
<li>a quote</li>
<li>a final story

<ul>
<li>emotionally powerful</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xapian_tutorial_2]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/05/xapian-tutorial-2/"/>
    <updated>2015-02-05T19:54:20-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/05/xapian-tutorial-2</id>
    <content type="html"><![CDATA[<h3>The expand of synonym(同义词)</h3>

<ul>
<li>such as ‘I love you‘ and &lsquo;ILU&rsquo;</li>
<li>process to do this

<ul>
<li>Write the synonym into database

<ul>
<li>use <code>WriteDatabase::add_synonym(term,synonym)</code></li>
<li>but we can only do &lsquo;I love you&rsquo; &ndash;> &lsquo;ILU&rsquo;

<ul>
<li>if we want to reverse it, we need to add the reverse version</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>use the synonym when query</h3>

<ul>
<li>use <code>QueryParser::set_database()</code> to set db</li>
<li>when using the <code>QueryParser::set_database()</code>, the second parameter use <code>FLAG_SYNONYM</code> or <code>FLAG_AUTO_SYNONYMS</code></li>
<li><code>FLAG_SYNONYM</code> is the ~WORD format in the query sentence. expend the synonym of the word automatically</li>
<li><code>FLAG_AUTO_SYNONYMS</code> is expend all the phrase, do not need to write ~</li>
</ul>


<!--more-->


<h3>sample</h3>

<ul>
<li>makefile

<ul>
<li></li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>    all:
</span><span class='line'>      g++ -o index -I/usr/local/include -l xapian index.cpp
</span><span class='line'>      g++ -o query -I/usr/local/include -l xapian query.cpp
</span><span class='line'>    clean:
</span><span class='line'>      rm -rf index index_data/ query</span></code></pre></td></tr></table></div></figure>


<ul>
<li>index.cpp</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> #include&lt;xapian.h&gt;
</span><span class='line'> #include&lt;iostream&gt;
</span><span class='line'> #include&lt;string&gt;
</span><span class='line'> using namespace std;
</span><span class='line'> #define CONTENT "70:69， I love you This is man basketball race history the smallest point difference race ， smile to last is east man Chinese 。 Which can be said ， This time is the most famous victory and can be said this is the most lucky resuly 。After the end of the game, the coach of the Chinese aa and The boss bb hang togetherm and the two guy are so happy that the chinese win。"
</span><span class='line'> #define INDEX_PATH "./index_data"
</span><span class='line'> #define WORD1 "I love you"
</span><span class='line'> #define WORD2 "ILU"
</span><span class='line'>int main(int argc, char *argv[]){
</span><span class='line'>try{
</span><span class='line'>  //The text to be indexed
</span><span class='line'>  string content(CONTENT);
</span><span class='line'>
</span><span class='line'>  //open a database and write
</span><span class='line'>  Xapian::WritableDatabase db(string(INDEX_PATH), Xapian::DB_CREATE_OR_OPEN);
</span><span class='line'>  
</span><span class='line'>  //term generator
</span><span class='line'>  Xapian::TermGenerator indexer;
</span><span class='line'>
</span><span class='line'>  //add synonym
</span><span class='line'>  db.add_synonym(string(WORD1), string(WORD2));
</span><span class='line'>
</span><span class='line'>  //Make document
</span><span class='line'>  Xapian::Document doc;
</span><span class='line'>  doc.set_data(content);
</span><span class='line'>  indexer.set_document(doc);
</span><span class='line'>  indexer.index_text(content);
</span><span class='line'>
</span><span class='line'>  //add document to db
</span><span class='line'>  db.add_document(doc);
</span><span class='line'>
</span><span class='line'>  //flush to disk
</span><span class='line'>  db.commit();
</span><span class='line'>
</span><span class='line'>}catch(const Xapian::Error &e){
</span><span class='line'>  cout&lt;&lt;e.get_description()&lt;&lt;endl;
</span><span class='line'>}
</span><span class='line'>return 0;}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>query.cpp</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> #include&lt;xapian.h&gt;
</span><span class='line'> #include&lt;iostream&gt;
</span><span class='line'> #include&lt;string&gt;
</span><span class='line'>using namespace std;
</span><span class='line'> #define QUERY "~ILU AND Chinese"
</span><span class='line'> #define INDEX_PATH "./index_data"
</span><span class='line'> #define F_DOCID 1
</span><span class='line'>int main(){
</span><span class='line'>  
</span><span class='line'>try{
</span><span class='line'>  //The string for query
</span><span class='line'>  string query_str(QUERY);
</span><span class='line'>  //open the database
</span><span class='line'>  Xapian::Database db(string(INDEX_PATH));
</span><span class='line'>  
</span><span class='line'>  //open search handle
</span><span class='line'>  Xapian::Enquire enquire(db);
</span><span class='line'>
</span><span class='line'>  //Parser Query
</span><span class='line'>  Xapian::QueryParser qp;
</span><span class='line'>  qp.set_database(db);
</span><span class='line'>  Xapian::Query query = qp.parse_query(query_str, Xapian::QueryParser::FLAG_SYNONYM);
</span><span class='line'>  cout&lt;&lt;"Query is "&lt;&lt;query.get_description()&lt;&lt;endl;
</span><span class='line'>
</span><span class='line'>  //find the top 10 result
</span><span class='line'>  enquire.set_query(query);
</span><span class='line'>  Xapian::MSet result = enquire.get_mset(0,10);
</span><span class='line'>  cout&lt;&lt;result.get_matches_estimated()&lt;&lt;" result found"&lt;&lt;endl;
</span><span class='line'>
</span><span class='line'>  //print the result
</span><span class='line'>  for(Xapian::MSetIterator iter = result.begin(); iter != result.end(); iter++){
</span><span class='line'>      Xapian::Document doc = iter.get_document();
</span><span class='line'>      cout&lt;&lt;iter.get_rank()&lt;&lt;": docid "&lt;&lt;doc.get_value(F_DOCID)&lt;&lt;", data"&lt;&lt;doc.get_data()&lt;&lt;endl;
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>}catch(const Xapian::Error e){
</span><span class='line'>  cout&lt;&lt;e.get_description()&lt;&lt;endl;
</span><span class='line'>}
</span><span class='line'>return 0;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xapian_tutorial_1]]></title>
    <link href="http://pbking1.github.com/blog/2015/02/05/xapian-tutorial-1/"/>
    <updated>2015-02-05T16:40:48-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/02/05/xapian-tutorial-1</id>
    <content type="html"><![CDATA[<ul>
<li>note:some of the content and code are refer from <a href="http://www.coder4.com/archives/2218">http://www.coder4.com/archives/2218</a></li>
</ul>


<h3>basic index build and search</h3>

<ul>
<li>first of all, xapian is an open source c++ search engine.</li>
<li>also note that xapian is called &ldquo;Zap-in&rdquo;</li>
</ul>


<!--more-->


<h4>basic data structure</h4>

<ul>
<li>used for search

<ul>
<li><code>Xapian::Database</code>

<ul>
<li>used to read index</li>
</ul>
</li>
<li><code>Xapian::Enquire</code>

<ul>
<li>use with Database</li>
<li>use to search</li>
</ul>
</li>
<li><code>Xapian::QueryParser</code>

<ul>
<li>query sentence parser</li>
</ul>
</li>
<li><code>Xapian::Query</code>

<ul>
<li>query</li>
</ul>
</li>
<li><code>Xapian::MSet</code>

<ul>
<li>the result set returned by searching</li>
</ul>
</li>
</ul>
</li>
<li>used for build index

<ul>
<li><code>Xapian::WritableDatabase</code>

<ul>
<li>use for built index</li>
</ul>
</li>
<li><code>Xapian::TermGenerator</code>

<ul>
<li>use for cut sentence, build index.</li>
</ul>
</li>
</ul>
</li>
<li>for both

<ul>
<li><code>Xapian::Document</code>

<ul>
<li>abstract of document</li>
</ul>
</li>
<li> <code>Xapian::SimpleStopper</code>

<ul>
<li> the word used for ending</li>
</ul>
</li>
<li> <code>Xapian::Error</code>

<ul>
<li> exception</li>
<li> use get_description() to get detailed info.</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>how to build index</h4>

<ul>
<li>open a <code>Xapian::WritableDatabase</code></li>
<li>Then prepare for the document

<ul>
<li>use <code>set_data(string)</code> to set data(only one)</li>
<li>use <code>add_value(slot, string)</code> to set field(can have more), slot can not be -1</li>
<li>these two method is only used for storage

<ul>
<li>not used for parse or index</li>
</ul>
</li>
</ul>
</li>
<li>build index field

<ul>
<li>use <code>Document.add_term(word, pos)</code></li>
<li>use <code>Xapian::TermGenerator</code> and <code>.set_document(doc)</code>

<ul>
<li>then pass the string using delimiter space into index_text</li>
<li>then the doc will have the index field of this document</li>
</ul>
</li>
</ul>
</li>
<li>after building the document, import into database</li>
<li>use DB.commit()</li>
</ul>


<h4>how to query</h4>

<ul>
<li>open <code>Xapian::Database</code>, the path is the same as WriteableDatabase</li>
<li>use DB to construct <code>Xapian::Enquire</code></li>
<li>use <code>Xapian::QueryParser</code> to parse the string and generate <code>Xapian::Query</code></li>
<li>use <code>enquire.set_query()</code> to query</li>
<li>get the result set by using <code>enquire.get_mset(start, len)</code>.</li>
<li>use <code>Xapian::MsetIterator</code> to traverse the MSet.

<ul>
<li>use <code>get_rank()</code> to get the rank</li>
<li>use <code>get_document</code> to get the document</li>
</ul>
</li>
</ul>


<h4>query grammer</h4>

<ul>
<li><code>Term | Term | Term</code></li>
<li><code>Term -&gt; Term ~ Term</code>

<ul>
<li><code>~</code> is used for similar word</li>
</ul>
</li>
</ul>


<h4>About field</h4>

<ul>
<li>When building index

<ul>
<li>use <code>Xapian::TermGenerator</code> for example

<ul>
<li>we need to set the <code>TermGenerator.set_database(db)</code></li>
<li>when building the index field

<ul>
<li><code>index_text(text, wdf_inc=1, prefix)</code>

<ul>
<li>The second and third parameter are default</li>
<li>The second is TF increase</li>
<li>The third is prefix</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>When query

<ul>
<li>add mapping using <code>Xapian::QueryParser</code></li>
<li><code>.add_prefix("title", "T")</code></li>
<li>Then the <code>qp.parse_query</code> can have field when query the string</li>
<li>for example

<ul>
<li>&lsquo;title:news AND content:basketball&rsquo;</li>
<li>and now there are two field</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>sample code</h4>

<ul>
<li>create_index.cpp</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>     #include&lt;xapian.h&gt;
</span><span class='line'>  #include&lt;iostream&gt;
</span><span class='line'>  #include&lt;string&gt;
</span><span class='line'>  using namespace std;
</span><span class='line'>
</span><span class='line'>  #define CONTENT "70:69， This is man basketball race history the smallest point difference race ， smile to last is east man Chinese 。 Which can be said ， This time is the most famous victory and can be said this is the most lucky resuly 。After the end of the game, the coach of the Chinese aa and The boss bb hang togetherm and the two guy are so happy that the chinese win。"
</span><span class='line'>
</span><span class='line'>  #define TITLE "This is a news"
</span><span class='line'>
</span><span class='line'>  #define INDEX_PATH "./index_data"
</span><span class='line'>
</span><span class='line'>  #define F_DOCID 1
</span><span class='line'>
</span><span class='line'>  int main(int argc, char *argv[]){
</span><span class='line'>      try{
</span><span class='line'>          //The text to be indexed
</span><span class='line'>          string content(CONTENT);
</span><span class='line'>          string title(TITLE);
</span><span class='line'>
</span><span class='line'>          //open a database and write
</span><span class='line'>          Xapian::WritableDatabase db(string(INDEX_PATH), Xapian::DB_CREATE_OR_OPEN);
</span><span class='line'>          
</span><span class='line'>          //term generator
</span><span class='line'>          Xapian::TermGenerator indexer;
</span><span class='line'>
</span><span class='line'>          //Make document
</span><span class='line'>          Xapian::Document doc;
</span><span class='line'>          doc.add_value(F_DOCID, string("1104"));
</span><span class='line'>          doc.set_data(content);
</span><span class='line'>          indexer.set_document(doc);
</span><span class='line'>          indexer.index_text(title, 1, "T");
</span><span class='line'>          indexer.index_text(content, 1, "C");
</span><span class='line'>
</span><span class='line'>          //add document to db
</span><span class='line'>          db.add_document(doc);
</span><span class='line'>
</span><span class='line'>          //flush to disk
</span><span class='line'>          db.commit();
</span><span class='line'>
</span><span class='line'>      }catch(const Xapian::Error &e){
</span><span class='line'>          cout&lt;&lt;e.get_description()&lt;&lt;endl;
</span><span class='line'>      }
</span><span class='line'>      return 0;
</span><span class='line'>  }
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>search.cpp</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include&lt;xapian.h&gt;
</span><span class='line'>#include&lt;iostream&gt;
</span><span class='line'>#include&lt;string&gt;
</span><span class='line'>using namespace std;
</span><span class='line'>#define QUERY "title:news AND content:70"
</span><span class='line'>#define INDEX_PATH "./index_data"
</span><span class='line'>#define F_DOCID 1
</span><span class='line'>int main(){
</span><span class='line'>  try{
</span><span class='line'>      //The string for query
</span><span class='line'>      string query_str(QUERY);
</span><span class='line'>
</span><span class='line'>      //open the database
</span><span class='line'>      Xapian::Database db(string(INDEX_PATH));
</span><span class='line'>
</span><span class='line'>      //open search handle
</span><span class='line'>      Xapian::Enquire enquire(db);
</span><span class='line'>
</span><span class='line'>      //Parser Query
</span><span class='line'>      Xapian::QueryParser qp;
</span><span class='line'>      qp.add_prefix("title", "T");
</span><span class='line'>      qp.add_prefix("content", "C");
</span><span class='line'>      Xapian::Query query = qp.parse_query(query_str);
</span><span class='line'>      cout&lt;&lt;"Query is "&lt;&lt;query.get_description()&lt;&lt;endl;
</span><span class='line'>
</span><span class='line'>      //find the top 10 result
</span><span class='line'>      enquire.set_query(query);
</span><span class='line'>      Xapian::MSet result = enquire.get_mset(0,10);
</span><span class='line'>      cout&lt;&lt;result.get_matches_estimated()&lt;&lt;" result found"&lt;&lt;endl;
</span><span class='line'>
</span><span class='line'>      //print the result
</span><span class='line'>      for(Xapian::MSetIterator iter = result.begin(); iter != result.end(); iter++){
</span><span class='line'>          Xapian::Document doc = iter.get_document();
</span><span class='line'>          cout&lt;&lt;iter.get_rank()&lt;&lt;": docid "&lt;&lt;doc.get_value(F_DOCID)&lt;&lt;", data"&lt;&lt;doc.get_data()&lt;&lt;endl;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>  }catch(const Xapian::Error e){
</span><span class='line'>      cout&lt;&lt;e.get_description()&lt;&lt;endl;
</span><span class='line'>  }
</span><span class='line'>  return 0;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[difference between malloc and new in C++]]></title>
    <link href="http://pbking1.github.com/blog/2015/01/27/difference-between-malloc-and-new-in-c-plus-plus/"/>
    <updated>2015-01-27T15:30:52-05:00</updated>
    <id>http://pbking1.github.com/blog/2015/01/27/difference-between-malloc-and-new-in-c-plus-plus</id>
    <content type="html"><![CDATA[<h3>new and delete</h3>

<ul>
<li>the way it allocate and release memory

<ul>
<li>the memory is allocate from <code>Free Store</code></li>
<li>will return a fully typed pointer

<ul>
<li>if failed will not return NULL</li>
</ul>
</li>
<li>the compiler will calculate the size</li>
<li>reallocate is not handled intuitively, using copy constructor</li>
<li>whether called malloc and delete can be user defined</li>
<li>can add a new memory allocator to deal with low memory</li>
<li>new and delete can be overwrite legally</li>
<li>use constructor/destructor to initial/destory object</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li><p>new 动态创建和释放数组或者单个对象</p>

<ul>
<li>动态创建对象的时候，只需要指定其数据类型，不必为该对象命名</li>
<li>如果分配失败了，会抛出异常。</li>
<li>new 表达式返回指向该新建对象的指针</li>
<li>我们可以通过这个指针来访问新建的对象</li>
<li>int *p = new int

<ul>
<li>返回类型为int*类型， 分配大小为sizeof(int)</li>
</ul>
</li>
<li>int *p = new int[100]

<ul>
<li>返回类型为int*类型, 分配大小为sizeof(int) * 100</li>
</ul>
</li>
</ul>
</li>
<li><p>三种特殊指针</p>

<ul>
<li>void* 表示未确定类型的指针，更明确的说是指申请内存空间时还不知道user是用来储存什么类型的数据的。</li>
<li>零值指针：值为0的指针。可以是任何一种指针类型。</li>
<li>NULL指针：不提供任何地址信息的指针</li>
</ul>
</li>
<li><p>new 动态创建的对象是可以初始化的。</p>

<ul>
<li>e.g int *p = new int(1000)</li>
<li>如果不初始化，就会使用这个类的默认构造函数来初始化。

<ul>
<li>e.g int *p = new int()  //初始化为0</li>
</ul>
</li>
<li>但是如果对象是内置的，就没有初始化

<ul>
<li>e.g int *p = new int //指向一个没有初始化的int

<ul>
<li>string *str = new string()  //初始化为空串，因为string自带的默认构造函数会初始化为空串</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>delete</p>

<ul>
<li>delete p;

<ul>
<li>但是释放完p的内存之后，p会变成不确定的指针</li>
<li>因此要把p赋值为0

<ul>
<li>明确指针不再指向任何对象</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>malloc and free</h3>

<ul>
<li><p>the way it allocate and release memory</p>

<ul>
<li>the memory is allocate from <code>Heap</code></li>
<li>will return a void pointer

<ul>
<li>will return NULL if failed</li>
</ul>
</li>
<li>the space and size need to be specified(固定)</li>
<li>will not called new/delete</li>
<li>it is simple to reallocate large memory</li>
<li>user can not write code into allocation sequence to help with low memory</li>
<li>malloc/free can not be overriden legally</li>
</ul>
</li>
<li><p>malloc 动态内存分配</p>

<ul>
<li>void *malloc(int size)</li>
<li>向系统申请分配指定size个字节的内存空间</li>
<li>申请之后要检查是否分配成功</li>
<li>不用之后要释放：把纸箱这块内存的指针指向NULL, 防止程序不小心使用了它

<ul>
<li>如果忘了释放就是内存泄露</li>
</ul>
</li>
<li>操作系统中有一个记录空闲内存位置的链表，每次收到程序申请的时候，就会遍历这个链表，找到第一个空间大于申请的空间的堆节点，然后把该节点从链表中删除，把这个节点的空间分配给程序。</li>
<li> int p;

<ul>
<li>p = (int*)malloc(sizeof(int) * 128)</li>
<li>p指针会存储存储单元的首地址</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vi regular expression and data processing(1)]]></title>
    <link href="http://pbking1.github.com/blog/2014/11/21/vi-regular-expression-1/"/>
    <updated>2014-11-21T15:07:04-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/11/21/vi-regular-expression-1</id>
    <content type="html"><![CDATA[<h3>data processing is very important before data mining</h3>

<ul>
<li>like if you are going to do some data mining in the linkedin public profile</li>
<li>1.find out the number of the people that have

<pre><code> - education
 - experience
 - skills
 - have all
</code></pre></li>
<li>2.find out all the skills and list the number of user who own them in a diagram</li>
<li>3.find out all the company number</li>
<li>4.find out all the people that is in US</li>
<li>5.find out all the education level of all people

<pre><code> - like undergraduate, graduate, phd
</code></pre></li>
<li>6.find out all the experience about job numbers

<pre><code> - like 1 job, 2 jobs, 3 jobs
</code></pre></li>
</ul>


<!--more-->


<h3>regular expression in VIM</h3>

<ul>
<li>delete the line that match the particular format

<ul>
<li>like match all the lines in a document that match &lsquo;name: current&rsquo;

<ul>
<li>:%s/^name:\tcurrent.*$//g</li>
<li>:%s/skill_num:0\n//g</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>count the number</h3>

<ul>
<li><p>the number of the education, the number of the experience and the number of the skill</p>

<ul>
<li>like

<ul>
<li>grep &lsquo;skill_num&rsquo; *.txt > ./checklist/skill_num.txt

<ul>
<li>:%s/output[1-9][0-9]*.txt:skill_num://

<ul>
<li>delete the tag</li>
</ul>
</li>
</ul>
</li>
<li>grep &lsquo;experience_num&rsquo; *.txt > checklist/exp_num.txt

<ul>
<li>:%s/output[1-9][0-9]*.txt:experience_number://

<ul>
<li>delete the tag</li>
</ul>
</li>
</ul>
</li>
<li>grep &lsquo;education_nun&rsquo; *.txt > ./checklist/edu_num.txt

<ul>
<li>:%s/output[1-9][0-9]*.txt:education_nun://

<ul>
<li>delete the tag before the number</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>use the number of the education, experience and skills to plot the tendency</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clear all;
</span><span class='line'>clc;
</span><span class='line'>edu = csvread('edu.csv');
</span><span class='line'>exp = csvread('exp.csv');
</span><span class='line'>skill = csvread('skill.csv');
</span><span class='line'>
</span><span class='line'>figure
</span><span class='line'>
</span><span class='line'>%education number
</span><span class='line'>edu_res = zeros(size(edu));
</span><span class='line'>edu = sort(edu);
</span><span class='line'>for i=1:size(edu)-1
</span><span class='line'>   if edu(i) == edu(i + 1)
</span><span class='line'>       edu_res(edu(i)) = edu_res(edu(i)) + 1;
</span><span class='line'>   elseif edu(i) ~= edu(i + 1)
</span><span class='line'>       edu_res(edu(i+1)) = edu_res(edu(i+1)) + 1;
</span><span class='line'>   end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>subplot(3,1,1); %add plot into one image
</span><span class='line'>plot(edu_res(1:15, :));
</span><span class='line'>title('education line plot')
</span><span class='line'>xlabel('index of education number')
</span><span class='line'>ylabel('number of the people')
</span><span class='line'>
</span><span class='line'>%experience number
</span><span class='line'>exp_res = zeros(size(exp));
</span><span class='line'>exp = sort(exp);
</span><span class='line'>for i=1:size(exp)-1
</span><span class='line'>   if exp(i) == exp(i + 1)
</span><span class='line'>       exp_res(exp(i)) = exp_res(exp(i)) + 1;
</span><span class='line'>   elseif exp(i) ~= exp(i + 1)
</span><span class='line'>       exp_res(exp(i+1)) = exp_res(exp(i+1)) + 1;
</span><span class='line'>   end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>subplot(3,1,2); %add plot into one image
</span><span class='line'>plot(exp_res(1:43, :));
</span><span class='line'>title('experience line plot')
</span><span class='line'>xlabel('index of experience number')
</span><span class='line'>ylabel('number of the people')
</span><span class='line'>
</span><span class='line'>%skill number
</span><span class='line'>skill_res = zeros(size(skill));
</span><span class='line'>skill = sort(skill);
</span><span class='line'>for i=1:size(skill)-1
</span><span class='line'>   if skill(i) == skill(i + 1)
</span><span class='line'>       skill_res(skill(i)) = skill_res(skill(i)) + 1;
</span><span class='line'>   elseif skill(i) ~= skill(i + 1)
</span><span class='line'>       skill_res(skill(i+1)) = skill_res(skill(i+1)) + 1;
</span><span class='line'>   end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>subplot(3,1,3); %add plot into one image
</span><span class='line'>plot(skill_res(1:50, :));
</span><span class='line'>title('skill line plot')
</span><span class='line'>xlabel('index of skill number')
</span><span class='line'>ylabel('number of the people')</span></code></pre></td></tr></table></div></figure>


<h3>diff the file</h3>

<ul>
<li>diff whole_file subfile | grep &ldquo;&lt; &rdquo; | sed &rsquo;s/&lt; //g&#8217;

<ul>
<li>using this command can get all the content in the subfile out of the wholefile</li>
</ul>
</li>
</ul>


<h3>if you want to separate one very long string</h3>

<ul>
<li>use &ldquo;\r&rdquo; to replace &ldquo;,&rdquo; not &ldquo;\n&rdquo; in vim</li>
<li>or use

<ul>
<li><code>tr ", " "\n"</code></li>
</ul>
</li>
</ul>


<h3>erase the empty line</h3>

<ul>
<li><code>sed 's/^*$//g' file</code></li>
</ul>


<h3>replace the ^M into \n</h3>

<ul>
<li>use &rsquo;s/\r/\r/&#8217;</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iupui mason high performance mass]]></title>
    <link href="http://pbking1.github.com/blog/2014/11/05/iupui-mason-high-performance-mass/"/>
    <updated>2014-11-05T20:55:25-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/11/05/iupui-mason-high-performance-mass</id>
    <content type="html"><![CDATA[<h3>In the iupui mason server</h3>

<ul>
<li>there are 20 server, each have 10 gigabit ethernet</li>
<li>4 cpu in each server

<ul>
<li>8 core processor each cpu</li>
<li>total 32 core in each server</li>
</ul>
</li>
<li>in the /scratch or /tmp there are total 400 GB disk storage

<ul>
<li>and the file will be delete after 14 days since they are created</li>
<li></li>
</ul>
</li>
</ul>


<!--more-->


<h3>when login</h3>

<ul>
<li>use &ldquo;<a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#117;&#x73;&#x65;&#114;&#x6e;&#97;&#109;&#101;&#64;&#109;&#97;&#x73;&#x6f;&#110;&#x2e;&#105;&#110;&#100;&#x69;&#x61;&#110;&#97;&#46;&#x65;&#x64;&#x75;">&#x75;&#x73;&#101;&#114;&#110;&#97;&#109;&#x65;&#64;&#x6d;&#x61;&#115;&#x6f;&#x6e;&#46;&#105;&#x6e;&#100;&#105;&#97;&#110;&#x61;&#46;&#x65;&#100;&#117;</a>&rdquo;

<ul>
<li>will result in two server

<ul>
<li>h1.mason.indiana.edu</li>
<li>h2.mason.indiana.edu</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>cpu/memory limit</h3>

<ul>
<li>user process on login node are limited to 20 minutes CPU time

<ul>
<li>if exceeded, will be killed automatically</li>
</ul>
</li>
<li>use TORQUE <code>qsub</code> to submit job that need more than 20 minutes cpu time

<ul>
<li><p><code>qsub</code></p>

<ul>
<li><code>qsub -l walltime=10:00:00 job.script</code>

<ul>
<li>for the system default time is 60 minutes

<ul>
<li>so use walltime to use more time</li>
</ul>
</li>
</ul>
</li>
<li><code>qsub -l nodes=1:ppn=2 job.script</code>

<ul>
<li>run the script in a node and using two core processers</li>
</ul>
</li>
<li><code>qsub -l nodes=4:ppn=31,vmem=100gb -l walltime=20:00:00 jobscript.script</code>

<ul>
<li>if use multi commands, use <code>-l</code> to separate the argument</li>
</ul>
</li>
</ul>
</li>
<li><p><code>qstat</code></p>

<ul>
<li><code>qstat -a</code>

<ul>
<li>display all job</li>
</ul>
</li>
<li><code>qstat -n</code>

<ul>
<li>list the nodes allocated to a job</li>
</ul>
</li>
<li><code>qstat -r</code>

<ul>
<li>list the job that are running</li>
</ul>
</li>
<li><code>qstat -u username@host</code>

<ul>
<li>display the job owned by the username</li>
</ul>
</li>
</ul>
</li>
<li><code>qdel</code></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to install python package on redhat without root access]]></title>
    <link href="http://pbking1.github.com/blog/2014/11/01/how-to-install-python-package-on-redhat-without-root-access/"/>
    <updated>2014-11-01T00:01:13-04:00</updated>
    <id>http://pbking1.github.com/blog/2014/11/01/how-to-install-python-package-on-redhat-without-root-access</id>
    <content type="html"><![CDATA[<h3>dependent of scrapy</h3>

<ul>
<li>remember that the scrapt need python2.7 to run</li>
<li>and there will be lots of package need to be installed</li>
</ul>


<h3>What to do when need to install python package on the server without root access</h3>

<ul>
<li>today I went through a problem that I want to have the python package installed on the high performance server but without the root access</li>
<li>and what I need to do is to install the python 2.7.3 first and then install all the package that scrapy need and finaly get scrapy run</li>
</ul>


<!--more-->


<h3>process I use</h3>

<ul>
<li>And one most important things you need to care about is that

<ul>
<li><p>first install python</p>

<ul>
<li>download the python first and compile the package of it.</li>
<li>then remember the export the python path to the .bashrc and .bash_profile</li>
<li>so that when you simply type <code>python</code> it will not use the default setting of the system</li>
<li>or you can type the absolute path of the python and use the python in the bin directory</li>
</ul>
</li>
<li><p>then install the scrapy from source</p>

<ul>
<li><p>but when you finish install the scrapy</p>

<ul>
<li>you will find out that it will tell you that you do not have some package like Twist , zope, interface and lxml, and cssselect</li>
<li>so what you need to do is to fix all this missing stuff</li>
<li>so use <code>wget</code> to download the source file of these missing file and install them</li>
</ul>
</li>
<li><p>the will comes the most difficult part</p>

<ul>
<li>when you try to install the lxml

<ul>
<li>you will find out that the system do not have the require of the lxml package

<ul>
<li>the libxml2 and libxslt</li>
<li>so what you need to do is to download all the file</li>
<li>and build it from source

<ul>
<li>and remember to add prefix and correct all the path error</li>
<li>and it would be a good way to output the error log to a file and analyze them using the <code>&gt;&amp; output file</code></li>
<li><strong>and do not hesitate to modify the Makefile or setup.py file when neccessary</strong></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>also there are problem when try to install cffi and libffi

<ul>
<li>when compile the libffi library

<ul>
<li>remember to include the path of the libffi library when building the cffi

<ul>
<li>use <code>build_ext -l library_absolute_path -l library2_absolute_path</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>after install the scrapy successfully

<ul>
<li>use the scrapy executable file in the bin of the scrapy source code</li>
<li><code>python2.7 ./scrapy crawl linkedin.com</code></li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014_indianapolis_redefined_hackathron]]></title>
    <link href="http://pbking1.github.com/blog/2014/10/30/2014-indianapolis-redefined-hackathron/"/>
    <updated>2014-10-30T21:25:44-04:00</updated>
    <id>http://pbking1.github.com/blog/2014/10/30/2014-indianapolis-redefined-hackathron</id>
    <content type="html"><![CDATA[<h3>The hackathron take 24 hours to write an app that can be used for attracting people to indianapolis</h3>

<ul>
<li>and I first design a python version of app</li>
<li>then I use bootstrap theme to develop a mobile compatible web app with php link to the mysql database.</li>
</ul>


<!--more-->


<h3>The code</h3>

<ul>
<li>I have already post the code in github</li>
<li><a href="https://github.com/pbking1/Intro-to-indy">https://github.com/pbking1/Intro-to-indy</a></li>
</ul>


<h3>The summary</h3>

<ul>
<li>using the bootstrap theme can minimise the work in the front end and make the development focus more on the back end logic or database.</li>
<li>talking to a mentor will definitaly help you develop a better software</li>
<li>read the description document carefully before coding</li>
</ul>

]]></content>
  </entry>
  
</feed>
