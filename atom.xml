<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[KING]]></title>
  <link href="http://pbking1.github.com/atom.xml" rel="self"/>
  <link href="http://pbking1.github.com/"/>
  <updated>2014-05-18T20:12:23+08:00</updated>
  <id>http://pbking1.github.com/</id>
  <author>
    <name><![CDATA[pb]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2014 UC Interview Coding]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/14/2014-uc-interview-coding/"/>
    <updated>2014-05-14T23:30:19+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/14/2014-uc-interview-coding</id>
    <content type="html"><![CDATA[<ul>
<li>有两套题，c++和java，我选了c++</li>
<li>考了树的前序和中序遍历</li>
<li>还有虚函数多态，继承</li>
<li>考了指针引用和（数据类型和数据结构的size， 也就是占用的内存）</li>
</ul>


<h3>笔试题一</h3>

<ul>
<li>在不能用for和while的情况下，找到一串字符串中第一个只出现一次的字符（仅包含26个英文字母）

<ul>
<li>思路：用递归</li>
</ul>
</li>
<li>源码：to be continued&hellip;.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS Tutorial 3 Tabhost]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/14/ios-tutorial-3-tabhost/"/>
    <updated>2014-05-14T21:25:25+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/14/ios-tutorial-3-tabhost</id>
    <content type="html"><![CDATA[<h3>源代码</h3>

<ul>
<li>把数据载入到tableview中，，点击某一个item就可以出发alert对话框。</li>
<li>Cell 的样式也是可以自定义的

<ul>
<li>通过UITableViewCell来设置样式</li>
</ul>
</li>
<li>在<code>AppDelegate.h</code>中</li>
<li>加入mainView的声明

<ul>
<li><strong>注意要加<code>#import "ViewController.h"</code></strong></li>
</ul>
</li>
</ul>


<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;UIKit/UIKit.h&gt;
</span><span class='line'>#import "ViewController.h"
</span><span class='line'>
</span><span class='line'>@interface AppDelegate : UIResponder &lt;UIApplicationDelegate&gt;
</span><span class='line'>
</span><span class='line'>@property (strong, nonatomic) UIWindow *window;
</span><span class='line'>@property (strong, nonatomic) ViewController *mainView;
</span><span class='line'>
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在<code>AppDelegate.m</code>中加入以下代码</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (void)dealloc
</span><span class='line'>{
</span><span class='line'>    [_window release];
</span><span class='line'>    [_mainView release];
</span><span class='line'>    [super dealloc];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
</span><span class='line'>{
</span><span class='line'>    self.window = [[[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]] autorelease];
</span><span class='line'>    self.mainView = [[[ViewController alloc] init] autorelease];
</span><span class='line'>    
</span><span class='line'>    self.window.rootViewController = self.mainView;
</span><span class='line'>    [self.window makeKeyAndVisible];
</span><span class='line'>    // Override point for customization after application launch.
</span><span class='line'>    return YES;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改<code>ViewController.h</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;UIKit/UIKit.h&gt;
</span><span class='line'>
</span><span class='line'>@interface ViewController : UIViewController&lt;UITableViewDataSource, UITableViewDelegate&gt;
</span><span class='line'>
</span><span class='line'>@property (nonatomic, retain) NSMutableArray *datalist;
</span><span class='line'>@property (nonatomic, retain) UITableView *myTableView;
</span><span class='line'>
</span><span class='line'>@end
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>文件<code>ViewController.m</code>如下</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import "ViewController.h"
</span><span class='line'>
</span><span class='line'>@interface ViewController ()
</span><span class='line'>
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>@implementation ViewController
</span><span class='line'>@synthesize datalist;
</span><span class='line'>@synthesize myTableView;
</span><span class='line'>
</span><span class='line'>- (void)viewDidLoad
</span><span class='line'>{
</span><span class='line'>    [super viewDidLoad];
</span><span class='line'>  // Do any additional setup after loading the view, typically from a nib.
</span><span class='line'>    NSMutableArray *list = [NSArray arrayWithObjects:@"武汉",@"上海",@"北京",@"深圳",@"广州",@"重庆",@"香港",@"台海",@"天津", nil];
</span><span class='line'>    self.datalist = list;
</span><span class='line'>    
</span><span class='line'>    UITableView *tableview = [[[UITableView alloc] initWithFrame:self.view.frame style:UITableViewStylePlain] autorelease];
</span><span class='line'>    //set the data source
</span><span class='line'>    tableview.dataSource = self;
</span><span class='line'>    //set the delegate
</span><span class='line'>    tableview.delegate = self;
</span><span class='line'>    //set the background
</span><span class='line'>    //tableview.backgroundView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"Background.png"]];
</span><span class='line'>    self.myTableView = tableview;
</span><span class='line'>    [self.view addSubview:myTableView];
</span><span class='line'>    
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
</span><span class='line'>{
</span><span class='line'>    static NSString *CellWithIdentifier = @"Cell";
</span><span class='line'>    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellWithIdentifier];
</span><span class='line'>    if(cell == nil){
</span><span class='line'>        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue2 reuseIdentifier:CellWithIdentifier];
</span><span class='line'>    }
</span><span class='line'>    NSUInteger row = [indexPath row];
</span><span class='line'>    cell.textLabel.text = [self.datalist objectAtIndex:row];
</span><span class='line'>    return cell;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
</span><span class='line'>{
</span><span class='line'>    return [self.datalist count];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
</span><span class='line'>{
</span><span class='line'>    return 70;  //设置行高
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
</span><span class='line'>{
</span><span class='line'>    NSString *msg = [[NSString alloc] initWithFormat:@"You choose :%@",  [self.datalist objectAtIndex:[indexPath row]]];
</span><span class='line'>    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Alert" message:msg delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
</span><span class='line'>    [msg release];
</span><span class='line'>    [alert show];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
</span><span class='line'>{
</span><span class='line'>    NSLog(@"delete");  //滑动删除
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)didReceiveMemoryWarning
</span><span class='line'>{
</span><span class='line'>    [super didReceiveMemoryWarning];
</span><span class='line'>    // Dispose of any resources that can be recreated.
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@end</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS Tutorial 2]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/14/ios-tutorial-2/"/>
    <updated>2014-05-14T16:34:49+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/14/ios-tutorial-2</id>
    <content type="html"><![CDATA[<ul>
<li>键盘收起以及弹出对话框</li>
<li>在<code>ViewController.h</code>里面加入<code>-(IBAction)View_TouchDown:(id)sender</code>;</li>
</ul>


<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;UIKit/UIKit.h&gt;
</span><span class='line'>
</span><span class='line'>@interface ViewController : UIViewController
</span><span class='line'>
</span><span class='line'>@property (strong, nonatomic) IBOutlet UITextField *tempText;
</span><span class='line'>
</span><span class='line'>-(IBAction)showMessage;
</span><span class='line'>-(IBAction)View_TouchDown:(id)sender;
</span><span class='line'>@end
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>在<code>ViewController.m</code>里面加入以下代码</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- (IBAction)View_TouchDown:(id)sender
</span><span class='line'>{
</span><span class='line'>    [[UIApplication sharedApplication] sendAction:@selector(resignFirstResponder) to:nil from:nil forEvent:nil];
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>得到的全部代码如下</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import "ViewController.h"
</span><span class='line'>
</span><span class='line'>@interface ViewController ()
</span><span class='line'>
</span><span class='line'>@end
</span><span class='line'>
</span><span class='line'>@implementation ViewController
</span><span class='line'>
</span><span class='line'>- (void)viewDidLoad
</span><span class='line'>{
</span><span class='line'>    [super viewDidLoad];
</span><span class='line'>  // Do any additional setup after loading the view, typically from a nib.
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)didReceiveMemoryWarning
</span><span class='line'>{
</span><span class='line'>    [super didReceiveMemoryWarning];
</span><span class='line'>    // Dispose of any resources that can be recreated.
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (IBAction)showMessage  //弹出对话框
</span><span class='line'>{
</span><span class='line'>    UIAlertView *a = [[UIAlertView alloc]
</span><span class='line'>                      initWithTitle:@"I am pb" message:@"hello world" delegate:nil cancelButtonTitle:@"I can do it" otherButtonTitles: nil];
</span><span class='line'>    [a show];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (IBAction)View_TouchDown:(id)sender
</span><span class='line'>{
</span><span class='line'>    [[UIApplication sharedApplication] sendAction:@selector(resignFirstResponder) to:nil from:nil forEvent:nil];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@end
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>最后再在storybroad里面用outlet把整个屏幕和<code>View_TouchDown</code>连接起来就可以了</p></li>
<li><p>Touble shoot</p>

<ul>
<li>1.出现<code>'NSInternalInconsistencyException', reason: 'Could not load NIB in bundle:</code>

<ul>
<li>说明<code>self.viewController = [[[ViewController alloc] initWithNibName:@"name" bundle:nil] autorelease];</code>

<ul>
<li>里面的name写错了

<ul>
<li>要写成和ViewController一样的名字才行。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS Tutorial 1]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/14/ios-tutorial-1/"/>
    <updated>2014-05-14T13:11:01+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/14/ios-tutorial-1</id>
    <content type="html"><![CDATA[<ul>
<li>1.一点基本语法</li>
<li>用NSLog打印，代替printf（也是可以用的）</li>
<li>用NSDate来获取时间</li>
<li>用NSData来把数据char*转成string存起来</li>
</ul>


<!--more-->


<ul>
<li>源码</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;Foundation/Foundation.h&gt;
</span><span class='line'>
</span><span class='line'>int main(int argc, const char * argv[])
</span><span class='line'>{
</span><span class='line'>
</span><span class='line'>    @autoreleasepool {
</span><span class='line'>        
</span><span class='line'>        // insert code here...
</span><span class='line'>        NSLog(@"Hello, World!");
</span><span class='line'>        
</span><span class='line'>    }
</span><span class='line'>    int i;
</span><span class='line'>    for(i = 0; i &lt;= 5; i++)
</span><span class='line'>        NSLog(@"%d\n", i);
</span><span class='line'>   
</span><span class='line'>    NSDate *yesterday = [NSDate dateWithTimeIntervalSinceNow:-(24*60*60)];
</span><span class='line'>    NSLog(@"yesterday is %@", yesterday);
</span><span class='line'>    
</span><span class='line'>    NSDate *tomorrow = [NSDate dateWithTimeIntervalSinceNow:+(24*60*60)];
</span><span class='line'>    NSLog(@"tomorrow is %@", tomorrow);
</span><span class='line'>    
</span><span class='line'>    const char *string = "Hi this is pb";
</span><span class='line'>    NSData *data = [NSData dataWithBytes:string length:strlen(string) + 1];
</span><span class='line'>    NSLog(@"data is %@", data);
</span><span class='line'>    NSLog(@"%lu Bytes string is '%s'", (unsigned long)[data length], [data bytes]);
</span><span class='line'>    return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>2.线程的同步与锁
　　- 要说明线程的同步与锁，最好的例子可能就是多个窗口同时售票的售票系统了。我们知道在java中，使用synchronized来同步，而iphone虽然没有提供类似java下的synchronized关键字，但提供了NSCondition对象接口。</p>

<ul>
<li>查看NSCondition的接口说明可以看出，NSCondition是iphone下的锁对象，所以我们可以使用NSCondition实现iphone中的线程安全。这是来源于网上的一个例子：</li>
</ul>
</li>
<li><p>2.多个窗口同时售票的售票系统代码</p></li>
<li>AppDelegate.h</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import &lt;Cocoa/Cocoa.h&gt;
</span><span class='line'>
</span><span class='line'>@interface AppDelegate : NSObject &lt;NSApplicationDelegate&gt;{
</span><span class='line'>    int tickets;
</span><span class='line'>    int count;
</span><span class='line'>    NSThread *ticketThreadone;
</span><span class='line'>    NSThread *ticketThreadtwo;
</span><span class='line'>    NSCondition *ticketsCondition;
</span><span class='line'>    NSWindow *windows;
</span><span class='line'>    
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>@property (assign) IBOutlet NSWindow *window;
</span><span class='line'>
</span><span class='line'>@end
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>AppDelegate.cpp</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#import "AppDelegate.h"
</span><span class='line'>
</span><span class='line'>@implementation AppDelegate
</span><span class='line'>@synthesize window;
</span><span class='line'>
</span><span class='line'>- (void)applicationDidFinishLaunching:(NSNotification *)aNotification
</span><span class='line'>{
</span><span class='line'>    tickets = 100;
</span><span class='line'>    count = 0;
</span><span class='line'>    
</span><span class='line'>    ticketsCondition = [[NSCondition alloc] init]; //初始化锁对象
</span><span class='line'>    ticketThreadone = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil]; //初始化线程1
</span><span class='line'>    [ticketThreadone setName:@"Thread-1"];
</span><span class='line'>    [ticketThreadone start];
</span><span class='line'>    
</span><span class='line'>    ticketThreadtwo = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil];  //初始化线程2
</span><span class='line'>    [ticketThreadtwo setName:@"Thread-2"];
</span><span class='line'>    [ticketThreadtwo start];
</span><span class='line'>    
</span><span class='line'>    [window makeKeyWindow];  //出错了，无法在窗口中运行，只能在命令行中运行，不知道为什么？求知道的筒子解答下~
</span><span class='line'>    
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)run{
</span><span class='line'>    while(TRUE){
</span><span class='line'>        [ticketsCondition lock];
</span><span class='line'>        if(tickets &gt; 0)
</span><span class='line'>        {
</span><span class='line'>            [NSThread sleepForTimeInterval:0.5];
</span><span class='line'>            count = 100 - tickets;
</span><span class='line'>            NSLog(@"current tickets count are: %d, sell %d, thread name: %@", tickets, count, [[NSThread currentThread] name]);
</span><span class='line'>            tickets--;
</span><span class='line'>        }else
</span><span class='line'>        {
</span><span class='line'>            break;
</span><span class='line'>        }
</span><span class='line'>        [ticketsCondition unlock];
</span><span class='line'>    }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>- (void)dealloc{
</span><span class='line'>    [ticketThreadone release];  //释放内存
</span><span class='line'>    [ticketThreadtwo release];
</span><span class='line'>    [ticketsCondition release];
</span><span class='line'>    [window release];
</span><span class='line'>    [super dealloc];
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>@end
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Trouble shooting</li>
<li><p>1.ARC forbids explicit message send of &lsquo;release&rsquo;
&lsquo;release&rsquo; is unavailable: not available in automatic reference counting mode</p>

<ul>
<li>错误原因：因为我们设置了用ARC来管理内存释放，我们却又调用了release方法去释放对象。</li>
<li>(From the Internet)

<ul>
<li>ARC是iOS 5推出的新功能，全称叫 ARC(Automatic Reference Counting)。简单地说，就是代码中自动加入了retain/release，原先需要手动添加的用来处理内存管理的引用计数的代码可以自动地由编译器完成了。该机制在 iOS 5/ Mac OS X 10.7 开始导入，利用 Xcode4.2 可以使用该机制。简单地理解ARC，就是通过指定的语法，让编译器(LLVM 3.0)在编译代码时，自动生成实例的引用计数管理部分代码。有一点，ARC并不是GC，它只是一种代码静态分析（Static Analyzer）工具。</li>
</ul>
</li>
<li>how to solve it?

<ul>
<li>找到项目中的Build setting

<ul>
<li>把<code>Objective-C Automatic Reference</code>从YES改成NO</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>2.找不到HOME键</p>

<ul>
<li>在模拟器上按<code>Shift+command+h</code></li>
</ul>
</li>
<li><p>3.出现<code>Auto Layout on iOS Versions prior to 6.0</code></p>

<ul>
<li>界面设置问题</li>
<li>找到storybroad

<ul>
<li>打开属性栏，把<code>Use AutoLayout</code>去掉。</li>
</ul>
</li>
</ul>
</li>
<li><p>4.ios7的全屏问题</p>

<ul>
<li>在viewcontroller里面加入以下代码
&#8220;`</li>
<li><p>(void)viewDidLayoutSubviews{</p>

<p>  if ([self respondsToSelector:@selector(topLayoutGuide)]) // iOS 7 or above
  {
      CGFloat top = self.topLayoutGuide.length;
      if(self.view.frame.origin.y == 0){
          // We only want to do this once, or if the view has somehow been &quot;restored&quot; by other code.
          self.view.frame = CGRectMake(self.view.frame.origin.x, self.view.frame.origin.y + top, self.view.frame.size.width, self.view.frame.size.    height &ndash; top);
      }
  }
}
&#8220;`</p></li>
<li>这个只能让上面原有的时间什么的消失，但是从根本上不能解决问题</li>
</ul>
</li>
<li><p>5.如果刚开始打开ios模拟器发现太大了</p>

<ul>
<li>再Window->scale那里可以调整成75%就可以使得模拟器看起来大小比较科学了。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014 Sysu Database Project Step1]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/13/2014-sysu-database-project-step1/"/>
    <updated>2014-05-13T15:20:32+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/13/2014-sysu-database-project-step1</id>
    <content type="html"><![CDATA[<h3>问题描述</h3>

<ul>
<li><strong>任务 1: 不带压缩地导入数据</strong>

<ul>
<li>这个任务要求你实现分页存储机制。

<ul>
<li>此处仅考虑定长的数据类型。对于每一列,需要将所含的定长数据如同数组 一样存储在磁盘上的页中 (更多解释见下文)。每一页的大小是固定的,可以是 4K,8K 或 16K。</li>
</ul>
</li>
<li>在这个任务中,你需要存储 ORDERS 表中的

<ul>
<li>1.O_ORDERKEY</li>
<li>2.O_CUSTKEY</li>
<li>3.O_TOTALPRICE</li>
<li>4.O_SHIPPRIORITY</li>
</ul>
</li>
<li>不同列的数据类型不一样,具体请参考 TPC-H 的文档。存储之后,你需要 提供接口,以便于查询记录。查询时,要求实现给定一条记录的 ORDERKEY, 返回这条记录的 CUSTKEY,TOTALPRICE 和 SHIPPRIORITY。</li>
<li>查询接口的具体要求,请参考提交一节。</li>
<li>这个存储系统必须有能力处理 1G 以上的数据。允许存入内存里的页的数量 为 128。在实现这个限制之外,可以尝试其他限制并做对比。你可能需要学习 LRU 等换页机制来加速数据导入。</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li><strong>任务 2: 外排序和 RLE 压缩</strong>

<ul>
<li>本任务要求使用行程长度编码 (Run-Length Encoding) 方式压缩数据,并 将 ORDERS 表和 CUSTOMER 表以 CUSTKEY 进行 JOIN 操作。在进行压 缩前,需对数据做外排序 (见下文说明)。</li>
</ul>
</li>
</ul>


<h3>存储结构</h3>

<ul>
<li>请注意在这个项目中,磁盘的读写操作都必须以二进制模式进行。</li>
<li>对于一个页,由于数据定长,一列可以以数组形态存在于内存中。例如,按照以下形式声明的数组,

<ul>
<li><code>int page[1024]</code></li>
<li>可以表示一个大小为 4K 的页。使用以下代码,可以将一页写出, <code>fwrite(page, sizeof(int), 1024, f)</code>;</li>
<li>以上代码仅供参考。具体实现时可能情况更为复杂。</li>
</ul>
</li>
<li>对于一个未压缩的页,数据按如下方式按顺序排列,需要读取指定数据时, 通过下标取出对应位置的数据。

<ul>
<li><code>&lt;Val1&gt;&lt;Val2&gt;&lt;Val3&gt;&lt;Val4&gt;...</code></li>
</ul>
</li>
<li>对于压缩的页,则按如下方式排列在数组中。请先自行学习行程长度编码。

<ul>
<li><code>&lt;Val1&gt;&lt;RunLength1&gt;&lt;Val2&gt;&lt;RunLength2&gt;&lt;Val3&gt;&lt;RunLength3&gt;...</code></li>
</ul>
</li>
<li>一页可以是 4K,8K 或 64K。</li>
</ul>


<h3>外排序</h3>

<ul>
<li>在做 JOIN 之前,需要进行外排序。

<ul>
<li>简单地说,需要先分别读进每 128 页 进行排序,得到一个个顺串。然后同时对所有顺串进行归并,归并后的结果即 为排好序的数据。请参考维基百科上的说明自行学习和实现。</li>
</ul>
</li>
<li>外排序需要同时处理 ORDERS 表的 CUSTKEY 列和 ORDERKEY 列,按照 CUSTKEY 进行排列,如下图所示,</li>
<li>排完序后,CUSTKEY 的连续重复项更多了,即可对该列进行 RLE 压缩。 完成压缩后,请统计压缩效率。</li>
<li><img src="http://pbking1.github.com/images/database2014pro/1.png"></li>
</ul>


<h3>step1 code</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include&lt;iostream&gt;
</span><span class='line'>#include&lt;fstream&gt;
</span><span class='line'>#include&lt;string&gt;
</span><span class='line'>#include&lt;algorithm&gt;
</span><span class='line'>#include&lt;cstdlib&gt;
</span><span class='line'>using namespace std;
</span><span class='line'>
</span><span class='line'>struct database_attr{
</span><span class='line'>  int orderkey;
</span><span class='line'>  int custkey;
</span><span class='line'>  int totalprice;
</span><span class='line'>  int prior;
</span><span class='line'>};
</span><span class='line'>database_attr p[1024];
</span><span class='line'>
</span><span class='line'>int main(){
</span><span class='line'>  fstream fin;
</span><span class='line'>  char buf[200];
</span><span class='line'>  string str[10][1001];
</span><span class='line'>  string data[5][1001];
</span><span class='line'>  int data1[5][1001];
</span><span class='line'>  int data2[5][1001];
</span><span class='line'>  fin.open("store_test.tbl");
</span><span class='line'>  int row = 0;
</span><span class='line'>  int col;
</span><span class='line'>  int n = 9;
</span><span class='line'>  while(!fin.eof()){
</span><span class='line'>      row = 0;
</span><span class='line'>      fin.getline(buf, 200, '\n');
</span><span class='line'>      for(int i = 0; buf[i] != '\0';){
</span><span class='line'>          if(buf[i] == '|' && n &gt; 0){
</span><span class='line'>              row++;
</span><span class='line'>              i++;
</span><span class='line'>              n--;
</span><span class='line'>          }else if(buf[i] != '|' && n &gt; 0){
</span><span class='line'>              str[row][col] += buf[i];
</span><span class='line'>              i++;
</span><span class='line'>          }
</span><span class='line'>      }
</span><span class='line'>      n = 9;
</span><span class='line'>      col++;
</span><span class='line'>  }
</span><span class='line'>  
</span><span class='line'>  for(int i = 0; i &lt; 9; i++){
</span><span class='line'>      for(int j = 0; j &lt; 1000; j++){
</span><span class='line'>      //  cout&lt;&lt;str[i][j]&lt;&lt;" ";
</span><span class='line'>      }
</span><span class='line'>      //cout&lt;&lt;endl;
</span><span class='line'>  }
</span><span class='line'>  //store the data in column
</span><span class='line'>  for(int i = 0; i &lt; 9; i++){
</span><span class='line'>      for(int j = 0; j &lt; 1000; j++){
</span><span class='line'>          if(i == 0){
</span><span class='line'>              data[i][j] = str[i][j];
</span><span class='line'>          }
</span><span class='line'>          if(i == 1){
</span><span class='line'>              data[i][j] = str[i][j];
</span><span class='line'>          }
</span><span class='line'>          if(i == 3){
</span><span class='line'>              data[i - 1][j] = str[i][j];
</span><span class='line'>          }
</span><span class='line'>          if(i == 7){
</span><span class='line'>              data[i - 4][j] = str[i][j];
</span><span class='line'>          }       
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  for(int i = 0; i &lt; 4; i++){
</span><span class='line'>      for(int j = 0; j &lt; 1000; j++){
</span><span class='line'>          //cout&lt;&lt;data[i][j]&lt;&lt;" ";
</span><span class='line'>      }
</span><span class='line'>      //cout&lt;&lt;endl;
</span><span class='line'>  }
</span><span class='line'>  //check the data use the index
</span><span class='line'>  /*
</span><span class='line'>  int ok;
</span><span class='line'>  cin&gt;&gt;ok;
</span><span class='line'>  cout&lt;&lt;data[1][ok]&lt;&lt;" "&lt;&lt;data[2][ok]&lt;&lt;" "&lt;&lt;data[3][ok]&lt;&lt;endl;
</span><span class='line'>  */
</span><span class='line'>  fin.close();
</span><span class='line'>  //change the string array into int array
</span><span class='line'>  int i, j;
</span><span class='line'>  for(i = 0; i &lt; 4; i++){
</span><span class='line'>      for(j = 0; j &lt; 1000; j++){
</span><span class='line'>          data1[i][j] = atoi(data[i][j].c_str());
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  for(i = 0; i &lt; 4; i++){
</span><span class='line'>      for(j = 0; j &lt; 1000; j++){
</span><span class='line'>          data2[i][j] = data1[i][j];
</span><span class='line'>          if(j &lt; 10)
</span><span class='line'>              cout&lt;&lt;data2[i][j]&lt;&lt;" ";
</span><span class='line'>      }
</span><span class='line'>      cout&lt;&lt;endl;
</span><span class='line'>  }
</span><span class='line'>  
</span><span class='line'>  //store the array into struct array
</span><span class='line'>  for(i = 0; i &lt; 4; i++){
</span><span class='line'>      for(j = 0; j &lt; 1000; j++){
</span><span class='line'>          p[j].orderkey = data2[0][j];
</span><span class='line'>          p[j].custkey = data2[1][j];
</span><span class='line'>          p[j].totalprice = data2[2][j];
</span><span class='line'>          p[j].prior = data2[3][j];
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>      
</span><span class='line'>  cout&lt;&lt;"The id 1 has "&lt;&lt;p[0].orderkey&lt;&lt;" "&lt;&lt;p[0].custkey&lt;&lt;" "&lt;&lt;p[0].totalprice&lt;&lt;" "&lt;&lt;p[0].prior&lt;&lt;endl;
</span><span class='line'>  return 0;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h3>step2 code</h3>

<ul>
<li>to be continued</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linear_regression_tutorial]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/12/linear-regression-tutorial/"/>
    <updated>2014-05-12T15:23:20+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/12/linear-regression-tutorial</id>
    <content type="html"><![CDATA[<h3>First something about training the data</h3>

<ul>
<li>Training set &ndash;> learning algorithm &ndash;> hypothesis &ndash;> estimated data</li>
<li>And we will use multiple features.

<ul>
<li><img src="http://pbking1.github.com/images/lr_gd/mfeat.png"></li>
</ul>
</li>
</ul>


<h3>What is linear regression</h3>

<ul>
<li>To say the idea in normal, we will have n feature</li>
<li>And what we are going to do is to observe them and suppose that they should be in a linear method.</li>
<li>And we should develop a way to find out the parameter to suit the hypothesis function.</li>
</ul>


<!--more-->


<h3>The first method to solve the problem(Gradient decend)</h3>

<h4>how it works?</h4>

<ul>
<li>There are several ideas

<ul>
<li><strong>learn rate</strong>

<ul>
<li>if too small, the gradient descent will be slow</li>
<li>if too large, the gradient descent will overshoot the minimum.

<ul>
<li>it may be fail to converge, or even diverge</li>
</ul>
</li>
<li><img src="http://pbking1.github.com/images/lr_gd/apha.png"></li>
</ul>
</li>
<li><strong>Cost function(J function)</strong>

<ul>
<li>The cost function has no relationship with the x and y.</li>
<li>and it all depend on the parameter <em>theta</em></li>
<li>and the &frac12; in the front is to make the derivation easier</li>
<li>And the cost function is used to <em>make the err(the err between hypothesis and real data) smaller</em>.</li>
</ul>
</li>
<li><strong>Hypothesis</strong>

<ul>
<li>This function is used to <em>make the function good</em>.</li>
<li>good enough to make the y calculate by the function can came close to the real y.</li>
<li>and we will use the err of them to see whether it is good enough or not.</li>
<li>and with all the data, we sum them.</li>
</ul>
</li>
<li><strong>theta</strong>

<ul>
<li><p>we can see in the following picture</p>

<ul>
<li>suppose that we went down the mountain and we can see all the mountain around us are higher than us</li>
<li>and the theta in the cost function is that we <em>reduce</em> theta value in the theta direction</li>
<li>and the deviation of the cost function on theta i is the distance that we move on theta i direction.</li>
</ul>
</li>
<li><p><img src="http://pbking1.github.com/images/lr_gd/gdpic.png"></p></li>
</ul>
</li>
</ul>
</li>
<li><strong>Basic algorithm</strong>

<ul>
<li>start with some theta0, theta1, theta2&hellip;..</li>
<li>Keep changing theta0, theta1, theta2&hellip;. to reduce J(theta0, theta2&hellip;) until we hopefully end up at a minimum.</li>
<li>And this is the key idea of Gradient descend method</li>
</ul>
</li>
<li><img src="http://pbking1.github.com/images/lr_gd/idea.png"></li>
</ul>


<h3>The cpp code of it</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include&lt;stdlib.h&gt;
</span><span class='line'>#include&lt;stdio.h&gt;
</span><span class='line'>#include&lt;string.h&gt;
</span><span class='line'>#include&lt;math.h&gt;
</span><span class='line'>
</span><span class='line'>#define OUTPUTID 10001
</span><span class='line'>#define BUFFERSIZE 50000
</span><span class='line'>#define ROWNUM 10000
</span><span class='line'>#define COLNUM 385
</span><span class='line'>
</span><span class='line'>double alpha = 0.1;
</span><span class='line'>char buffer[BUFFERSIZE];
</span><span class='line'>const char *delim = ",";
</span><span class='line'>double x[ROWNUM][COLNUM];
</span><span class='line'>double y[ROWNUM];
</span><span class='line'>double result[ROWNUM];
</span><span class='line'>double diff[ROWNUM];
</span><span class='line'>double theta[COLNUM];
</span><span class='line'>double temp[COLNUM];
</span><span class='line'>
</span><span class='line'>void readdata(char *, bool);
</span><span class='line'>void writedata(char *);
</span><span class='line'>void test();
</span><span class='line'>void gradient_descend_train();
</span><span class='line'>
</span><span class='line'>int main(){
</span><span class='line'>  readdata("train.csv", true);
</span><span class='line'>  gradient_descend_train();
</span><span class='line'>  readdata("test.csv", false);
</span><span class='line'>  test();
</span><span class='line'>  writedata("predict.csv");
</span><span class='line'>  return 0;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void readdata(char *filename, bool haspredicted){
</span><span class='line'>  FILE *inputfile = fopen(filename, "r");
</span><span class='line'>
</span><span class='line'>  if(inputfile == NULL){
</span><span class='line'>      system("PAUSE");
</span><span class='line'>      exit(1);
</span><span class='line'>  }
</span><span class='line'>  //drop the first line
</span><span class='line'>  fscanf(inputfile, "%s", buffer);
</span><span class='line'>  //read all lines each
</span><span class='line'>  char *s;
</span><span class='line'>  for(int i = 0; i &lt; ROWNUM; i++){
</span><span class='line'>      
</span><span class='line'>      fscanf(inputfile, "%s", buffer);
</span><span class='line'>      //drop the first column
</span><span class='line'>      strtok(buffer, delim);
</span><span class='line'>      //read the predict y
</span><span class='line'>      if(haspredicted){
</span><span class='line'>          s = strtok(NULL, delim);
</span><span class='line'>          sscanf(s, "%lf", &y[i]);
</span><span class='line'>      }
</span><span class='line'>      //init x0
</span><span class='line'>      x[i][0] = 1;
</span><span class='line'>      //read the matrix
</span><span class='line'>      for(int j = 1; j &lt; COLNUM; j++){
</span><span class='line'>          s = strtok(NULL, delim);
</span><span class='line'>          sscanf(s, "%lf", &x[i][j]);
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  fclose(inputfile);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void writedata(char *filename){
</span><span class='line'>  FILE *outputfile = fopen(filename, "w");
</span><span class='line'>  
</span><span class='line'>  if(outputfile == NULL){
</span><span class='line'>      system("pause");
</span><span class='line'>      exit(1);
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  fprintf(outputfile, "%s,%s\n", "Id", "reference");
</span><span class='line'>  //write the result into file
</span><span class='line'>  for(int i = 0, id = OUTPUTID; i &lt; ROWNUM; i++, id++){
</span><span class='line'>      //cout&lt;&lt;"write the line"&lt;&lt;i + 1&lt;&lt;endl;
</span><span class='line'>      fprintf(outputfile, "%d,%.6lf\n", id, result[i]);
</span><span class='line'>  }
</span><span class='line'>  fclose(outputfile);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void initTheta(){  //init theta
</span><span class='line'>  char *thetafilename = "theta.dat";
</span><span class='line'>  FILE *f = fopen(thetafilename, "r");
</span><span class='line'>  for(int j = 0; j &lt; COLNUM; j++)
</span><span class='line'>      fscanf(f, "%lf", &theta[j]);
</span><span class='line'>  fclose(f);
</span><span class='line'>  //init the theta
</span><span class='line'>  for(int j = 0; j &lt; COLNUM; j++)
</span><span class='line'>      theta[j] = 0;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void saveTheta(){   //save the theta
</span><span class='line'>  FILE *f = fopen("theta.dat", "w");
</span><span class='line'>  for(int j = 0; j &lt; COLNUM; j++)
</span><span class='line'>      fprintf(f, "%lf\n", theta[j]);
</span><span class='line'>  fclose(f);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void calculateResult(){
</span><span class='line'>  for(int i = 0; i &lt; ROWNUM; i++){
</span><span class='line'>      result[i] = 0;
</span><span class='line'>      for(int j = 0; j &lt; COLNUM; j++){
</span><span class='line'>          result[i] += theta[j] * x[i][j];
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>double calculateJ(){
</span><span class='line'>  int turn = 0;
</span><span class='line'>  double cost = 0;
</span><span class='line'>  for(int i = 0; i &lt; ROWNUM; i++){
</span><span class='line'>      diff[i] = result[i] - y[i];
</span><span class='line'>      cost += diff[i]*diff[i];
</span><span class='line'>  }
</span><span class='line'>  cost /= (ROWNUM * 2);
</span><span class='line'>  printf("%5d: J(theta) = %.6lf\n", ++turn, cost);
</span><span class='line'>  return cost;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void updateTheta(){
</span><span class='line'>  double sum;
</span><span class='line'>  for(int j = 0 ; j &lt; COLNUM; j++){
</span><span class='line'>      sum = 0;
</span><span class='line'>      for(int i = 0; i &lt; ROWNUM; i++)
</span><span class='line'>          sum += diff[i] * x[i][j];
</span><span class='line'>      theta[j] -= alpha * sum / ROWNUM;
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void gradient_descend_train(){
</span><span class='line'>  initTheta();
</span><span class='line'>  alpha = 0.1001;
</span><span class='line'>  double cost = 1000;
</span><span class='line'>  while(cost &gt; 26.4){
</span><span class='line'>      calculateResult();
</span><span class='line'>      cost = calculateJ();
</span><span class='line'>      updateTheta();
</span><span class='line'>  }
</span><span class='line'>  saveTheta();
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>void test(){
</span><span class='line'>  calculateResult();
</span><span class='line'>}
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h3>The Second method to solve the problem(normal equation)</h3>

<ul>
<li>This way is a way shown in the statistic learning.</li>
<li>use the minimum square function to do a regression analyse on the data.

<ul>
<li><img src="http://pbking1.github.com/images/lr_gd/nq.png"></li>
<li>and the process is shown : (385<em>10000)</em>(10000<em>385)</em>(385<em>10000)</em>10000<em>1=385</em>1</li>
</ul>
</li>
<li>and we can see the feature normalise in the normal equation function

<ul>
<li><img src="http://pbking1.github.com/images/lr_gd/nfn.png"></li>
</ul>
</li>
</ul>


<h3>The matlab code of it</h3>

<ul>
<li>The main function</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%load the train data
</span><span class='line'>data = load('train.txt');
</span><span class='line'>X = data(:, 3:386);
</span><span class='line'>y = data(:, 2);
</span><span class='line'>m = length(y);
</span><span class='line'>m2 = size(X);
</span><span class='line'>
</span><span class='line'>%load the test data
</span><span class='line'>data2 = load('test.txt');
</span><span class='line'>feat = data2(:, 2:385);
</span><span class='line'>m3 = size(feat);
</span><span class='line'>
</span><span class='line'>sum_test = [0];
</span><span class='line'>
</span><span class='line'>%use the equation to calculate
</span><span class='line'>theta = normaleqn(X, y, w);
</span><span class='line'>
</span><span class='line'>%calculate the result
</span><span class='line'>result = feat * theta;
</span><span class='line'>
</span><span class='line'>csvwrite('aaa_ver3.csv', [linen result]);</span></code></pre></td></tr></table></div></figure>


<ul>
<li>The normal equation function</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function [theta] = normaleqn(x, y, w)
</span><span class='line'>    theta = zeros(size(x, 2), 1);
</span><span class='line'>    %theta = pinv(x' * x + 4000.3 * eye(size(x, 2))) * x' * y;
</span><span class='line'>     %theta = pinv(x' * x + 3.3 * eye(size(x, 2))) * x' * y;
</span><span class='line'>    theta = pinv(x' * x + w * eye(size(x, 2))) * x' * y;
</span><span class='line'>en</span></code></pre></td></tr></table></div></figure>


<h3>The cpp code of it</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Difference Between Data Mining and Machine Learning]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/10/the-difference-between-data-mining-and-machine-learning/"/>
    <updated>2014-05-10T00:00:26+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/10/the-difference-between-data-mining-and-machine-learning</id>
    <content type="html"><![CDATA[<h3>What is machine learning?</h3>

<ul>
<li>Machine learning is is a system that decide the system what to do next

<ul>
<li>but also <strong>improve the system with the answer that exist</strong></li>
</ul>
</li>
<li>It is focus more on a feedback framework.

<ul>
<li>That is to say, the system may be not very smart at first

<ul>
<li>but it may be smarter after training</li>
</ul>
</li>
</ul>
</li>
<li>What&rsquo;s more, this area is one of the most important part in AI.

<ul>
<li>And the first aim to develop this method is that the scientist want to make the computer system ot have enough intelligence to develop AI.</li>
</ul>
</li>
</ul>


<!--more-->


<h3>what is data mining?</h3>

<ul>
<li>Data mining a kind of science that develop through the Internet.

<ul>
<li>And data mining is focusing more on the interaction between database and learning algorithm</li>
</ul>
</li>
<li>And that&rsquo;s why Google is so strong.</li>
<li>And what data mining do is to find the <strong>relation</strong> ship of the phrase in the data.</li>
</ul>


<h3>addition what is AI?</h3>

<ul>
<li>AI is called Artificial Intelligence</li>
<li>And I think that AI should contain the following component

<ul>
<li>Pattern recognition</li>
<li>Data mining</li>
<li>Machine learning</li>
</ul>
</li>
<li>That is to say

<ul>
<li>every thing that is in the area <strong>making decision</strong> is AI.</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Note of ERP Class]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/08/the-note-of-erp-class/"/>
    <updated>2014-05-08T18:41:12+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/08/the-note-of-erp-class</id>
    <content type="html"><![CDATA[<h2>ERP Note</h2>

<pre><code>ERP theory
Business workflow
ERP system modules
Benefits of ERP
ERP  system selection &amp; implementation
ERP project evaluation
Application
</code></pre>

<!--more-->


<h4>1.ERP theory</h4>

<ul>
<li>定义产品架设的方法</li>
<li>识别所有产品自主的要求</li>
<li>定义真实的游戏计划和传送保证（delivery promise）</li>
<li>提供能够真实地被集合在一起的supply chain activities的计划</li>
<li><p>提供正确的结果的计数和有用的管理信息</p></li>
<li><p><strong>MRP 格式</strong></p></li>
<li>A （MPS = To Do List）</li>
<li>*B (BOM = Bill of material)</li>
<li>-C (INV = Available &amp; On Order)</li>
<li><p>=D (Action=Purchase/Produce, When, Quantity)</p></li>
<li><p><strong>Product structure(BOM)</strong></p>

<ul>
<li>data structure model which integrates with the business workflow</li>
</ul>
</li>
<li><p>business 制造的关键是</p>

<ul>
<li>最好的客户服务</li>
<li>最小的存货（inventory）</li>
<li>最高效的操作（low cost）</li>
</ul>
</li>
<li><p>MRP &ndash;> MRPII &ndash;> ERP</p></li>
<li><strong>MRP:Material Requirements Planning</strong>

<ul>
<li>Information platform</li>
<li>inventory mamagement</li>
<li>supply/Demand balance</li>
</ul>
</li>
<li><strong>MRPII:Manufacturing Resource Planning</strong>

<ul>
<li>Material &amp; Accounting integration</li>
<li>cost accounting</li>
<li>decision support</li>
</ul>
</li>
<li><p><strong>ERP:Enterprise Resource Planning</strong></p>

<ul>
<li>Data integration of customers, suppliers and manufacturer</li>
<li>supply chain optimisation</li>
<li>JIT/LEAN/Constraint theory/Value chain</li>
</ul>
</li>
<li><p><strong>Gartner Group&#8217; view on ERP standard functions:</strong></p>

<ul>
<li>1.The integration(集成) functions that exceeding the scope of MRPII</li>
<li>2.Support the mixture manufacturing environment</li>
<li>3.Support proactive monitoring capabilities</li>
<li>4.Support open C/S environment</li>
</ul>
</li>
</ul>


<h4>2.Business Flow</h4>

<ul>
<li>Departmemt</li>
<li>Roles &amp; Responsibilities</li>
<li><strong>Single Source</strong>

<ul>
<li>Data entry responsibity</li>
<li>Minimize errors</li>
</ul>
</li>
<li><p><strong>Data Sharing</strong></p>

<ul>
<li>Single database and rules</li>
<li>authorization
<IMG src="Slide15.JPG" onload="javascript:if(this.width>100){this.width=500;}&ldquo;></li>
</ul>
</li>
<li><p><strong>Data Flow</strong>:Sales Orders, Stock, MRP, Purchase and Manufacturing Plan/Orders</p></li>
<li><strong>Logistics</strong>: Supplier deliver materials, Manufacturing department arrange work orders, Stock in/out</li>
<li><strong>Cash flow</strong>:Stock in(入手)/out &ndash;> cash in(兑现)/out</li>
</ul>


<h4>3.ERP System Moduels</h4>

<ul>
<li><strong>Data Integration</strong>

<ul>
<li>Item master/BOM/Inventory/Item Cost</li>
<li>Customer/Supplier</li>
<li>Purchaser/Sales/Shop Floor</li>
<li>Order Management/Shipping/Contract/Quotation</li>
<li>Invoice/GL Voucher/Aging</li>
</ul>
</li>
<li><p><strong>Business Areas</strong></p>

<ul>
<li>Sales Forecast(营销预告)</li>
<li>MRP plans/Action Message</li>
<li>Order Management

<ul>
<li>Sales Order

<ul>
<li>Credit/Quotation</li>
</ul>
</li>
<li>Purchase Order

<ul>
<li>Quality/Supplier Evaluation</li>
</ul>
</li>
<li>Manufacturing Order

<ul>
<li>ItemIssuing/Receiving/Labor Report/Tracking</li>
</ul>
</li>
</ul>
</li>
<li>Item Cost

<ul>
<li>Standard/Actual</li>
</ul>
</li>
<li>C/L,A/P,A/R integration</li>
</ul>
</li>
<li><p>To be continued&hellip;.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tree Based Ensemble Method Introduction]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/08/tree-based-ensemble-method-introduction/"/>
    <updated>2014-05-08T18:30:07+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/08/tree-based-ensemble-method-introduction</id>
    <content type="html"><![CDATA[<h3>Tree-based ensemble methods</h3>

<pre><code>random forest
gradient boosted decision trees
</code></pre>

<ul>
<li>main idea is greedy algorithm

<ul>
<li>通过构造一棵决策树分类器</li>
</ul>
</li>
<li>随机森林是通过构造10000课树</li>
</ul>


<!--more-->


<h4>决策树</h4>

<ul>
<li>其实就是二叉树</li>
<li>实际应用，一般为二叉树</li>
<li>每个非叶子节点都是一个分割

<ul>
<li>相当于一个分类条件</li>
</ul>
</li>
<li>每个叶子节点都是一类性质相同的样本</li>
<li><p>用同一种数据存在多种构造决策树的情况</p></li>
<li><p>决策树使用来分类的模型</p>

<ul>
<li>相当于svn和LR</li>
</ul>
</li>
<li>如何建树

<ul>
<li>是一种回归分类算法

<ul>
<li>“切分”和“解决”</li>
</ul>
</li>
<li>一开始的时候，所有的训练样本都在根部</li>
<li>然后分类的样本将基于选择的分类属性进行递归。</li>
</ul>
</li>
<li>理论上特征是可以重复选的</li>
<li>怎么找到比较好的树？

<ul>
<li>模型准确率高</li>
<li>找到尽可能最小的数来满足数据

<ul>
<li>分枝少</li>
<li>节点少</li>
</ul>
</li>
<li>occam&rsquo;s Racor：在效果超不多的时候，选比较简单的模型</li>
</ul>
</li>
<li>基本策略

<ul>
<li>贪心

<ul>
<li>当前把每个节点中的最优的特征作为分类标准</li>
<li>这样就不用穷举</li>
<li>评估

<ul>
<li>基尼系数（Gini index）</li>
<li>信息增益

<ul>
<li>用熵来衡量</li>
<li>混乱程度

<ul>
<li>如果容易分别出那个分类多，则混乱程度小</li>
<li>反之同理</li>
</ul>
</li>
<li>e.g 99/1（小） 50/50（大）</li>
</ul>
</li>
<li>则把每个叶子节点的熵都算出来

<ul>
<li>然后整棵树的熵则是用所有叶子节点的熵加权</li>
</ul>
</li>
<li>把分割前的熵减掉分割之后的，就是信息增益

<ul>
<li>如果比较大，那么就比较好</li>
</ul>
</li>
</ul>
</li>
<li> Gini index

<ul>
<li> 把叶子节点的熵换掉</li>
<li> 换成基尼系数</li>
<li> 基本上也是混乱度</li>
<li> 只是公式不一样了</li>
</ul>
</li>
<li> 整棵树的Gini系数是加权的分支的基尼</li>
<li> 如何防止overfitting？

<ul>
<li> 早一点停止树的增长</li>
<li> 先把所有节点来构造树，然后用的是90%的样本

<ul>
<li> 然后用剩下的样本来检验效果</li>
<li> 但是太慢了</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Bagging

<ul>
<li>构造k棵树</li>
<li>每棵树在1000各样本中随机选900个,构造决策树（只筛选样本）

<ul>
<li>然后把所有树的据结果统计，如果是分类问题，就少数服从多数。</li>
<li>随机选出的数据室可以重复的。</li>
</ul>
</li>
<li>如果是回归问题，则最终直接相加</li>
</ul>
</li>
<li><p>random forest</p>

<ul>
<li>不使用全部特征</li>
<li>不单只筛选样本，也筛选特征。</li>
<li>e.g 每次只用随机抽取的70%的样本，只用50%随机抽取的特征，来建立决策树</li>
<li>是目前分类回归中最好的off-the-shelf的算法

<ul>
<li>即拿即用</li>
</ul>
</li>
</ul>
</li>
<li><p>这两个算法加上boosting的不同在于训练集的构造的不同。</p></li>
<li>Boosting

<ul>
<li>结果是把每棵决策树的结果加权加起来</li>
<li>所有样本的权值加起来为1</li>
<li>对那些错的样本，权值是比较大的</li>
<li>缺点是在高噪声的环境下效果很不好

<ul>
<li>优点是在低噪声环境下效果很好</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Idea of MVC]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/03/basic-idea-of-mvc/"/>
    <updated>2014-05-03T21:21:20+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/03/basic-idea-of-mvc</id>
    <content type="html"><![CDATA[<h3>What is MVC?</h3>

<ul>
<li>MVC模式（Model-View-Controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。</li>
<li>MVC在这几年应该被非常多的人所熟悉了，因为相当多的web框架采用的是这套架构，此外，早在MFC横行的年代，MFC所采用的document/view架构也是MVC架构的变种。包括QT，它的model/view亦是如此。只不过它们都将MVC中的view和controller的功能整合到了一起。</li>
<li>MVC的全称是model-view-controller architecture，最早被用在了smalltalk语言中。MVC最适合用在交互式的应用程序中。</li>
</ul>


<!--more-->


<h3>The component of it</h3>

<ul>
<li>View

<ul>
<li>V：View，就是所谓的视图，是用户看到并与之交互的界面。对老式的Web应用程序来说，视图就是由HTML元素组成的界面，在新式的Web应用程序中，HTML依旧在视图中扮演着重要的角色，但一些新的技术已层出不穷，它们包括Macromedia Flash和象XHTML，XML/XSL，WML等一些标识语言和Web services.</li>
</ul>
</li>
<li>Model

<ul>
<li>M：Model，就是所谓的模型，表示企业数据和业务规则。在MVC的三个部件中，模型拥有最多的处理任务。例如它可能用来处理数据库。被模型返回的数据是中立的，就是说模型与数据格式无关，这样一个模型能为多个视图提供数据。由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。</li>
</ul>
</li>
<li>Controller

<ul>
<li>C：Controller，就是所谓的控制管理器，是用来同步M与V的。控制器接受用户的输入并调用模型和视图去完成用户的需求。所以当单击Web页面中的超链接和发送HTML表单时，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后用确定用哪个视图来显示模型处理返回的数据。</li>
</ul>
</li>
</ul>


<h3>MVC architecture</h3>

<ul>
<li>从下图中，可以看出控制器就是一个中枢，MVC的处理过程就是在用户产生行为，提交表单的时候，由Controller来制定哪一个Model来对用户行为进行处理，并且在处理后将结果返回给View，用以给用户进行显示。</li>
<li><img src="http://pbking1.github.com/images/system_anaylze_mvc1.png"></li>
</ul>


<h3>Something important about MVC</h3>

<ul>
<li>1.MVC将数据的维护和数据的呈现，与用户的交互割裂了。Model负责的是数据的维护，就好比是DB和文件要保存数据一样，可以认为它是process。而view负责的是数据的呈现，把数据通过某种形式在用户面前展现，把它看做是output。

<ul>
<li>而controller负责的是处理用户的输入。它提供一个窗口或者是控件供用户输入数据，它就是input。所以，一个MVC架构，就是将交互式程序的process，input和output解耦合。</li>
</ul>
</li>
<li>2.第二点更为重要，就是model与view和controller之间的联系。任何一个MVC框架都必须提供一个“change-propagation mechenism”(变更-传播机制)。而这个变更-传播机制是MVC框架中model和view以及controller之间的唯一的联系（The  change-propagation mechanism  is  the  only  link  between  the model and the views and controllers）。

<ul>
<li>比如说，一个用户通过controller改变了model中的数据，那么model会使用变更-传播机制来通知和它有关的view和controller，使得view去刷新数据和重新显示。</li>
<li>有很多人总是对于MVC架构不能够熟练掌握，核心问题就在于他在使用MVC架构的时候是看不到变更-传播系统的，所以对于MVC架构的内在运行机制无法了解。</li>
</ul>
</li>
</ul>


<h3>The process of MVC</h3>

<ul>
<li><img src="http://pbking1.github.com/images/system_anaylze_mvc2.png"></li>
<li>1.用户操作controller，相当于调用controller的handleEvent函数；</li>
<li>2.handleEvent函数实际上调用的是model中的成员函数，对model中的数据进行操作；</li>
<li>3.model中的数据被调用完成后，model会执行自身的notify函数；</li>
<li>4.notify函数会调用和这个model有关的所有view和controller的update函数；</li>
<li>5.update函数会调用各自的display函数和getData函数；</li>
<li>6.当这一切都完成时，handleEvent才返回；</li>
</ul>


<h3>MVC usage</h3>

<ul>
<li><p>Android中界面部分也采用了当前比较流行的MVC框架，在Android中：</p>

<ul>
<li>视图（View）

<ul>
<li>一般采用XML文件进行界面的描述，使用的时候可以非常方便的引入。当然，如何你对Android了解的比较的多了话，就一定可以想到在Android中也可以使用JavaScript+HTML等的方式作为View层，当然这里需要进行Java和JavaScript之间的通信，幸运的是，Android提供了它们之间非常方便的通信实现。</li>
</ul>
</li>
<li>控制器（Controller）

<ul>
<li>Android的控制层的重任通常落在了众多的Acitvity的肩上，这句话也就暗含了不要在Acitivity中写代码，要通过Activity交割Model业务逻辑层处理，这样做的另外一个原因是Android中的Acitivity的响应时间是5s，如果耗时的操作放在这里，程序就很容易被回收掉。</li>
</ul>
</li>
<li>模型（Model）

<ul>
<li>对数据库的操作、对网络等的操作都应该在Model里面处理，当然对业务计算等操作也是必须放在的该层的。就是应用程序中二进制的数据。</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C Pointer Tutorial (1)]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/25/c-pointer-tutorial-1/"/>
    <updated>2014-04-25T13:41:01+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/25/c-pointer-tutorial-1</id>
    <content type="html"><![CDATA[<h3>First is the basic</h3>

<ul>
<li>About <code>#</code>

<ul>
<li>these code are processed by the preprocessor</li>
<li>After the preprocessor read the code, the preprocessor directives will deal with it</li>
<li>then give the main code that are dealed with by the preprocessor directives to the complier</li>
<li>like <code>#include &lt;stdio.h&gt;</code>

<ul>
<li>It means that use the content in the stdio.h to replace the <code>#</code></li>
</ul>
</li>
</ul>
</li>
<li>About <code>const</code>

<ul>
<li>the value that is named const can not be modified</li>
<li>and it would be better to use <code>const</code> than <code>define</code> to define some const value.</li>
</ul>
</li>
<li><p>About passing the value</p>

<ul>
<li>in C programming language

<ul>
<li>all the array is passed using <strong>reference</strong>(if the value change in the function, it will change.)</li>
<li>and all the value and const value are passed using <strong>value</strong>(if the value change in the function, it will <strong>not</strong> change.)</li>
</ul>
</li>
</ul>
</li>
<li><p>About string I/O</p>

<ul>
<li><code>gets</code>

<ul>
<li>it is used to read a line in the content and store it as a parameter to pass to the array</li>
<li>the input line contains: a string and a newline</li>
</ul>
</li>
<li><code>puts</code></li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li>About <code>*</code>

<ul>
<li><strong>the pointer point the address of a value that is stored in the memory</strong></li>
</ul>
</li>
</ul>


<h3>data type</h3>

<ul>
<li>In C programming language, there are only 4 basic data type

<ul>
<li>int, float, pointer and polymerization</li>
</ul>
</li>
<li><strong>INT</strong>

<ul>
<li>contains : char, short, int and long int</li>
<li>signed and ubsigned</li>
<li>thr range of the variable</li>
</ul>


<table>
<thead>
<tr>
<th>  type</th>
<th>range</th>
</tr>
</thead>
<tbody>
<tr>
<td>  char</td>
<td>0~127</td>
</tr>
<tr>
<td>  signed char</td>
<td>-127~127</td>
</tr>
<tr>
<td>  unsigned char</td>
<td> 0~255</td>
</tr>
<tr>
<td>  short int</td>
<td>-32767~32767</td>
</tr>
<tr>
<td>  unsigned short int</td>
<td>0~65535</td>
</tr>
<tr>
<td>  int</td>
<td>-32767~32767</td>
</tr>
<tr>
<td>  unsigned int</td>
<td>0~65535</td>
</tr>
<tr>
<td>  long int </td>
<td>-2147483647~2147483647</td>
</tr>
<tr>
<td>  unsigned long int </td>
<td> 0~4294967295</td>
</tr>
</tbody>
</table>


<ul>
<li>short int is at least 16 bits</li>
<li>long int is at least 32 bits</li>
<li>if the computer is 32 bits then int is 32 bits

<ul>
<li>else if the computer is 64 bits than the int is 32 bits</li>
</ul>
</li>
<li>The range difference in difference kinds of machine</li>
</ul>


<table>
<thead>
<tr>
<th>  data type</th>
<th>32 bits compiler</th>
<th>64 bits compiler</th>
</tr>
</thead>
<tbody>
<tr>
<td>  char</td>
<td>1 byte </td>
<td> 1 byte</td>
</tr>
<tr>
<td>  char *</td>
<td>4 bytes</td>
<td> 8bytes</td>
</tr>
<tr>
<td>  short int</td>
<td>2 bytes</td>
<td>2 bytes</td>
</tr>
<tr>
<td>  int</td>
<td>4 bytes</td>
<td>4 bytes</td>
</tr>
<tr>
<td>  unsigned int</td>
<td>4 bytes </td>
<td> 4 bytes</td>
</tr>
<tr>
<td>  float </td>
<td> 4 bytes </td>
<td> 4 bytes</td>
</tr>
<tr>
<td>  double </td>
<td> 8 bytes </td>
<td> 8 bytes</td>
</tr>
<tr>
<td>  long </td>
<td> 4 bytes </td>
<td> 4 bytes</td>
</tr>
<tr>
<td>  long long </td>
<td> 8 bytes </td>
<td> 8 bytes</td>
</tr>
<tr>
<td>  unsigned long </td>
<td> 4 bytes </td>
<td> 8 bytes </td>
</tr>
</tbody>
</table>


<ul>
<li>use <code>sizeof(data type)</code> to get the length of the data type</li>
<li>add <code>0</code> before number to make it octal number</li>
<li>add <code>0x</code> before number to make it hexadecimal number</li>
<li>add <code>L</code> before character to make it wider charactor literal(it the environment support)

<ul>
<li>e.g <code>L'X'</code></li>
</ul>
</li>
</ul>
</li>
<li><strong>FLOAT</strong>

<ul>
<li>contains : float, double, long double</li>
<li>range : 10^-37 ~ 10<sup>37</sup></li>
<li>in</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog on Github Page]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/20/blog-on-github-page/"/>
    <updated>2014-04-20T13:32:38+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/20/blog-on-github-page</id>
    <content type="html"><![CDATA[<h3>什么是github？</h3>

<p><img src="http://pbking1.github.com/images/github1.png"></p>

<ul>
<li>是一个免费的用与存放git版本控制的软件代码和内容项目。</li>
<li>每个项目都有一个主页，列出项目的源文件</li>
</ul>


<h3>什么是github page？</h3>

<ul>
<li>为了使的网页简洁易懂，github就设计了pages功能</li>
<li>pages功能允许用户自定义项目首页，用来代替默认的源码列表

<ul>
<li>也就是说github page可以被认为是用户编写的，托管在github上的静态网页。</li>
</ul>
</li>
<li>github提供模板，允许站内生成网页，但也允许用户自己编写网页，然后上传。

<ul>
<li>但是这种上传并不是单纯的上传，而是会经过Jekyll程序的再处理。</li>
</ul>
</li>
</ul>


<!--more-->


<p><img src="http://pbking1.github.com/images/git2.png"></p>

<h3>什么是jekyll?</h3>

<p><img src="http://pbking1.github.com/images/jekyll1.png"></p>

<ul>
<li>Jekyll（发音/&lsquo;dʒiːk əl/，&#8221;杰克尔&#8221;)</li>
<li>jekyll是一个静态站点生成器</li>
<li>它会根据网页源码生成静态文件。它提供了模板、变量、插件等功能，所以实际上可以用来编写整个网站。</li>
<li>因此

<ul>
<li>你先在本地编写符合Jekyll规范的网站源码，然后上传到github，由github生成并托管整个网站。</li>
</ul>
</li>
<li>但是由于他生成的是静态网页，因此要添加评论功能或者其他的选择较少</li>
<li><p>并且没有数据库，所以如果网站也越大，生成时间越长。</p></li>
<li><p>目录结构</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/jekyll_demo
</span><span class='line'>　　　　|--　_config.yml
</span><span class='line'>　　　　|--　_layouts
</span><span class='line'>　　　　|　　　|--　default.html 
</span><span class='line'>　　　　|--　_posts
</span><span class='line'>　　　　|　　　|--　2012-08-25-hello-world.html
</span><span class='line'>　　　　|--　index.html</span></code></pre></td></tr></table></div></figure>


<p></p>

<ul>
<li>通过简单的几条指令就可以更新博客了</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m "first post"
</span><span class='line'>git remote add origin https://github.com/username/jekyll_demo.git
</span><span class='line'>git push origin gh-pages</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 Uml Homework of System Analyze and Design]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/20/10-uml-homework-of-system-analyze-and-design/"/>
    <updated>2014-04-20T12:57:18+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/20/10-uml-homework-of-system-analyze-and-design</id>
    <content type="html"><![CDATA[<h3>1. 概念类图（Conceptual Class Diagram / Domian Model）</h3>

<ul>
<li><p>实验目的：</p>

<ul>
<li><ol>
<li>掌握概念类图的涵义和内容</li>
</ol>
</li>
<li><ol>
<li>掌握概念类图的绘制方法</li>
</ol>
</li>
<li><ol>
<li>掌握概念类图的使用范围</li>
</ol>
</li>
</ul>
</li>
<li><p>实验内容：</p></li>
<li><ol>
<li>Read the game description of &ldquo;Priests and Devils&rdquo; .</li>
</ol>
</li>
<li><p>Priests and Devils
  Priests and Devils is a puzzle game in which you will help the Priests and Devils to cross the river within the time limit. There are 3 priests and 3 devils at one side of the river. They all want to get to the other side of this river, but there is only one boat and this boat can only carry two persons each time. And there must be one person steering the boat from one side to the other side. In the flash game, you can click on them to move them and click the go button to move the boat to the other direction. If the priests are out numbered by the devils on either side of the river, they get killed and the game is over. You can try it in many ways. Keep all priests alive! Good luck!</p></li>
<li><p>and play the game ( <a href="http://www.flash-game.net/game/2535/priests-and-devils.html">http://www.flash-game.net/game/2535/priests-and-devils.html</a> ) first.</p></li>
<li><ol>
<li>识别游戏中出现的概念，并画出概念类图。要求给出类、属性、以及类之间的关联（建议有多重性）。</li>
</ol>
</li>
</ul>


<!--more-->


<ul>
<li>首先概念类图就是领域模型,是对领域内的概念类或者现实世界 对象的可视化表示。并且领域模型并不是对软件对象的描述,他是现 实世界领域中的概念和想象可视化。他不需要方法。</li>
<li>其次是设计领域模型的步骤。</li>
<li>首先从业务中抽取名词,然后从提取出来的名词中中总结业务实 体,区分名词汇中的属性,角色,实体和实例,形成问题域中的操作 实体的集合。其次是从业务实体集合中抽象业务模型,简历问题域的 概念。最后是用 UML 提供的方法和图例进行领域模型的设计,确定 模型之间的关系。</li>
<li>因此我们可以从文本中抽取出包含的类 Priest, Devil, puzzleGame, River, RiverSide, Boat, 另外还有 Player, Clock 类。
<img src="http://pbking1.github.com/images/hw1.jpg"></li>
</ul>


<h3>2. 活动图（Activity Diagram）</h3>

<ul>
<li><p>实验目的：</p>

<ul>
<li>1.掌握活动图的涵义和内容</li>
<li>2.掌握活动图的绘制方法</li>
<li>3.掌握活动图的使用范围</li>
</ul>
</li>
<li><p>实验内容：</p>

<ul>
<li>1.选择你熟悉银行的ATM机器，仔细研究观察“人”“机器”对话交互，实现取钱功能的过程。</li>
<li>2.用活动图画出用户取钱的过程。</li>
</ul>
</li>
<li>解题思路

<ul>
<li>1.活动图

<ul>
<li>活动图是UML用于对系统的动态行为建模的另外一种常用工具，他描述活动的顺序展现从一个活动到另外一个活动的控制流。活动图的本质上是一种流程图。</li>
<li>活动图着重表现从一个活动到另外一个活动的控制流。</li>
<li>也表示一个过程中的多个顺序活动和并行活动。</li>
<li>一旦某个动作完成，紧接着或有一个自动的向外转换。面向对象，着重表现系统的行为而不是处理的顺序。</li>
</ul>
</li>
<li>2.简单的控制流图包含操作，控制流，初始节点，活动最终节点，决策节点，合并节点，注释</li>
<li>3.本体的信息如下

<ul>
<li>活动主体：用户 ATM机，银行</li>
<li>大致流程：插卡，输入密码，输入取款金额，取款，取卡</li>
</ul>
</li>
</ul>
</li>
</ul>


<p><img src="http://pbking1.github.com/images/hw2.jpg"></p>

<h3>3. 状态机图（State Machine Diagram）</h3>

<ul>
<li>实验目的：

<ul>
<li>1.掌握状态机图的涵义和内容</li>
<li>2.掌握状态机图的绘制方法</li>
<li>3.掌握状态机图的使用范围</li>
</ul>
</li>
<li><p>实验内容：</p></li>
<li><p>1.Read the material of &ldquo;simple digital watch&rdquo;</p>

<ul>
<li>simple digital watch</li>
<li>A simple digital watch has a display and two buttons to set it, the A button and the B button. The watch has two modes of operation, display time and set time. In the display time mode, hours and minutes are displayed, separated by a flashing colon.
The set time mode has two sub-modes, set hours and set minutes. The A button is used to select modes. Each time A is pressed, the mode advances in sequence: display, set hours, set minutes, display etc. Within the sub-modes, the B button is used to advance the hours or minutes once each time it is pressed. Buttons must be released before they can generate another event.</li>
</ul>
</li>
<li><p>2.Prepare a state diagram of the watch.</p></li>
<li><p>3.解题思路</p>

<ul>
<li>1.状态机图

<ul>
<li>状态机图显示了对象的生命周期：对象经历的时间，对象的转换和对象在这些时间之间的状态。而且不需要描述所有可能的时间，只需要为具有复杂行为的依赖对象简历状态机图就可以了。</li>
</ul>
</li>
<li>2.状态机图的组件

<ul>
<li>事件，状态和转换</li>
</ul>
</li>
<li>3.题目解析

<ul>
<li>题意翻译如下：

<ul>
<li>有一块电子表，有显示模式，设置时间模式（分为小时和分钟两种子模式），A按钮切换模式，B按钮则是在设置模式下调整时间，按钮不能同时按下去。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>4.则很容易得出状态机图为
<img src="http://pbking1.github.com/images/hw3.jpg"></li>
</ul>


<h3>4.用例图</h3>

<ul>
<li>1.用例图</li>
<li>由参与者和用例以及他们之间的关系构成的用于描述系统功能的静态视图称为用例图。

<ul>
<li>常用于表示系统和环境的上下文</li>
<li>常用于表示参与者和系统交互的目的</li>
<li>对于客户

<ul>
<li>了解系统满足用户需求提供的服务</li>
</ul>
</li>
<li>开发者

<ul>
<li>了解系统满足用户需求提供的服务</li>
</ul>
</li>
<li>管理者

<ul>
<li>早期评估工作的依据</li>
</ul>
</li>
</ul>
</li>
<li>2.本题的信息如下

<ul>
<li>收集整理健康计步软件的资料，主要功能包括卡路里管理，运动规划，运动跑步记录</li>
<li>软件实体

<ul>
<li>包括人，外部系统，传感器， 时钟</li>
<li>还有利益相关人期望系统达成的目标</li>
</ul>
</li>
</ul>
</li>
<li>3.本题的用例图如下
<img src="http://pbking1.github.com/images/hw4.jpg"></li>
</ul>


<h3>5.顺序图</h3>

<h4>1.什么是顺序图</h4>

<pre><code>是一种UML行为图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。它可以表示用例的行为顺序，当执行一个用例行为时，时序图中的每条消息对应了一个类操作或状态机中引起转换的触发事件。
</code></pre>

<h4>2.组成元素</h4>

<ul>
<li>角色

<ul>
<li>系统角色，可以是人或者其他系统，子系统。</li>
</ul>
</li>
<li><p>对象</p>

<ul>
<li>对象代表时序图中的对象在交互中所扮演的角色，位于时序图顶部和对象代表。</li>
<li>对象一般包含以下三种命名方式：

<ul>
<li>第一种方式包含对象名和类名。</li>
<li>第二种方式只显示类名不显示对象名，即为一个匿名对象。</li>
<li>第三种方式只显示对象名不显示类名。</li>
</ul>
</li>
</ul>
</li>
<li><p>生命线</p>

<ul>
<li>生命线代表时序图中的对象在一段时期内的存在。时序图中每个对象和底部中心都有一条垂直的虚线，这就是对象的生命线，对象间 的消息存在于两条虚线间。</li>
</ul>
</li>
<li><p>激活期</p>

<ul>
<li>激活期代表时序图中的对象执行一项操作的时期，在时序图中每条生命线上的窄的矩形代表活动期。它可以被理解成C语言语义中一对花括号“{}”中的内容。</li>
</ul>
</li>
<li><p>消息</p>

<ul>
<li>消息是定义交互和协作中交换信息的类，用于对实体间的通信内容建模，信息用于在实体间传递信息。允许实体请求其他的服务，类角色通过发送和接受信息进行通信。</li>
</ul>
</li>
</ul>


<h4>3.UML三种消息</h4>

<ul>
<li>同步消息：发送者等待接收者。</li>
<li>异步消息：消息发送后，发送者继续操作，不等待接受者响应，常用于并发。</li>
<li>返回消息：表示消息的返回。一般同步（过程调用）的返回不需要画出，直接隐含，而异步返回则可用它。（注：如果异步消息有返回消息，必须明确表示出来）</li>
</ul>


<h4>4.5-1题目</h4>

<pre><code>小孙从“淘宝网”某商家卖了一部手机，感觉不合适自己决定退货。请仔细研究“淘宝网”的退货业务规程，请将“客户”、“淘宝网”、“商家”三个对象作为主 要参与者，使用系统顺序图描述“淘宝网”退货的业务的系统功能与业务 实现的基本过程。
</code></pre>

<ul>
<li>题目解析

<ul>
<li>系统功能：分发退货的信息。记录退货的信息。退货信息的返还。</li>
<li>业务实现的基本过程：客户向淘宝网发送退货信息、淘宝网将用户的请求提交给商家、商家确认退货信息并将退货消息发给淘宝网、系统修改记录、退货信息返还用户。</li>
<li>1、选择交易，点击退货/退款</li>
<li>2、选择申请服务类型（退货退款/仅退款）</li>
<li>3、选择货物状态和退款原因，填写退款金额和说明，并提交申请</li>
<li>4、等待，卖家同意退货，退货给卖家</li>
<li>5、退货后，请到退款详情页面“填写退货信息”</li>
<li>6、卖家确认收货，退货成功</li>
</ul>
</li>
</ul>


<h4>5.题目的顺序图</h4>

<p><img src="http://pbking1.github.com/images/hw5-1.jpg"></p>

<h4>6.BCE（boundary-control-entity patterns）模式</h4>

<ul>
<li>针对每一个用例，可以对应生成一个控制类。</li>
<li>参与者对象只能跟边界对象互动。</li>
<li>实体对象不能发送消息给边界对象和控制对象。 </li>
<li>比较特别的是，如果只是单纯对数据表进行增加、删除、修改、查询的话，可以不设置控制对象，让边界对象直接发送消息给实体对象，以提高整个序列图的执行速度。</li>
</ul>


<h4>7.业务实体</h4>

<ul>
<li>业务实体是业务角色在进行业务活动时使用或产生的事物，在表现形式上可以是一个文档，或者是一个物品的一部分。</li>
<li>比如在技术评审管理流程中，评审申请人将提交评审申请材料，专家将对评审材料提出评审意见，因此我们可确定的业务实体是“评审申请”和“评审意见”。每个业务实体通常具有特定的属性，比如“评审申请”业务实体具有的属性包括：申请人、评审类型、评审材料等信息。</li>
</ul>


<h4>8.题目5.2描述</h4>

<pre><code> 在某网上商城系统中，客户可以通过购物车中商品创建订单。请研究从购物车，到提交订单的业务过程，识别以下内容：
 记录过程中使用的页面（UI）
 从页面中识别业务实体（如，用户收件地址，订单）
 假设，系统中有一个订单生成控制器的软件对象，它控制页面流转，处理业务实体信息，保持流程工作状态
 请用顺序图表示 Actor - UIs - Controller - Entities 之间协作完成创建订单任务的过程。
</code></pre>

<h4>9.题目的顺序图</h4>

<p><img src="http://pbking1.github.com/images/hw5-2.jpg"></p>

<ul>
<li>To be continued&hellip;&hellip;</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Ubuntu on Macbook Air Dual]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/18/how-to-install-ubuntu-on-macbook-air-dual/"/>
    <updated>2014-04-18T11:07:34+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/18/how-to-install-ubuntu-on-macbook-air-dual</id>
    <content type="html"><![CDATA[<h4>1.For there are too many software that can be used in ubuntu not in OSX so I decided to install ubuntu on my macbook air</h4>

<ul>
<li>I have try the mac version ubuntu and <em>it do not work</em></li>
<li>and the origin version for windows is work on mac</li>
</ul>


<h4>2.First use <code>Unetbootin</code> to create a usb bootable ubnutu on mac</h4>

<ul>
<li>There are two ways to finish this</li>
<li>The first is(I do not succeed in this)

<ul>
<li><code>diskutil list</code>

<ul>
<li>show the disk that is mounted on your mac</li>
</ul>
</li>
<li>then insert the usb</li>
<li>run <code>diskutil list again</code>

<ul>
<li>and determine the device node assigned to the usb like <code>disks1s2</code></li>
</ul>
</li>
<li>then <code>diskutil unmountDisk /disks1s2</code></li>
<li>after that <code>sudo dd if=/path/to/ubuntu.img.dmg of=/dev/disks1s2 bs=2m</code>

<ul>
<li>to create the bootable usb ubuntu</li>
<li>and the bs is the I/O speed and the max is 2m</li>
</ul>
</li>
<li>It may cost some time to complete</li>
<li>finally run <code>eject /dev/disks1s2</code></li>
</ul>
</li>
<li>The second is

<ul>
<li>use the <code>Unetbootin</code> to create the bootable usb directly</li>
</ul>
</li>
</ul>


<!--more-->


<h4>3.Then we need the split the disk</h4>

<ul>
<li>search <code>Disk Utility</code></li>
<li>open it and get to the <code>partition</code></li>
<li>click &lsquo;+&rsquo; to create a partition of 40 GB

<ul>
<li>partition it in the MS-DOS(FAT)</li>
</ul>
</li>
<li>and click &lsquo;+&rsquo; again to create a patition of 2 GB

<ul>
<li>make the swap sizeMS-DOS(FAT)</li>
<li>name the partition &ldquo;swap&rdquo;</li>
<li>restart the computer and press alt/option key when starting</li>
</ul>
</li>
</ul>


<h4>install ubuntu</h4>

<ul>
<li>when being asked for <code>installation type</code>

<ul>
<li>choose something else to partition by ourselves</li>
<li>select <code>ext4</code> and mount <code>/</code> in the 40GB disk</li>
<li>select <code>swap area</code> for the swap disk</li>
</ul>
</li>
<li>and nothing else should be difficult</li>
</ul>


<h4>after installing ubuntu successfully on mac you should do</h4>

<ul>
<li><code>sudo apt-get install macfanctld</code> to enable the fan and sensor</li>
<li><code>sudo apt-get install update &amp;&amp; sudo apt-get upgrade</code> to update the system and get wifi work(you may not get wifi work at the first time you start the system, so get a wired network and upgrade the system)</li>
<li><code>sudo apt-get install flashplugin-installer</code> to install the adobe player</li>
<li><code>sudo add-apt-repository ppa:linrunner/tlp</code>

<ul>
<li><code>sudo apt-get update</code></li>
<li><code>sudo apt-get install tlp tlp-rdw</code></li>
<li><code>sudo tlp start</code></li>
<li>to improve battery life and reduce overhearting</li>
</ul>
</li>
</ul>


<h4>some configuration of ubuntu</h4>

<ul>
<li>first is the system mointer

<ul>
<li><code>conky</code></li>
<li>install conky manager and you can get lots of theme of it</li>
<li>and I have to say thats really cool</li>
<li><code>sudo apt-add-repository -y ppa:teejee2008/ppa</code></li>
<li><code>sudo apt-get update</code></li>
<li><code>sudo apt-get install conky-manager</code></li>
</ul>
</li>
<li>second is the byobu terminal

<ul>
<li><code>sudo apt-get install byobu</code></li>
<li>and set the start up script in the <code>/use/bin/byobu</code></li>
<li>and the terminal will start up in byobu</li>
<li><code>fn + F2</code> to  create a new terminal</li>
<li><code>fn + F3</code> and <code>fn + F4</code> to switch the terminal</li>
</ul>
</li>
<li>and <code>tilda</code>, <code>guake</code> will be good choice of terminal

<ul>
<li>press <code>F12</code> can drop down the guake terminal</li>
</ul>
</li>
</ul>


<h4>if there is error</h4>

<ul>
<li>if face <code>xinit: server error</code>

<ul>
<li>run <code>sudo apt-get install --reinstall xorg</code></li>
<li>and it may help</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Server Tutorial]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/15/linux-server-tutorial/"/>
    <updated>2014-04-15T14:47:08+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/15/linux-server-tutorial</id>
    <content type="html"><![CDATA[<h3>1.GNU plan</h3>

<ul>
<li>GNU plan is founded by the Richard M.Stallman and free software foundation</li>
<li>In order to make sure the GNU software can be used freely</li>
<li>All the GNU softwares have a license called &ldquo;GNU General Public License&rdquo;, <code>GPL</code></li>
<li>this forbid the other from adding any constrict to the GNU software and let all the people to have the right to use it.</li>
</ul>


<h3>2.POSIX standard</h3>

<ul>
<li>Portable Operating system Interface for Computing Systems</li>
<li>used to solve the problem that the UNIX system have lots of versions and result in a chaos</li>
<li>the standard is developed by the IEEE and standarded by the ANSI and ISO</li>
</ul>


<!--more-->


<h3>3.Linux component</h3>

<ul>
<li>Linux kernal

<ul>
<li>is opensource because of the GPL</li>
</ul>
</li>
<li>Linux Shell

<ul>
<li>is the UI</li>
<li>have KDE (King Destop Environment) and GROME (GNU Network Object Model Environment)</li>
<li>BASH

<ul>
<li>GNU&rsquo;s Bourne Again Shell</li>
</ul>
</li>
</ul>
</li>
<li>Linux Filesystem

<ul>
<li>multi tree structure</li>
</ul>
</li>
</ul>


<h3>4.How linux work</h3>

<h4>start up</h4>

<ul>
<li>After the user open the power

<ul>
<li>BIOS first add electivity to check itself and initialize the system and start up the service</li>
<li>then start up the mingetty process</li>
</ul>
</li>
<li>then the shell user log in and start up the device in the sequence setting in the BIOS</li>
<li>then start up the GRUB or LILO to get the access of the computer</li>
<li>after that start up the linux kernel with its configuration</li>
<li>then use the init program list</li>
<li>after the user log in successfully, they can enter the system</li>
</ul>


<h3>5.FTP server</h3>

<pre><code>the ftp is depend on the C/S model
is used for tranfering the data between client and server
</code></pre>

<ul>
<li>First the client send the connection request to the server

<ul>
<li>and the client will dynamically open a port > 1024 to wait for the connction of the server</li>
</ul>
</li>
<li>After the server listened the request in the port 21

<ul>
<li>it will found a ftp connection between client and server</li>
</ul>
</li>
<li>When need to transfer the data, the client will open a port > 1024 to connect to the pot 20 of the server and transfer the data through the port</li>
<li>After transferign the data, the port will be released</li>
</ul>


<h4>ftp software</h4>

<ul>
<li>we can use <code>vsFTPd</code> in linux</li>
<li>how to setup the ftp server?

<ul>
<li>first <code>sudo apt-get install vsftpd</code></li>
<li>and use <code>sudo /etc/init.d/vsftpd start</code> to start the service

<ul>
<li>use <code>sudo /etc/init.d/vsftpd restart</code> to restart the service</li>
<li>use <code>sudo /etc/init.d/vsftpd stop</code> to stop the service</li>
</ul>
</li>
<li>configure the ftp

<ul>
<li>use <code>sudo vi /etc/vsftpd.conf</code> to edit the configuration file</li>
<li>then use <code>sudo /etc/init.d/vsftpd restart</code> to restart the service and apply the change</li>
</ul>
</li>
<li>also should we backup the file usesudo <code>cp /etc/vsftpd.conf /etc/vsftpd.conf_back</code></li>
<li>and do not contain empty line after each sentance</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>listen=YES             #启用独立vsftpd服务器
</span><span class='line'>#listen_ipv6=YES       不需要，注释掉
</span><span class='line'>anonymous_enable=YES   #本服务器需要匿名访问
</span><span class='line'>local_enable=YES       #要用虚拟用户，需要本地访问的（关于本地用户和虚拟用户不要迷茫，稍后解释）
</span><span class='line'>write_enable=YES       #需要本地用户对文件进行修改和删除
</span><span class='line'>#local_umask=022     FTP上传文件权限 ，默认是077，本服务器每个虚拟用户都有上传权限设置，总的就留空注释掉了
</span><span class='line'>#anon_upload_enable=YES 是否允许匿名用户上传，不需要匿名上传注释掉
</span><span class='line'>#anon_mkdir_write_enable=YES 是否允许匿名用户的写和创建目录的权限，不要匿名管理，注释掉
</span><span class='line'>dirmessage_enable=YES     当切换目录时，是否显示该目录下message隐藏文件的内容，这个用来显示登录信息的 设为YES
</span><span class='line'>message_file=Welcome     显示的欢迎信息，在ftp目录下建Welcome的文件，里面写上登录信息即可，一般人常用.message隐藏文件
</span><span class='line'>xferlog_enable=YES 是否激活上传和下载的日志，需要
</span><span class='line'>connect_from_port_20=YES 是否启动FTP数据端口20的连接请求  需要
</span><span class='line'>chown_uploads=YES 是否改变上传文件的所有者，我这里需要改变上传文件所有者
</span><span class='line'>chown_username=virtual 改变上传文件的所有着为virtual，这个virtual用户一会要新建的，用来实现虚拟用户登录
</span><span class='line'>xferlog日志格式ferlog_file=/var/log/vsftpd.log 上传/下载日志文件所默认的路径
</span><span class='line'>xferlog_std_format=YES 是否使用标准的ftpd xferlog日志格式
</span><span class='line'>idle_session_timeout=600 是否将在用户会话空闲10分钟后被中断
</span><span class='line'>data_connection_timeout=120 是否将在数据连接空闲2分钟后被中断
</span><span class='line'>#nopriv_user=ftpsecure 是否运行vsftpd需要的非特殊系统用户默认nobody  不需要
</span><span class='line'>#async_abor_enable=YES 是否是否允许运行特殊的FTP命令async   不要
</span><span class='line'>ascii_upload_enable=YES 是否启用上传的ascii传输方式   需要
</span><span class='line'>ascii_download_enable=YES 是否启用下载的ascii传输方式   需要
</span><span class='line'>ftpd_banner=Welcome to blah FTP service. 用户连接服务器后显示信息，显示信息可以随便写
</span><span class='line'>#deny_email_enable=YES 是否允许某些匿名用户使用邮件地址（默认的）
</span><span class='line'>max_clients=10 #FTP服务器最大承载用户,本人设为10
</span><span class='line'>max_per_ip=5 #限制每个IP的进程
</span><span class='line'>local_max_rate=256000 #最大传输速率(b/s)
</span><span class='line'>#hide_ids=YES #是否隐藏文件的所有者和组信息，不隐藏
</span><span class='line'>idle_session_timeout= 3000  #空闲（发呆）用户会话的超时时间，若是超出这时间没有数据的传送或是指令的输入，则会强迫断线。单位为秒，默认值为300。</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>下面是用来虚拟用户登录的
</span><span class='line'>^^^^^^^^^^^^^^^^^^^^^^^^^^^^
</span><span class='line'>guest_enable=YES             使用虚拟用户
</span><span class='line'>guest_username=virtual       将虚拟用户等同本地用户 virtual
</span><span class='line'>user_config_dir=/etc/vsftpd/vsftpd_user_conf   虚拟用户配置文件夹
</span><span class='line'>pam_service_name=vsftpd.vu    虚拟用户加密设置
</span><span class='line'>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></code></pre></td></tr></table></div></figure>


<ul>
<li><ul>
<li>then use <code>sudo mkdir /home/vsftpd</code> and <code>cd /home/vsftpd</code></li>
<li>then use <code>sudo mkdir down upload wsn</code></li>
<li>after that setup the virtual user database

<ul>
<li>use <code>sudo vi /home/loguser.txt</code></li>
<li>and the content is
<code>
down
password1
upload
password2
wsn
password3
</code></li>
</ul>
</li>
<li>use <code>sudo apt-get install db4.7-util</code></li>
<li>Then create a new dir and put the configuration in it.</li>
<li>use <code>sudo mkdir /etc/vsftpd</code></li>
<li>use <code>sudo db4.7_load -T -t hash -f /home/loguser.txt /etc/vsftpd/vsftpd_login.db</code></li>
<li>set the access of the databases file eventually</li>
<li>use <code>sudo chmod 600 /etc/vsftpd/vsftpd_login.db</code></li>
<li>configure the PAM file <code>/etc/pam.d/vsftpd.vu</code></li>
<li>use <code>sudo vi /etc/pam.d/vsftpd.vu</code> with the content
<code>
auth required /lib/security/pam_userdb.so db=/etc/vsftpd_login
account required /lib/security/pam_userdb.so db=/etc/vsftpd_login
</code></li>
<li>PAM is used to verify the virtual user

<ul>
<li>and this is activated by the command <code>pam_service_name</code></li>
</ul>
</li>
<li>Setup the local user for the virtual user

<ul>
<li>setup  a system user called <code>vsftpd</code> and the home dir is <code>/home/vsftpd</code> and the user login terminal set to /bin/false
<code>
sudo useradd virtual -d /home/vsftpd -s /bin/false
sudp chown virtual:virtual /home/vsftpd
</code></li>
<li>and until now the three users can work now</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>6.mail server</h3>

<pre><code>mail is used to communicate on the internet 
</code></pre>

<ul>
<li>component

<ul>
<li>MUA

<ul>
<li>Mail User Agent</li>
<li>used to help the user to send and get the email</li>
</ul>
</li>
<li>MTA

<ul>
<li>Mail Transfer Agent</li>
<li>used to monitor and send the email</li>
</ul>
</li>
<li>mail protocol

<ul>
<li>SMTP

<ul>
<li>simple mail transfer protocol</li>
<li>use port 25</li>
<li>is a request/respond protocol</li>
<li>and be used to setup the SMTP connection between with the remote server

<ul>
<li>can transfer the mail from client to server

<ul>
<li>or server to server</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>POP3

<ul>
<li>Post office protocol</li>
<li>use TCP 110 port</li>
<li>used to receive the mail</li>
<li>e.g

<ul>
<li>the client connect with the POP3 server using TCP connection</li>
<li>and the POP3 protocol will affirm the usernamd and userpassword</li>
<li>after that the client can receive or delete the mail</li>
</ul>
</li>
</ul>
</li>
<li>IMAP

<ul>
<li>Internet Message Access Protocol</li>
<li>can be used as POP3 to receive the mail</li>
<li>can be read offline</li>
<li>can preview the mail</li>
</ul>
</li>
<li>Web Mail

<ul>
<li>is not a protocol but a plugin</li>
<li>use the browser to receive, send and read the mail</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>7.APT&mdash;&mdash;-software package managemnt</h3>

<ul>
<li>use <code>/etc/apt/sources.list</code> to store the software package list

<ul>
<li>which is called the <em>repository</em></li>
</ul>
</li>
<li>this is widely used in the Debain linux like ubuntu</li>
<li>if the client want to update the software

<ul>
<li>They will download the dependency file of the softeware and compare with the system file, download all the needed dependencies.</li>
</ul>
</li>
<li>some useful command</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get : used to manage the software 
</span><span class='line'>apt-cache : used to check the info of the software
</span><span class='line'>apt-proxy : use to construct the proxy server of APT
</span><span class='line'>apt-show-versions : used to show the version of the software in the system
</span><span class='line'>apt-config : use the read the apt coniguration info </span></code></pre></td></tr></table></div></figure>


<h3>8.linux user and process management</h3>

<h4>user management</h4>

<ul>
<li>linux have three kinds of users

<ul>
<li>root</li>
<li>ordinary</li>
<li>virtual

<ul>
<li>like bin, damon, ftp, adm</li>
</ul>
</li>
</ul>
</li>
<li>each used have a UID(user id)</li>
<li><code>/etc/passwd</code>

<ul>
<li>used to store the infomation of the users</li>
</ul>
</li>
<li><code>/etc/shadow</code>

<ul>
<li>used to store the info that passwd file can not store

<ul>
<li>like some info about the password</li>
</ul>
</li>
</ul>
</li>
<li>and it is similar with the <code>/etc/group</code> and <code>/etc/gshadow</code></li>
</ul>


<h5>use the command to manage</h5>

<ul>
<li><p><code>whoami</code></p>

<ul>
<li>see the name of the current login user</li>
</ul>
</li>
<li><p><code>who</code></p>

<ul>
<li>check the current login user</li>
</ul>
</li>
<li><code>w</code>

<ul>
<li>check the detail info the current login user</li>
</ul>
</li>
<li><code>id</code>

<ul>
<li>check the UID, GID and so on infomation of particular user</li>
</ul>
</li>
<li><code>finger</code>

<ul>
<li>use to see the infomation of particular user</li>
</ul>
</li>
<li><code>su</code>

<ul>
<li>change the login user</li>
</ul>
</li>
<li><code>write</code>

<ul>
<li>send message to the particular user</li>
</ul>
</li>
<li><code>wall</code>

<ul>
<li>broadcast the infomation to all user</li>
</ul>
</li>
<li><code>sudo -s</code>

<ul>
<li>get the root access</li>
</ul>
</li>
<li><code>useradd</code> / <code>adduser</code>

<ul>
<li>add user</li>
</ul>
</li>
<li><code>passwd</code>

<ul>
<li>change the password of a user</li>
</ul>
</li>
<li><code>chsh</code>

<ul>
<li>change the shell the user is using</li>
</ul>
</li>
<li><code>usermod</code>

<ul>
<li>change the info of the user account</li>
</ul>
</li>
<li><code>userdel</code>

<ul>
<li>delete the user</li>
</ul>
</li>
<li><code>startx</code>

<ul>
<li>start the xwindows(GUI)</li>
</ul>
</li>
</ul>


<h4>process management</h4>

<h5>some useful command</h5>

<ul>
<li><code>ps</code>

<ul>
<li>see what process is running</li>
<li>e.g <code>ps aux | more</code>

<ul>
<li><code>ps aux | grep httpd</code></li>
</ul>
</li>
</ul>
</li>
<li><code>| more</code>

<ul>
<li>to see the long content in several pages</li>
</ul>
</li>
<li><code>kill</code>

<ul>
<li>kill the process</li>
<li>or <code>killall</code></li>
<li><code>kill -9</code> to kill the zombie process</li>
<li><code>pkill name</code> to kill the process that know its name</li>
</ul>
</li>
<li>top

<ul>
<li>to see the process dynamically</li>
</ul>
</li>
<li><code>&amp;</code>

<ul>
<li>let the command work in the background</li>
<li>e.g <code>make install &amp;</code></li>
</ul>
</li>
<li><code>Ctrl + Z</code>

<ul>
<li>put the process in the background and pause it</li>
</ul>
</li>
<li><code>jobs</code>

<ul>
<li>to see what process is in the background</li>
</ul>
</li>
<li><code>fg</code>

<ul>
<li>get the background process back</li>
</ul>
</li>
<li><code>bg</code>

<ul>
<li>run the backgrounf process in the background</li>
</ul>
</li>
</ul>


<h3>9.linux filesystem</h3>

<ul>
<li>In the linux filesystem, the file system use inode to store the attibute of the file system.</li>
<li>if the file pointed by the inode is opened, then the inode += 1

<ul>
<li>else if the file is close, then the inode &ndash;= 1</li>
</ul>
</li>
<li>linux Ext3 filesystem

<ul>
<li>develop the log system depend on the Ext2 system</li>
</ul>
</li>
<li>linux Swap system

<ul>
<li>used for the exchange area</li>
<li>and are used for the memory page to swap the space</li>
<li>and not easy to generate the fragment</li>
</ul>
</li>
</ul>


<h3>10.linux compress</h3>

<ul>
<li>command

<ul>
<li><code>compress</code></li>
<li><code>gzip</code> and <code>zcat</code></li>
<li><code>bzip2</code> and <code>bzcat</code> and <code>bunzip2</code></li>
<li><code>tar</code></li>
</ul>
</li>
</ul>


<h3>11.linux file link</h3>

<ul>
<li>Symbolic link

<ul>
<li>soft link</li>
<li>use <code>ln</code></li>
<li>if the file that is being linked is deleted

<ul>
<li>than the linked file can not be used.</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>12.linux disk</h3>

<ul>
<li>useful command

<ul>
<li><code>fdisk</code></li>
<li><code>df</code>

<ul>
<li>check the information of the disk</li>
</ul>
</li>
<li><code>fsck</code></li>
<li><code>mount</code>

<ul>
<li>mount the dir in order to use the disk</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>13.linux samba</h3>

<ul>
<li>a protocol used to communitcate Unix to Windows</li>
<li>sometimes used to share the file and printer</li>
<li>SMB protocol is running on the top of the NetBios</li>
<li>Samba server is made of

<ul>
<li>NetBios &ndash;> NMB</li>
<li>SMB</li>
</ul>
</li>
</ul>


<h3>14.linux NFS server</h3>

<ul>
<li>NFS is a protocol that used to share the TCP/IP network file with the other.</li>
<li>This can share the file between different kinds of the operating system</li>
<li>NFS can make the usage of the disk higher</li>
<li>And the user do not need to set a home dir one their computer

<ul>
<li>and set the home dir on the remote server</li>
</ul>
</li>
<li>use dynamic port distribute

<ul>
<li>because the NFS service may use lots of ports</li>
</ul>
</li>
<li>RPC service mainly used to record the function of the port of the NFS</li>
<li>and RPC service is used in the port 111

<ul>
<li>when the NFS start, it will select the port that is smaller than 1024</li>
</ul>
</li>
</ul>


<h3>15.screen</h3>

<ul>
<li>split the screen horizontal

<ul>
<li><code>ctrl + a and shift + s</code></li>
</ul>
</li>
<li>split the screen vertical(only in ubuntu/Debian)

<ul>
<li><code>ctrl + a and shift + \(|)</code></li>
</ul>
</li>
<li>switch between the screen

<ul>
<li><code>ctrl + a + tab</code></li>
</ul>
</li>
<li>after split the screen

<ul>
<li>then create a new windows using</li>
<li><code>ctrl + a + c</code></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Bash Profile Configuration]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/13/my-bash-profile-configuration/"/>
    <updated>2014-04-13T10:14:26+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/13/my-bash-profile-configuration</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#terminal
</span><span class='line'>export PS1="\u@\h:\w $"
</span><span class='line'>export CLICOLOR=1
</span><span class='line'>export GREP_OPTIONS="--color=auto"
</span><span class='line'>
</span><span class='line'>#byobu check ignore
</span><span class='line'>set FORCE_UNSAFE_CONFIGURE=1
</span><span class='line'>
</span><span class='line'>#ant path
</span><span class='line'>#ANT_ROOT=/Users/pb/Downloads/adt-bundle-mac-x86_64-20130917/sdk/tools/ant
</span><span class='line'>
</span><span class='line'># gcc 4.8
</span><span class='line'>export PATH=$HOME/Library/gcc-4.8.0/bin:$PATH
</span><span class='line'>
</span><span class='line'>export BOOST_ROOT=/usr/local/Cellar/lib
</span><span class='line'>export BOOST_INCLUDEDIR=/usr/local/Cellar/include
</span><span class='line'>
</span><span class='line'>##
</span><span class='line'># Your previous /Users/pb/.bash_profile file was backed up as /Users/pb/.bash_profile.macports-saved_2013-10-12_at_14:01:02
</span><span class='line'>##
</span><span class='line'>
</span><span class='line'># MacPorts Installer addition on 2013-10-12_at_14:01:02: adding an appropriate PATH variable for use with MacPorts.
</span><span class='line'>export PATH=/opt/local/bin:/opt/local/sbin:$PATH
</span><span class='line'># Finished adapting your PATH environment variable for use with MacPorts.
</span><span class='line'>
</span><span class='line'>export CPATH=/opt/local/include
</span><span class='line'>export LIBRARY_PATH=/opt/local/lib
</span><span class='line'>export DYLD_FALLBACK_LIBRARY_PATH=$DYLD_FALLBACK_LIBRARY_PATH:/opt/local/lib
</span><span class='line'>export PATH=/opt/local/bin:$PATH
</span><span class='line'># To ensure that MacPorts pkg-config can find stuff that rosdep installs in /usr
</span><span class='line'>export PKG_CONFIG_PATH=/usr/lib/pkgconfig
</span><span class='line'>
</span><span class='line'>#color
</span><span class='line'>export CLICOLOR=1
</span><span class='line'>export LSCOLORS=ExFxCxDxBxegedabagacad
</span><span class='line'>
</span><span class='line'>#wxpython
</span><span class='line'>export VERSIONER_PYTHON_PREFER_32_BIT
</span><span class='line'>
</span><span class='line'>#sudo error
</span><span class='line'>unset LD_LIBRARY_PATH
</span><span class='line'>unset DYLD_LIBRARY_PATH
</span><span class='line'>
</span><span class='line'>#tornade
</span><span class='line'>export PYTHONPATH=$PYTHONPATH:~/Document/python/software/tornado-3.1.1
</span><span class='line'>
</span><span class='line'>#android sdk
</span><span class='line'>export PATH=$PATH:~/Downloads/adt-bundle-mac-x86_64-20130917/sdk/platform-tools
</span><span class='line'>
</span><span class='line'>#android ndk
</span><span class='line'>export ANDROID_NDK_ROOT=~/Documents/android/NDK/android-ndk-r9d
</span><span class='line'>export NDK_ROOT=~/Documents/android/NDK/android-ndk-r9d
</span><span class='line'>export ANDROID_SDK_ROOT=~/Downloads/adt-bundle-mac-x86_64-20130917/sdk
</span><span class='line'>
</span><span class='line'>#cocos2dx
</span><span class='line'>#export COCOS2DX_ROOT=~/Documents/CocosBuilder-2.1-examples/cocos2d-x-2.2.2
</span><span class='line'>
</span><span class='line'>#mysql path
</span><span class='line'>export PATH=$PATH:/usr/local/mysql/bin
</span><span class='line'>
</span><span class='line'>#Tomcat
</span><span class='line'>#export PATH=$PATH:/usr/local/apache-tomcat-7.0.52/bin
</span><span class='line'>
</span><span class='line'>#colt linear algebra lib
</span><span class='line'>export CLASSPATH=/opt/share/colt/lib/colt.jar:/opt/share/colt/lib/concurrent.jar:$CLASSPATH
</span><span class='line'>
</span><span class='line'>#mlpack machinelearning library
</span><span class='line'>
</span><span class='line'>export ANT_ROOT=/usr/local/ant
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
</span><span class='line'>
</span><span class='line'>export COCOS_CONSOLE_ROOT=/Users/pb/Documents/CocosBuilder-2.1-examples/cocos2d-x-3.0rc0/tools/cocos2d-console/bin
</span><span class='line'>export PATH=$COCOS_CONSOLE_ROOT:$PATH</span></code></pre></td></tr></table></div></figure>


<!--more-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Idea in Robotics]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/09/basic-idea-in-robotics/"/>
    <updated>2014-04-09T18:55:54+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/09/basic-idea-in-robotics</id>
    <content type="html"><![CDATA[<h3>ABSTRACT:</h3>

<ul>
<li>The basic idea in robotic area

<ul>
<li>A robot is an autonomous system which exists in the physical world, can sense its environment , and can act on it to achieve some goals</li>
<li>The robotic involves autonomy, sensing, action, and achieving goals, all in the physical world</li>
<li>The component of the robot are

<ul>
<li>physical body

<ul>
<li>it can exist and do in the physical world</li>
</ul>
</li>
<li>combine

<ul>
<li>manipulation(up body)

<ul>
<li>handling objects</li>
</ul>
</li>
<li>locomotion(down body).

<ul>
<li>Moving around, going places</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Sensors

<ul>
<li>It can sense/perceive its environment in order to get information about itself and its surroundings.</li>
</ul>
</li>
<li>Effectors and actuators

<ul>
<li>it can take actions</li>
<li>effector enable a robot to take a action, to do physical things

<ul>
<li>it can also be defined as any device that has an effect on the environment</li>
<li>it range from legs, wheels to arms and fingers</li>
</ul>
</li>
<li>actuator can do exact the actual work for the robot

<ul>
<li>are the effector that use underlying mechanism, such as motor and muscles.</li>
<li>Is also the mechanism that enable the effector to execute an action or movement</li>
<li>Such as electric motors(base on electric current), hydraulics(base on fluid pressure) ,pneumatics(base on air pressure) and photo-reactive materials ……</li>
</ul>
</li>
</ul>
</li>
<li>Controller

<ul>
<li>it can be autonomous</li>
<li>provide hardware and/or software that make the robot autonomous by using the sensor inputs and any other information to decide what to do ad then to control the effectors to execute that action</li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<h3>Some useful info about ATLAS robot</h3>

<ul>
<li><p>1.ATLAS robot has 27 total degrees of freedom.</p></li>
<li><p>2.ATLAS has 27 powerful actuators. They are very strong.</p>

<ul>
<li>And they are using the Hydraulic Actuator</li>
</ul>
</li>
<li><p>3.Even though ATLAS uses hydraulic actuators, the robot still uses gears. And</p>

<ul>
<li>it is possible to have backlash if you use hydraulic actuators.</li>
<li>And the backlash means any looseness between meshing gears</li>
</ul>
</li>
<li><p>4.ATLAS robot27 joints are rotational.</p>

<ul>
<li>And they use position control, torque control and PID control.</li>
</ul>
</li>
<li><p>5.ATLAS arms have 7 DOF. This means that manipulator is redundant.</p>

<ul>
<li>The controllable degrees of freedom > total degrees of freedom</li>
</ul>
</li>
<li><p>6.Hands and feet are the end-effectors of the robot.</p></li>
<li><p>7.drive:</p>

<ul>
<li>ATLAS need to detect depth through vision. Is stereopsis desired? True</li>
</ul>
</li>
<li><p>8.In order to ATLAS to be able to detect LANES on a road, Edge detection might be most useful</p></li>
<li><p>9.walk:</p>

<ul>
<li>if one leg (angle, knee and hip) has 4 DOF, and four PID controller needs to control the motion of the leg.</li>
</ul>
</li>
<li><p>10.clear the way</p>

<ul>
<li>compliance would not be beneficial in removing blocks to protect the robot from being hurt.</li>
<li>Torque control is the control method used to grab the door handle firmly</li>
<li>When open a door, we can choose Robustness to optimize path planning trajectories.</li>
</ul>
</li>
<li><p>11.climb ladder</p>

<ul>
<li>In order for robots to be successful in the real world they need to deal with uncertainty.</li>
<li>Programming robots to do the same thing over and over does not work in real environments. Instead they need to be able to generalize.</li>
<li>In the scenario, there are multiple ways in which ATLAS could coordinate the motion between his arms and legs. One coordination scheme for climbing could be the alternating gait(the way of walking)</li>
</ul>
</li>
<li><p>12.pip detection</p>

<ul>
<li>Laser-range scanner to compute distance is the most useful in helping the robot move through the building and find the leaking pipe</li>
</ul>
</li>
<li><p>13.valve closing</p>

<ul>
<li>In the scenario the robot is using a P controller on each of the arm joint to control how much the joint should move, during experimental results it was shown that controller showed large oscillatory behavior during the initial motion the hand.

<ul>
<li>PD Controller would do a better job at eliminating such error</li>
</ul>
</li>
<li>After the controller is changed, the oscillatory behavior disappeared. But now the controller war not eliminating the steady-state error effectively

<ul>
<li>PID controller would do a better job at eliminating the current and previous error</li>
</ul>
</li>
</ul>
</li>
<li><p>14.type of sensor</p>

<ul>
<li>cameras is a Exteroceptive sensor</li>
<li>robot need dynamic stability to maintain the balance.</li>
<li>Encode sensor can detect the position of its joints through this kind of sensor</li>
<li>Tactile sensor can detect touching object</li>
<li>ATLAS is not equip with Bump sensor</li>
<li>The force torque sensors give internal information of the robot state(Proprioceptive)</li>
<li>In some parts of the task, we want ATLAS not to be compliant but to be? Stiff</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Vim Configuration]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/09/my-vim-configuration/"/>
    <updated>2014-04-09T18:35:16+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/09/my-vim-configuration</id>
    <content type="html"><![CDATA[<ul>
<li>This is the vim configuration of my mac.</li>
<li>edit the file in the /usr/share/vim named &ldquo;vimrc&rdquo;</li>
<li>Some of them need to install some plugins and the command line will make sense</li>
</ul>


<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>" Configuration file for vim
</span><span class='line'>set modelines=0     " CVE-2007-2438
</span><span class='line'>set number
</span><span class='line'>" Normally we use vim-extensions. If you want true vi-compatibility
</span><span class='line'>" remove change the following statements
</span><span class='line'>set nocompatible    " Use Vim defaults instead of 100% vi compatibility
</span><span class='line'>set backspace=2     " more powerful backspacing 
</span><span class='line'>" Don't write backup file if vim is being called by "crontab -e"
</span><span class='line'>au BufWrite /private/tmp/crontab.* set nowritebackup
</span><span class='line'>" Don't write backup file if vim is being called by "chpass"
</span><span class='line'>au BufWrite /private/etc/pw.* set nowritebackup
</span><span class='line'>set autoread
</span><span class='line'>nmap &lt;leader&gt;w :w!&lt;cr&gt;
</span><span class='line'>"map &lt;leader&gt;e :e! ~/.vim_runtime/vimrc&lt;cr&gt;
</span><span class='line'>" autocmd! bufwritepost vimrc source ~/.vim_runtime/vimrc
</span><span class='line'>set so=7
</span><span class='line'>set ruler
</span><span class='line'>set cmdheight=2
</span><span class='line'>set hid
</span><span class='line'>set magic
</span><span class='line'>set noerrorbells
</span><span class='line'>syntax enable
</span><span class='line'>
</span><span class='line'>"ctag和taglist
</span><span class='line'>let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
</span><span class='line'>let Tlist_Show_One_File=1
</span><span class='line'>let Tlist_Exit_OnlyWindow=1
</span><span class='line'>let Tlist_WinWidth=30
</span><span class='line'>let Tlist_Process_File_Always=1
</span><span class='line'>let Tlist_Use_SingleClick=1
</span><span class='line'>let Tlist_Auto_Open=1
</span><span class='line'>map&lt;F8&gt; :Tlist&lt;CR&gt;
</span><span class='line'>set tags=tags;
</span><span class='line'>set autochdir
</span><span class='line'> "nmap ct :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .&lt;CR&gt;
</span><span class='line'>
</span><span class='line'>"配色
</span><span class='line'>colorscheme desert
</span><span class='line'> 
</span><span class='line'>"python自动补全
</span><span class='line'>let g:pydiction_location='/usr/share/vim/vim73/ftplugin/complete-dict'
</span><span class='line'>let g:pydiction_menu_height=15
</span><span class='line'>"winmanager
</span><span class='line'>let g:winManagerwindowLayout='FileExplorer|TagList'
</span><span class='line'>nmap wm :WMToggle&lt;CR&gt;
</span><span class='line'>
</span><span class='line'>"nerdtree
</span><span class='line'>let NERDChristmasTree=1
</span><span class='line'>let NERDTreeAutoCenter=1
</span><span class='line'>let NERDTreeMouseMode=2
</span><span class='line'>let NERDTreeShowBookmarks=1
</span><span class='line'>let NREDTreeShowFiles=1
</span><span class='line'>let NERDTreeShowHidden=1
</span><span class='line'>let NERDTreeShowLineNumbers=1
</span><span class='line'>let NERDTreeWinPos='left'
</span><span class='line'>let NERDTreeWinSize=31
</span><span class='line'>"nnoremap f :NERDTreeToggle
</span><span class='line'>nnoremap ff :NERDTree&lt;CR&gt;     
</span><span class='line'>
</span><span class='line'>set smartcase
</span><span class='line'>set hlsearch
</span><span class='line'>set tabstop=4
</span><span class='line'>set noexpandtab
</span><span class='line'>set shiftwidth=4
</span><span class='line'>set smarttab
</span><span class='line'>set confirm
</span><span class='line'>set autoindent
</span><span class='line'>set cindent
</span><span class='line'>set softtabstop=4
</span><span class='line'>set history=700
</span><span class='line'>set nobackup
</span><span class='line'>set noswapfile
</span><span class='line'>set ignorecase
</span><span class='line'>set incsearch
</span><span class='line'>set gdefault
</span><span class='line'>set langmenu=zh_CN.UTF-8
</span><span class='line'>set helplang=cn
</span><span class='line'>set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\     -\ %H:%M\")}
</span><span class='line'>set laststatus=2
</span><span class='line'>
</span><span class='line'>filetype on
</span><span class='line'>filetype plugin on
</span><span class='line'>filetype plugin indent on
</span><span class='line'>filetype indent on
</span><span class='line'>set viminfo+=!
</span><span class='line'>set iskeyword+=_,$,@,%,#,-
</span><span class='line'>set linespace=0
</span><span class='line'>set backspace=2
</span><span class='line'>
</span><span class='line'>set mouse=a
</span><span class='line'>set selection=exclusive
</span><span class='line'>set selectmode=mouse,key
</span><span class='line'>set report=0
</span><span class='line'>set shortmess=atl
</span><span class='line'>set showmatch
</span><span class='line'>"set fillchars=vert:\,stl:\,stlnc:\
</span><span class='line'>set matchtime=5
</span><span class='line'> " 能够漂亮地显示.NFO文件
</span><span class='line'>set encoding=utf-8
</span><span class='line'>function! SetFileEncodings(encodings)
</span><span class='line'>    let b:myfileencodingsbak=&fileencodings
</span><span class='line'>    let &fileencodings=a:encodings
</span><span class='line'>endfunction
</span><span class='line'>function! RestoreFileEncodings()
</span><span class='line'>    let &fileencodings=b:myfileencodingsbak
</span><span class='line'>    unlet b:myfileencodingsbak
</span><span class='line'>endfunction
</span><span class='line'>
</span><span class='line'>au BufReadPre *.nfo call SetFileEncodings('cp437')|set ambiwidth=single
</span><span class='line'>au BufReadPost *.nfo call RestoreFileEncodings()
</span><span class='line'>
</span><span class='line'>" 高亮显示普通txt文件（需要txt.vim脚本）
</span><span class='line'>au BufRead,BufNewFile *  setfiletype txt
</span><span class='line'>
</span><span class='line'>" C的编译和运行
</span><span class='line'>map &lt;F5&gt; :call CompileRunGcc()&lt;CR&gt;
</span><span class='line'>func! CompileRunGcc()
</span><span class='line'>exec "w"
</span><span class='line'>exec "!gcc % -o %&lt;"
</span><span class='line'>exec "! ./%&lt;"
</span><span class='line'>endfunc
</span><span class='line'>
</span><span class='line'>" C++的编译和运行
</span><span class='line'>map &lt;F6&gt; :call CompileRunGpp()&lt;CR&gt;
</span><span class='line'>func! CompileRunGpp()
</span><span class='line'>exec "w"
</span><span class='line'>exec "!g++ % -o %&lt;"
</span><span class='line'>exec "! ./%&lt;"
</span><span class='line'>endfunc
</span><span class='line'>
</span><span class='line'>"Markdown to HTML  
</span><span class='line'>nmap &lt;leader&gt;md :%!/usr/local/bin/Markdown.pl --html4tags &lt;cr&gt;
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Congiure My Octopress Blog]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/09/congiure-the-octopress-blog/"/>
    <updated>2014-04-09T17:03:02+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/09/congiure-the-octopress-blog</id>
    <content type="html"><![CDATA[<h3>1.In the _config.yml file</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>default_asides: [asides/recent_posts.html, asides/category_list.html, asides/comment.html, asides/github.html, custom/asides/earth.html]
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>and</li>
</ul>


<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ----------------------- #
</span><span class='line'>#   3rd Party Settings    #
</span><span class='line'># ----------------------- #
</span><span class='line'>
</span><span class='line'># Github repositories
</span><span class='line'>github_user: pbking1
</span><span class='line'>github_repo_count: 3
</span><span class='line'>github_show_profile_link: true
</span><span class='line'>github_skip_forks: true
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># Google Analytics
</span><span class='line'>google_analytics_tracking_id:
</span><span class='line'>
</span><span class='line'># Facebook Like
</span><span class='line'>facebook_like: false
</span><span class='line'>
</span><span class='line'># Sina Weibo
</span><span class='line'>sina_weibo_follow_button: true
</span><span class='line'>
</span><span class='line'>#comment and share                                                                                    
</span><span class='line'>comment_and_share: true
</span><span class='line'>
</span><span class='line'>#share
</span><span class='line'>share: true
</span><span class='line'>
</span><span class='line'>#Jiathis
</span><span class='line'>jiathis: true
</span><span class='line'>
</span><span class='line'># duoshuo
</span><span class='line'>duoshuo: true
</span><span class='line'>duoshuo_comments: true
</span><span class='line'>duoshuo_short_name: pbking1
</span><span class='line'>duoshuo_asides_num: 5
</span><span class='line'>duoshuo_asides_avatars: 1
</span><span class='line'>duoshuo_asides_time: 1
</span><span class='line'>duoshuo_asides_title: 1
</span><span class='line'>duoshuo_asides_admin: 0
</span><span class='line'>duoshuo_asides_length: 20
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>are important.</li>
</ul>


<h3>2. When overcome the problem that there is a blank near the jiathis button</h3>

<ul>
<li>the find the file under source/javascripts/octopress.js</li>
<li>locate the function wrapFlashVideos()</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function wrapFlashVideos() {
</span><span class='line'>  $('object').each(function(i, object) {
</span><span class='line'>    if( $(object).find('param[name=movie]').length ){
</span><span class='line'>          $(object).wrap('&lt;div class="flash-video"&gt;')
</span><span class='line'>    }
</span><span class='line'>  });
</span><span class='line'>  $('iframe[src*=vimeo],iframe[src*=youtube]').wrap('&lt;div class="flash-video"&gt;')
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>add the code <code>if(object.attr('id') != "JIATHISSWF")</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function wrapFlashVideos() {
</span><span class='line'>  $('object').each(function(i, object) {
</span><span class='line'>  if(object.attr('id') != "JIATHISSWF") {
</span><span class='line'>      if( $(object).find('param[name=movie]').length ){
</span><span class='line'>              $(object).wrap('&lt;div class="flash-video"&gt;')
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>  });
</span><span class='line'>  $('iframe[src*=vimeo],iframe[src*=youtube]').wrap('&lt;div class="flash-video"&gt;')
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>and soon the error blank will disappear</li>
</ul>


<h3>3.We will use</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate 
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>to update the blog</p></li>
<li><p>And use the command</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["test"]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>to create a new post blog article called &ldquo;test&rdquo;</li>
<li>So that you can edit the markdown file in the source/_posts</li>
<li>Add the article under the existing content using the markdown syntax</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_page["about me"]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>to create a new tab named &ldquo;about me&rdquo;</li>
<li>And add the following code to finish the change</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;ul class="main-navigation"&gt;
</span><span class='line'>  &lt;li&gt;&lt;a href="http://pbking1.github.com/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;&lt;a href="http://pbking1.github.com/blog/archives"&gt;Archives&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;&lt;a href="http://pbking1.github.com/project"&gt;Project&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>  &lt;li&gt;&lt;a href="http://pbking1.github.com/about"&gt;About Me&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>And we can use the command</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preivew</span></code></pre></td></tr></table></div></figure>


<ul>
<li>to preview the blog in the browser in the address &ldquo;localhost:4000&rdquo;

<h3>Only show the abstract of the article on the first page</h3></li>
<li>Add <code>&lt;!--more--&gt;</code> in the article</li>
<li>Then edit _config.yml in</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>excerpt_link: "read more"</span></code></pre></td></tr></table></div></figure>


<h3>4.if can not push the blog</h3>

<ul>
<li><p>The solution is to force a push on the master branch.</p></li>
<li><p>Edit the Rakefile and look for this line:</p></li>
<li><p><code>system "git push origin #{deploy_branch}"</code></p></li>
<li><p>Alter the line by adding a plus (+) before the #{deploy_branch} tag:</p></li>
<li><p><code>system "git push origin +#{deploy_branch}"</code></p></li>
<li><p>Run the command</p></li>
<li><p><code>rake deploy</code></p></li>
<li><p>It should succeed.</p></li>
<li><p><em>Undo</em> the edit you made to the Rakefile!</p></li>
</ul>


<h4>5.向Octopress添加JiaThis分享工具及冲突解决</h4>

<ul>
<li>在_config.yml底部添加如下配置：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># JiaThis
</span><span class='line'>jiathis: true</span></code></pre></td></tr></table></div></figure>


<ul>
<li>修改<code>source/_include/post/sharing.html</code>，在最后一行<code>&lt;/div&gt;</code>前添加如下代码：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>  &lt;!-- JiaThis Button BEGIN --&gt;
</span><span class='line'>  &lt;div class="jiathis_style"&gt;
</span><span class='line'>    &lt;span class="jiathis_txt"&gt;分享到：&lt;/span&gt;
</span><span class='line'>    &lt;a class="jiathis_button_tsina"&gt;新浪微博&lt;/a&gt;
</span><span class='line'>    &lt;a class="jiathis_button_googleplus"&gt;Google+&lt;/a&gt;
</span><span class='line'>    &lt;a class="jiathis_button_renren"&gt;人人网&lt;/a&gt;
</span><span class='line'>    &lt;a class="jiathis_button_qzone"&gt;QQ空间&lt;/a&gt;
</span><span class='line'>    &lt;a class="jiathis_button_tqq"&gt;腾讯微博&lt;/a&gt;
</span><span class='line'>    &lt;a href="http://www.jiathis.com/share" class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" target="_blank"&gt;更多&lt;/a&gt;
</span><span class='line'>    &lt;a class="jiathis_counter_style"&gt;&lt;/a&gt;
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;script type="text/javascript" src="http://v2.jiathis.com/code/jia.js?uid=1334720487296344" charset="utf-8"&gt;&lt;/script&gt;
</span><span class='line'>  &lt;!-- JiaThis Button END --&gt;
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><em>解决JiaThis与Octopress冲突</em></p></li>
<li><p>Octopress会对所有有movie属性的object标签添加一层形如<code>&lt;div class="flash-video"&gt;&lt;div&gt;</code>的wrapper，用于视频回放。</p></li>
<li>实现代码在<code>source/javascripts/octopress.js</code>中的wrapFlashVideos()函数：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function wrapFlashVideos() {
</span><span class='line'>  $('object').each(function(object) {
</span><span class='line'>    object = $(object);
</span><span class='line'>    if ( $('param[name=movie]', object).length ) {
</span><span class='line'>      var wrapper = object.before('&lt;div class="flash-video"&gt;&lt;div&gt;').previous();
</span><span class='line'>      $(wrapper).children().append(object);
</span><span class='line'>    }
</span><span class='line'>  });
</span><span class='line'>  $('iframe[src*=vimeo],iframe[src*=youtube]').each(function(iframe) {
</span><span class='line'>    iframe = $(iframe);
</span><span class='line'>    var wrapper = iframe.before('&lt;div class="flash-video"&gt;&lt;div&gt;').previous();
</span><span class='line'>    $(wrapper).children().append(iframe);
</span><span class='line'>  });
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>这层wrapper即是形成JiaThis分享工具条左下角小白框的原因。我们需要对object做一个判断，过滤掉JiaThis的object。 将wrapFlashVideos()函数改为以下代码即可：</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function wrapFlashVideos() {
</span><span class='line'>  $('object').each(function(object) {
</span><span class='line'>    object = $(object);
</span><span class='line'>    if (object.attr('id') != "JIATHISSWF") {
</span><span class='line'>      if ( $('param[name=movie]', object).length ) {
</span><span class='line'>  var wrapper = object.before('&lt;div class="flash-video"&gt;&lt;div&gt;').previous();
</span><span class='line'>  $(wrapper).children().append(object);
</span><span class='line'>      }
</span><span class='line'>    }
</span><span class='line'>  });
</span><span class='line'>  $('iframe[src*=vimeo],iframe[src*=youtube]').each(function(iframe) {
</span><span class='line'>    iframe = $(iframe);
</span><span class='line'>    var wrapper = iframe.before('&lt;div class="flash-video"&gt;&lt;div&gt;').previous();
</span><span class='line'>    $(wrapper).children().append(iframe);
</span><span class='line'>  });
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h3>6.加入disqus评论</h3>

<ul>
<li>把下面这段代码加入到系统原有的disqus_thread.html中，文件在_include/post里面</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> &lt;div id="disqus_thread"&gt;&lt;/div&gt;
</span><span class='line'>    &lt;script type="text/javascript"&gt;
</span><span class='line'>        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
</span><span class='line'>        var disqus_shortname = 'pbking1'; // required: replace example with your forum shortname
</span><span class='line'>
</span><span class='line'>        /* * * DON'T EDIT BELOW THIS LINE * * */
</span><span class='line'>        (function() {
</span><span class='line'>            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
</span><span class='line'>            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
</span><span class='line'>            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
</span><span class='line'>        })();
</span><span class='line'>    &lt;/script&gt;
</span><span class='line'>    &lt;noscript&gt;Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
</span><span class='line'>    &lt;a href="http://disqus.com" class="dsq-brlink"&gt;comments powered by &lt;span class="logo-disqus"&gt;Disqus&lt;/span&gt;&lt;/a&gt;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>然后再在_config.yml里面加入</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>disqus_short_name: name
</span><span class='line'>disqus_show_comment_count: true</span></code></pre></td></tr></table></div></figure>


<h3>7.add license</h3>

<ul>
<li>1.首先<code>source\_includes\post</code>目录中添加license.html文件</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;DIV style="font-size:12px;BORDER-BOTTOM: #bbbbbb 1px solid; BORDER-LEFT: #bbbbbb 1px solid; BACKGROUND: #f6f6f6; HEIGHT: 120px; BORDER-TOP: #bbbbbb 1px solid; BORDER-RIGHT: #bbbbbb 1px solid" class=oec2003right&gt; 
</span><span class='line'>&lt;DIV style="MARGIN-TOP: 10px; FLOAT: left; MARGIN-LEFT: 5px; MARGIN-RIGHT: 10px"&gt; 
</span><span class='line'>&lt;IMG alt="" src=xxx.jpg" width=90 height=100&gt;&lt;/DIV&gt; 
</span><span class='line'>&lt;DIV style="LINE-HEIGHT: 200%; MARGIN-TOP: 10px; COLOR: #000000"&gt; 
</span><span class='line'>作者： &lt;A href="http://pbking1.github.io/"&gt;pb&lt;/A&gt; &lt;BR&gt; 
</span><span class='line'>出处： &lt;A href="http://pbking1.github.io/"&gt;http://pbking1.github.io/&lt;/A&gt; 
</span><span class='line'>&lt;BR&gt;本文基于&lt;a target="_blank" title="Creative Commons Attribution 2.5 China Mainland License" href="http://creativecommons.org/licenses/by/2.5/cn/"&gt; 
</span><span class='line'>署名 2.5 中国大陆&lt;/a&gt;许可协议发布，欢迎转载，演绎或用于商业目的，但是必须保留本文的署名 
</span><span class='line'>&lt;a href="http://pbking1.github.io/"&gt;pb&lt;/a&gt;。 &lt;/DIV&gt;&lt;/DIV&gt; 
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<ul>
<li>2.在sass\custom_styles.scss添加如下样式信息来控制版权信息的样式</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.oec2003right 
</span><span class='line'>{ 
</span><span class='line'>    background: #C3D9FF; 
</span><span class='line'>    height:120px; 
</span><span class='line'>    border:1px solid #BBBBBB; 
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.oec2003right a:link 
</span><span class='line'>{ 
</span><span class='line'>    color: #0057b6; 
</span><span class='line'>    text-decoration: none; 
</span><span class='line'>} 
</span><span class='line'>.oec2003right a:visited 
</span><span class='line'>{ 
</span><span class='line'>    color: #0057b6; 
</span><span class='line'>    text-decoration: none; 
</span><span class='line'>} 
</span><span class='line'>.oec2003right a:active,a:hover 
</span><span class='line'>{ 
</span><span class='line'>    color: #0057b6; 
</span><span class='line'>    text-decoration: underline; 
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<ul>
<li>3.修改文件<code>source\_layouts\post.html</code>

<ul>
<li>add</li>
</ul>
</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- { % include post/license.html % }</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>int the meta class(去掉{和%之间的空格})</p></li>
<li><p>4.在_config.yml添加配置项用来控制是否显示页面的版权信息</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> # Post License
</span><span class='line'> post_license: true</span></code></pre></td></tr></table></div></figure>


<h3>8.add 3D tag cloud</h3>

<ul>
<li>download the package first</li>
<li>1.Copy the <code>plugins/category_cloud.rb</code> to your <code>octopress/plugins/</code>;</li>
<li>2.Copy the <code>source/_includes/custom/asides/category_cloud.html</code> to your <code>octopress/source/_includes/custom/asides/</code>;</li>
<li>3.Add the <code>octopress/source/_includes/custom/asides/</code> in Step 2 to your <code>default_asides</code> in your <code>octopress/_config.yml</code> file;</li>
<li>4.Copy the <code>source/javascripts/tagcloud.swf</code> to your <code>source/javascripts/</code> folder.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2013 IEEE International Conference on Robotics and Biomimetics]]></title>
    <link href="http://pbking1.github.com/blog/2014/04/09/2013-ieee-international-conference-on-robotics-and-biomimetics/"/>
    <updated>2014-04-09T13:08:03+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/04/09/2013-ieee-international-conference-on-robotics-and-biomimetics</id>
    <content type="html"><![CDATA[<pre><code>Dec 12-14 2013 shenzhen, China
</code></pre>

<h4>Team members</h4>

<pre><code>pengbin
qiudicong
zhudingqiao
</code></pre>

<h4>here are the picture</h4>

<p><img src="http://pbking1.github.com/images/ieee1.jpg">
<img src="http://pbking1.github.com/images/ieee2.jpg">
<img src="http://pbking1.github.com/images/ieee3.jpg"></p>

<!--more-->


<h4>Stable Reflex-based walking of forelimbs of a Bio-inspired Quadruped Robot-Modeled Cheetah</h4>

<pre><code>Osaka(大阪大学)
Shogo Nakatsu
</code></pre>

<ul>
<li>talk about reflex-based control</li>
<li>something like create muscle activity pattern through biographical electric</li>
<li>it can react 80cm/s</li>
<li>this is about a four legs robot</li>
</ul>


<h4>one of the researchers</h4>

<pre><code>first one 
name:Kottaeuser
paderborn
</code></pre>

<ul>
<li>focusing in 3D vision</li>
<li>some laser-based</li>
<li>some measurement</li>
</ul>


<h4>first interview of the researcher</h4>

<pre><code>name:C.de Chambrier
live and work in Switzerland
</code></pre>

<ul>
<li>And here are the answer to the four questions(<code>The answer are from the speaker not me~~~ and I make it seems like an interview to show you</code>):

<ul>
<li><strong>What are you major?</strong>

<ul>
<li>I am focusing on the AI algorithm and the strategy.</li>
<li>that is to say I am major in the higher level of the robotics.</li>
</ul>
</li>
<li><strong>How do you get interested in robotics?</strong>

<ul>
<li>when I am in master&rsquo;s degree, I am interested in robot</li>
</ul>
</li>
<li><strong>What impressed you most?</strong>

<ul>
<li>I am really interested in the strategy design and algorithm design of the robots.</li>
</ul>
</li>
<li><strong>what do you think about the robot will change the world in the next 10 years?</strong>

<ul>
<li>I have three point of view about what the robot is going to be in the next decade.</li>
<li>first of all

<ul>
<li>Automatic cars(like google smart car), is going to develop well to drive themselves. and they will be able to work without human affection. But due to the law, they may not be able to get on the road everywhere.</li>
</ul>
</li>
<li>secondly

<ul>
<li>home service robot is to be well developed. But they may be designed for specific task. Not just to make it human like.</li>
</ul>
</li>
<li>thirdly

<ul>
<li>human-like robot are kinds of wired, because human may alloy emotional association with those robots that looks like a human. And well-designed human-like robot may still need a long time to proceed.</li>
</ul>
</li>
</ul>
</li>
<li><strong>What are the biggest problems that YOU think robotics can solve in our generation?</strong>

<ul>
<li>I think that the materials are going to be the barrier to come over.</li>
<li>Currently, we have to use big actuators and movement which can not be smooth. The energy cost is high that a mobile robot has to carry a big battery, and yet the energy runs out so quickly. Hence, new materials that provide actions like a human body and in low energy cost are required for the future development of robotics.</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>second interview</h4>

<pre><code> a lecturer
 name:Inaki Rano
 from UK university of UIster
 have worked 6  years 
</code></pre>

<ul>
<li>talk about Direct collocation for two dimensional motion camoutflage with non-holonomic, velocity and acceleration constraints</li>
<li><strong>The movement of the human&rsquo;s hand between two location is always on a 3D plane, and he wanted to applied this phenomenon in object moving or obstacle-avoidance tasks for a grasping robot. He had mathematically proved a strong-related theory about this phenomenon</strong></li>
<li>And here are the answer to the four questions(<code>The answer are from the speaker not me~~~ and I make it seems like an interview to show you</code>):

<ul>
<li><strong>What are you major?</strong>

<ul>
<li>all kind of fields in the robotics</li>
</ul>
</li>
<li><strong>How do you get interested in robotics?</strong>

<ul>
<li>when I am in college, I am interested in robot</li>
</ul>
</li>
<li><strong>What impressed you most?</strong>

<ul>
<li>everything in the robot</li>
</ul>
</li>
<li><strong>what do you think about the robot will change the world in the next 10 years?</strong>

<ul>
<li>The robot may be very common in the future life and every one will notice it</li>
</ul>
</li>
<li><strong>What are the biggest problems that YOU think robotics can solve in our generation?</strong>

<ul>
<li>The Model that use to the robot may be one of the most difficult part in the robotics.</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>a researcher talk about using a smart phone to connect the Robot</h4>

<pre><code>a girl from China State Key lab of Robotics and System
</code></pre>

<ul>
<li>focusing in the protocol design</li>
</ul>


<h4>Direct and indirect social robot interactions in a hotel public space</h4>

<pre><code>a japanese researcher from Tsukuba(筑波大学)
name：潘雅冬
</code></pre>

<ul>
<li>talk about the social robot that react in the hotel</li>
<li>and he talk about three patterns

<ul>
<li>passing</li>
<li>looking</li>
<li>staying and approaching</li>
</ul>
</li>
<li>using 3 kinds of robot(human-like)

<ul>
<li>NAO</li>
<li>Gemini</li>
<li>Palro</li>
</ul>
</li>
<li>use kinect: Methodology

<ul>
<li>presence</li>
<li>position</li>
</ul>
</li>
</ul>


<h4>南开大学教授</h4>

<pre><code>段峰博士
建立系统，一种synchronous and control system
</code></pre>

<ul>
<li>also develop some kinect app on the nap robot</li>
</ul>


<h4>third interview</h4>

<pre><code>name:Yujin Wakita
work in AIST( The National Institute of Advanced Industrial Science and Technology)
have participate in robotic for 23 years
focus in UI(人机交互)
</code></pre>

<ul>
<li>application:

<ul>
<li>mobile assist</li>
<li>parking</li>
<li>power system of nurse</li>
<li>toilet robot</li>
</ul>
</li>
<li>And here are the answer to the four questions(<code>The answer are from the speaker not me~~~, and I make it seems like an interview to show you</code>):

<ul>
<li><strong>What are you major?</strong>

<ul>
<li>user interface, human assistance</li>
</ul>
</li>
<li><strong>How do you get interested in robotics?</strong>

<ul>
<li>when I am in high school, I am interested in robot</li>
</ul>
</li>
<li><strong>What impressed you most?</strong>

<ul>
<li>the robot that can assist human</li>
</ul>
</li>
<li><strong>what do you think about the robot will change the world in the next 10 years?</strong>

<ul>
<li>It is hard to say.Lots of designs and ideas are occurring. And it is hard to tell whether the assistance robots may develop towards human-like or functionally specialized.</li>
</ul>
</li>
<li><strong>What are the biggest problems that YOU think robotics can solve in our generation?</strong>

<ul>
<li>the social problem that may cost by the robot</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>Geometric balancing control of humanoid robots</h4>

<pre><code>LaSabana university
name:Mario Arbulu
</code></pre>

<ul>
<li>societal side</li>
<li>front side</li>
<li>use attitude sensor</li>
</ul>

]]></content>
  </entry>
  
</feed>
