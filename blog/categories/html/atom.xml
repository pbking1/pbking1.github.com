<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: html | KING]]></title>
  <link href="http://pbking1.github.com/blog/categories/html/atom.xml" rel="self"/>
  <link href="http://pbking1.github.com/"/>
  <updated>2016-02-12T13:33:20-06:00</updated>
  <id>http://pbking1.github.com/</id>
  <author>
    <name><![CDATA[pb]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2014_indianapolis_redefined_hackathron]]></title>
    <link href="http://pbking1.github.com/blog/2014/10/30/2014-indianapolis-redefined-hackathron/"/>
    <updated>2014-10-30T20:25:44-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/10/30/2014-indianapolis-redefined-hackathron</id>
    <content type="html"><![CDATA[<h3>The hackathron take 24 hours to write an app that can be used for attracting people to indianapolis</h3>

<ul>
<li>and I first design a python version of app</li>
<li>then I use bootstrap theme to develop a mobile compatible web app with php link to the mysql database.</li>
</ul>


<!--more-->


<h3>The code</h3>

<ul>
<li>I have already post the code in github</li>
<li><a href="https://github.com/pbking1/Intro-to-indy">https://github.com/pbking1/Intro-to-indy</a></li>
</ul>


<h3>The summary</h3>

<ul>
<li>using the bootstrap theme can minimise the work in the front end and make the development focus more on the back end logic or database.</li>
<li>talking to a mentor will definitaly help you develop a better software</li>
<li>read the description document carefully before coding</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[use sqlite in html5]]></title>
    <link href="http://pbking1.github.com/blog/2014/06/08/use-sqlite-in-html5/"/>
    <updated>2014-06-08T21:50:05-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/06/08/use-sqlite-in-html5</id>
    <content type="html"><![CDATA[<ul>
<li>There are three ways to store data using html5

<ul>
<li>using database (sqlite)</li>
<li>using localStorage

<ul>
<li>will only store on client, will not send to server</li>
<li>this data can be read even using different block on the same browser</li>
<li>the data will not disapear unless you delete it</li>
</ul>
</li>
<li>using sessionStorage</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li><p>The localStorage and sessionStorage are storing the data on your computer and after the web page is loaded</p>

<ul>
<li>we can use javascript to get the data</li>
</ul>
</li>
<li><p>running the first time</p>

<ul>
<li>use all the following code can see the db insert and query successfully</li>
</ul>
</li>
<li>but in the second time

<ul>
<li>you should note the create and insert</li>
<li>then you can see the result</li>
</ul>
</li>
</ul>


<p>```
<html></p>

<pre><code>&lt;body&gt;
    &lt;script type="text/javascript"&gt;
        //the first way to store the data
        if(localStorage.pagecount){
            localStorage.pagecount = Number(localStorage.pagecount) + 1;
            }else{
            localStorage.pagecount = 1;
        }
        document.write("Visits: " + localStorage.pagecount + " time(s).");

        //the second way to store the data
        //using sqlite
        var db = openDatabase("mytestdb", "1.0", "stu list", 1024*1024, function(){});
        //use the command `openDatabase` can create a data base
        //name, version, discription, db size
        alert("&lt;p&gt;create db success&lt;/p&gt;");
        db.transaction(function(tx){
                tx.executeSql("CREATE TABLE IF NOT EXISTS test(id int UNIQUE, title TEXT, content TEXT)");
                document.write("&lt;p&gt;create table test successfully&lt;/p&gt;");
                tx.executeSql("insert into test(id, title, content) values(1, '111', 'swq')");
                tx.executeSql("insert into test(id, title, content) values(2, 'bbb', 'sawf')");
                document.write("&lt;p&gt;insert two contents successfully&lt;/p&gt;");
                tx.executeSql("SELECT * FROM test", [], function(tx, rs){
                    var len = rs.rows.length;
                    alert(len + "");
                    for(var i = 0; i &lt; rs.rows.length; i++){
                        var testObj = rs.rows.item(i);
                        alert(testObj.id + "-----" + testObj.title);
                    }
                });
        });
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>

<p></html></p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phonegap 框架原理]]></title>
    <link href="http://pbking1.github.com/blog/2014/06/06/phonegap-kuang-jia-yuan-li/"/>
    <updated>2014-06-06T04:03:43-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/06/06/phonegap-kuang-jia-yuan-li</id>
    <content type="html"><![CDATA[<h4>phonegap 实现原理</h4>

<ul>
<li><code>关键</code>

<ul>
<li>1.用webview在本地来渲染解析html

<ul>
<li><strong>因此实际上他就是一个内嵌的浏览器</strong>

<ul>
<li>类似于一个WebView，但是phonegap对webview做了些改造</li>
</ul>
</li>
</ul>
</li>
<li>2.基于plugin模式来封装调用原生API

<ul>
<li>以原生app的方式来运行</li>
<li>用js调用原生的功能</li>
</ul>
</li>
<li>3.在框架首次启动的时候加载CallbackServer线程，并且监听前端XHR请求和链表中有无数据

<ul>
<li>当XHR请求来了而链表为空，则线程等待10秒

<ul>
<li>如果这个时间内有数据来，那么就唤醒线程把数据传到前端</li>
</ul>
</li>
<li>如果10s后没有数据，则传空数据回前端</li>
<li><code>基于服务器推技术</code></li>
</ul>
</li>
<li>4.同步请求和异步请求有关键的区别</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li><code>他如何实现跨平台的</code>

<ul>
<li>phonegap在每一种中都实现了一套后台的框架，分别和每个平台的API进行交互，从而调用它的原生API，然后对应开发人员提供统一的接口，也就是phonegap的API。</li>
<li>因此，开发人员只需要使用web技术就可以对移动平台进行快速开发</li>
<li>而且跨平台也是只是前端跨平台。</li>
</ul>
</li>
<li><code>这个开源的项目的贡献者</code>

<ul>
<li>这个开源项目中IBM贡献的代码比创始者（温哥华的一家小公司）还多。</li>
<li>Apache Cordova是phongap贡献给apache的一个开源项目

<ul>
<li>他有phonegap里面的核心代码</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>phonegap的优点</h4>

<ul>
<li>app的前台兼容性好</li>
<li>标准化， 由于使用的是W3C标准，所以web前端可直接用于web app。</li>
<li>js+html5和java+xml很像</li>
<li>装起来也不麻烦，用起来比较容易</li>
<li>提供硬件访问</li>
</ul>


<h4>phonegap的缺点</h4>

<ul>
<li>反应很慢（亲身实践过）</li>
<li>交互很差</li>
<li>内存消耗大

<ul>
<li>有人做过测试，和用java写android对比，phonegap明显消耗更多内存</li>
<li>而且释放内存很慢</li>
</ul>
</li>
<li>调试也麻烦</li>
</ul>


<h4>有谁在用</h4>

<ul>
<li>wikipedia

<ul>
<li>它的移动应用就是用phonegap写的</li>
</ul>
</li>
<li>Facebook

<ul>
<li>移动版SDK的一部分是cordova的一个分支</li>
</ul>
</li>
<li>Salesforce

<ul>
<li>移动版的SDK的一部分是cordova的一个分支</li>
</ul>
</li>
<li>IBM

<ul>
<li>移动平台建立在phonegap上</li>
<li>并且积极参与到phonegap的开发里面</li>
</ul>
</li>
<li>Microsoft

<ul>
<li>正在积极参与windows phone的那一部分的开发</li>
</ul>
</li>
<li>Adobe

<ul>
<li>2011年Adobe收购了phonegap得私人开发商Notibi，并将phonegap贡献给apache并且开源</li>
</ul>
</li>
<li>blackberry</li>
<li>zynga

<ul>
<li>用phonegap和html5写了不少很好的游戏</li>
</ul>
</li>
<li>cisco</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[build ios webapp using phonegap and jquery mobile]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/27/build-ios-webapp-using-phonegap-and-jquery-mobile/"/>
    <updated>2014-05-27T04:30:09-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/27/build-ios-webapp-using-phonegap-and-jquery-mobile</id>
    <content type="html"><![CDATA[<h3>first install phonegap</h3>

<ul>
<li>download <code>phonegap-2.9.1</code>

<ul>
<li>enter the lib/ios/bin</li>
<li>use the command <code>./create ~/Documents/html_app/testphonegap test_phonegap test1</code>

<ul>
<li>to create the project that is located in <code>~/Documents/html_app/</code> and the name of it is <code>test_phonegap</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<h3>then use xcode to open the project</h3>

<ul>
<li>add the following code in the index.html and run the simulater</li>
<li>the jquery mobile is used from internet and we do not need to download it

<ul>
<li>but I can not find out a way to use the jquery mobile js file in my computer</li>
</ul>
</li>
<li>remember to add <code>&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</code> to enable the chinese utf-8</li>
</ul>


<p>```
<html></p>

<pre><code>&lt;head&gt;
    &lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css"&gt;
        &lt;script src="http://code.jquery.com/jquery-1.8.3.min.js"&gt;&lt;/script&gt;
        &lt;script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"&gt;&lt;/script&gt;
         &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div data-role="page" id="pageone"&gt;
        &lt;div data-role="header"&gt;
            &lt;h1&gt;欢迎来到我的主页&lt;/h1&gt;
            &lt;div data-role="navbar"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;a href="#" class="ui-btn-active" data-icon="home"&gt;首页&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#pagetwo" data-icon="arrow-r"&gt;页面二&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;select name="day" id="day"&gt;
                &lt;optgroup label="Weekdays"&gt;
                    &lt;option value="mon"&gt;Monday&lt;/option&gt;
                    &lt;option value="tue"&gt;Tuesday&lt;/option&gt;
                    &lt;option value="wed"&gt;Wednesday&lt;/option&gt;
                &lt;/optgroup&gt;
                &lt;optgroup label="Weekends"&gt;
                    &lt;option value="sat"&gt;Saturday&lt;/option&gt;
                    &lt;option value="sun"&gt;Sunday&lt;/option&gt;
                &lt;/optgroup&gt;
            &lt;/select&gt;
        &lt;/div&gt;

        &lt;div data-role="content"&gt;
            &lt;p&gt;本例设有 ui-btn-active 类，请注意首页按钮时突出显示的（已选）。&lt;/p&gt;
            &lt;p&gt;如果点击页面二，您会注意到按钮不会突出显示。&lt;/p&gt;
        &lt;/div&gt;

        &lt;div data-role="footer"&gt;
            &lt;h1&gt;我的页脚&lt;/h1&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;div data-role="page" id="pagetwo"&gt;
        &lt;div data-role="header"&gt;
            &lt;h1&gt;欢迎来到我的主页&lt;/h1&gt;
            &lt;div data-role="navbar"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;a href="#pageone" data-icon="home"&gt;首页&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#" data-icon="arrow-r"&gt;页面二&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;

        &lt;div data-role="content"&gt;
            &lt;p&gt;本页中没有被预选的按钮（突出显示）。&lt;/p&gt; 
            &lt;p&gt;如需让按钮被选的外观表示当前正在访问页面，请返回导航栏教程，继续向下阅读。&lt;/p&gt;
        &lt;/div&gt;

        &lt;div data-role="footer"&gt;
            &lt;h1&gt;我的页脚&lt;/h1&gt;
        &lt;/div&gt;
    &lt;/div&gt; 
&lt;/body&gt;
</code></pre>

<p></html></p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML5和移动平台的原生应用对比]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/27/html5he-yi-dong-ping-tai-de-yuan-sheng-ying-yong-dui-bi/"/>
    <updated>2014-05-27T00:17:39-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/27/html5he-yi-dong-ping-tai-de-yuan-sheng-ying-yong-dui-bi</id>
    <content type="html"><![CDATA[<h3>问题所在</h3>

<ul>
<li>當前熱門已極的移动開發，所面臨的卻是一個使用平台與裝置類型極其複雜的開發環境，光就行動平台而言，便同時有Windows、Mac、iOS與Android四大平台；再就CPU機器碼來說，則有Intel與ARM兩大平台；即使是Android平台，開發者可能面對的會是百家爭鳴、大小廠牌林立的複雜狀況。</li>
</ul>


<h3>哪些App适合用HTML5开发？</h3>

<ul>
<li>搜索产品</li>
<li>社交产品</li>
<li>资讯新闻产品</li>
<li>游戏产品</li>
</ul>


<h3>HTML5的优点</h3>

<ul>
<li>HTML5最主要的优势就在于它适合<strong><code>众多平台</code></strong>，从PC浏览器到手机、平板电脑，甚至将来的智能电视。只要设备浏览器支持HTML5，HTML5应用或游戏在该平台中就可以直接运行。</li>
<li>如今大部分浏览器</li>
<li><img src="http://pbking1.github.com/images/internship_zst/compare_1.png"></li>
<li>这带来原生应用所没有的优点(注：原生应用通常需要进行重新设计，方能投放至另一个目标操作系统)。若开发者想要将自己的iOS游戏移植到Android平台，他就需要对游戏做出根本性的调整。有了HTML5技术，此过程就会简单许多。</li>
<li>HTML5可<code>跨平台</code>运行</li>
</ul>


<!--more-->


<ul>
<li><p>Zynga德国工作室的Paul Bakaus(他曾协助公司将此技术植入公司的各款网页和手机游戏中)表示，“推广HTML5技术的理由很多。”</p>

<ul>
<li>他表示，“一个优点就是我们能够轻松将其推广至手机浏览器。例如，你无需进行安装——这是一大优点。再来就是内容更新和跨平台开发。若你创建的是原生应用，多数情况下你需要分别在Android和iOS平台创建内容，也许还有桌面平台。<code>基于HTML5技术，你只需要制作一次，就可以将其推广至各平台</code>。”</li>
</ul>
</li>
<li><p>美国消费者在Apps上花费的时间依然远多于移动Web</p></li>
<li><p><img src="http://pbking1.github.com/images/internship_zst/compare_2.png"></p></li>
<li><p>对HTML5移动Web及其他平台感兴趣的开发者比例</p></li>
<li><img src="http://pbking1.github.com/images/internship_zst/compare_6.png"></li>
</ul>


<h3>HTML5的缺点</h3>

<ul>
<li>虽然HTML5原先旨在服务各种设备，但我们依然<code>无法确保其能够顺利适应各种硬件标准。</code></li>
<li>HTML5的运作情况无法预测</li>
<li>为保证获得较高质量的内容，我们得在多种设备上测试应用——只有这样我们才能保证应用能够顺利运作。我相信未来我们会看到更多测试工具及更优质的标准，但Android QA依然是HTML5开发的痛处。</li>
<li><strong><code>声音</code></strong>显然在游戏开发中占据重要位置。但遗憾的是，这是HTML5的一大缺陷所在。该平台的可用API相比原生应用环境略逊一筹。</li>
<li><code>浏览器的HTML5兼容性不统一</code></li>
<li>HTML5应用区别于手机原生应用的重要地方在于<code>其没有统一的应用商店</code>。这有其利弊，我们需要事先把握。显然投身网络平台的主要优点在于发行和更新内容无 需经过审批过程。和苹果iTunes 不同，HTML5允许开发者随时更新或发行游戏，无需等待平台所有者的回应。</li>
<li>开发者对HTML5的几点不满——绿色为满意，红色为不满，从左到右依次为跨平台开发、快速更新、盈利、安全性、碎片化、性能、适时更新、用户体验、发行

<ul>
<li><img src="http://pbking1.github.com/images/internship_zst/compare_7.png"></li>
</ul>
</li>
<li><p>一方面，浏览器市场本身就呈现出“群雄割据”之势；另一方面，很多智能手机用户（尤其是Android用户）<strong>不会及时更新软件</strong>。</p>

<ul>
<li><p>即便是最新的浏览器，对HTML5的支持也并不完善——例如我们在近期的一份分析报告中发现，Android上的最新版Chrome浏览器在虽然支持98项HTML5功能，但是也不支持28项功能。</p></li>
<li><p>这种不均衡会影响HTML5的跨平台吸引力，而事实上，大量HTML5开发工作依然是致力于桌面环境的。</p></li>
<li><p>此外，HTML5在移动领域也面临一些<strong>安全性的问题</strong>，部分原因是HTML5应用与数据的互动方式导致的。“保障HTML5数据的安全是件极其困难的事情。”金说道。</p></li>
</ul>
</li>
</ul>


<h3>原生应用的优点</h3>

<ul>
<li>可访问手机所有功能（GPS、摄像头）；</li>
<li>速度更快、性能高、整体用户体验不错；</li>
<li>可线下使用（因为是在跟Web相对地平台上使用的）；</li>
<li>支持大量图形和动画; 容易发现（在App Store里面）和重新发现（应用图标会一直在主页上）；</li>
<li><p>应用下载能创造盈利（当然App Store抽取20-30% 的营收）。</p></li>
<li><p>移动应用云计算技术公司Appcelerator的企业策略总监迈克尔•金（Michael King）表示,原生应用的优势用一个词概括就是：<code>性能</code>。</p>

<ul>
<li><p>Appcelerator 提出了“互动性斜坡（The Slope Of Interactivity）”概念，指出HTML5适合那些互动性不太强的应用，例如那些单纯提供网络内容或界面非常简单的应用。然而，如果沿着互动性斜坡上行，那些互动更多的应用就需要原生手段了。</p></li>
<li><p>但是，有些设备功能时HTML5做不到的，这往往是因为用户的移动浏览器或浏览器版本不支持HTML5实现那些功能。</p></li>
</ul>
</li>
</ul>


<h3>原生应用的缺点</h3>

<ul>
<li>开发成本高；</li>
<li>支持设备非常有限（一般是哪个系统就在哪个平台专属设备上用）；</li>
<li>上线时间不确定（App Store审核过程不一）；</li>
<li>内容限制（App Store限制）；</li>
<li>获得新版本时需重新下载应用更新。</li>
</ul>


<h3>对比</h3>

<ul>
<li>为何从长远来看，HTML5在移动开发领域比原生应用更具优势。

<ul>
<li><p>性能差距：HTML5的监管机构W3C已经大大推动了相关标准的制定和移动浏览器对HTML5功能的支持，但是很多性能方面的问题依然没有解决。</p></li>
<li><p>开发者的心声：我们采访了各种各样的人——从怀疑者、早期使用者到倡导者和先行者，我们向他们提出了同一个问题：“在这场HTML5与原生应用的大争论当中，我们的立场又是什么？”</p></li>
<li>总体而言，我们发现HTML5正在被越来越多人接受，而一些项目已经证明了它的价值。</li>
<li><img src="http://pbking1.github.com/images/internship_zst/compare_3.png"></li>
<li><img src="http://pbking1.github.com/images/internship_zst/compare_4.png"></li>
<li><img src="http://pbking1.github.com/images/internship_zst/compare_5.png"></li>
</ul>
</li>
<li>说到底，HTML5与原生应用在质量上的差别，更多来自于移动开发者运用相关语言的才华和经验，而并非HTML5的局限性</li>
<li><p>你喜欢用什么方法来开发支持多平台的应用？紫色为HTML5、绿色为混合应用、红色为一个原生加一个HTML5、蓝色为原生；从上到下依次为全球化企业、大型企业、中型公司、小公司、初创企业（少于5人）、整体。</p>

<ul>
<li><img src="http://pbking1.github.com/images/internship_zst/compare_8.png"></li>
<li>HTML5是大型企业打造大量应用的一个重要技术趋势（参见上图）。在全球化企业中，近40%的开发人员表示将采用纯HTML5技术开发多平台应用</li>
</ul>
</li>
<li>最近，Business Insider在一份新出炉的报告中分析了HTML5和原生应用的优缺点

<ul>
<li>在<code>用户体验及性能方面</code>，<strong>原生应用要超过HTML5应用</strong>，理由是HTML5依然不能很好地通过所有移动浏览器访问设备原生功能，在打造图形丰富的用户界面和呈现数据方面也存在局限性。</li>
<li>在<code>跨平台部署成本方面</code>，<strong>HTML5要占优势</strong>，因为HTML5是Web领域的通用语言，不受设备或操作系统限制。W3C正在接洽汽车、出版和电视行业的公司以推广Web。</li>
<li>在<code>快速更新和发行控制方面</code>，<strong>HTML5胜过原生应用</strong>。HTML5的一大优势是开放性——它基于Web，所以没有任何一家公司（如谷歌、苹果、亚马逊或三星）可以充当“掌门人”、放缓更新或者瓜分应用收入。不过，HTML5在支持设备厂商推出的创新手机功能时有点慢。</li>
<li>在<code>盈利方面</code>，<strong>原生应用更胜一筹</strong>。苹果App Store和谷歌Google Play等原生应用商店优势明显。而HTML5除了软件开发商各自在线销售应用之外，还没有出现令人信服的盈利模式。</li>
<li>在<code>编程人才数量方面</code>，<strong>HTML5占优势</strong>。HTML5、Javascript和CSS都是Web领域的通用语言，而相比之下，iOS工程师比较短缺而且开价昂贵。</li>
</ul>
</li>
</ul>


<h3>网友评论</h3>

<ul>
<li><p><strong>网友A</strong></p>

<ul>
<li><p>HTML5 技术开发的 Web 应用应该还是有前途的，应该会随着本身的稳定和设备本身的支持也好，性能增强也好，会越来越普遍。不过当前由于种种条件不是特别的成熟。使得HTML5的发展遇到了一些限制。</p></li>
<li><p>当然，要想获得更好的体验，无疑是要用原生的语言来进行应用开发。</p></li>
<li><p>从目前来看HTML5，与原生应用，还不存在多大的竞争关系，前者更多的是尝试，一直在成熟中，从将来来看，也应该分领域，比如要求比较高的游戏，是不太可能全用HTML5开发的。 而对于传统领域到移动领域的转型所做的展示类型的应用，可能HTML5更合适一些，满足要求又跨平台。</p></li>
</ul>
</li>
<li><p>网友B</p>

<ul>
<li>我觉得Web App和Native App是互补的关系，而如果能利用2者的优点制作出Hybrid App那是最好的。</li>
<li>首先说说Web App，从开发成本，适配，还有便捷都是最好的。但是劣势就是在于，HTML5不是很成熟，还有就是对于消息推送，还有调用本地文件能力有点弱。以及在类似中国部分地区网络貌似不是很给力的说。</li>
<li>而Native App在提供用户体验更胜一筹，而且消息推送，调用本地功能【相机、语音等】方便，但因这样就必须针对不同平台提供不同体验。同时开发成本也就高，而且移植到不同平台上也麻烦。最关键就是在于开发的APP是需要审核。</li>
<li>所以如果能利用好HTML5的优点，结合原生态的优点，达到互补用户体验应该可以上一层。</li>
</ul>
</li>
</ul>


<h3>资料来源</h3>

<ul>
<li><a href="http://www.cnblogs.com/Better-Me/p/3478973.html">http://www.cnblogs.com/Better-Me/p/3478973.html</a></li>
<li><a href="http://www.ithome.com.tw/pr/87940">http://www.ithome.com.tw/pr/87940</a></li>
<li><a href="http://mobile.51cto.com/app-show-410661.htm">http://mobile.51cto.com/app-show-410661.htm</a></li>
<li><a href="http://mobile.51cto.com/comment-386277.htm">http://mobile.51cto.com/comment-386277.htm</a></li>
<li><a href="http://mobile.51cto.com/comment-385747.htm">http://mobile.51cto.com/comment-385747.htm</a></li>
<li><a href="http://www.infoq.com/cn/news/2013/03/html5-native-mobile">http://www.infoq.com/cn/news/2013/03/html5-native-mobile</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
