<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | KING]]></title>
  <link href="http://pbking1.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://pbking1.github.io/"/>
  <updated>2014-04-13T23:49:34+08:00</updated>
  <id>http://pbking1.github.io/</id>
  <author>
    <name><![CDATA[pb]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My Vim Configuration]]></title>
    <link href="http://pbking1.github.io/blog/2014/04/09/my-vim-configuration/"/>
    <updated>2014-04-09T18:35:16+08:00</updated>
    <id>http://pbking1.github.io/blog/2014/04/09/my-vim-configuration</id>
    <content type="html"><![CDATA[<ul>
<li>This is the vim configuration of my mac.</li>
<li>edit the file in the /usr/share/vim named &ldquo;vimrc&rdquo;</li>
<li>Some of them need to install some plugins and the command line will make sense</li>
</ul>


<!--more-->


<p>```</p>

<p>&ldquo; Configuration file for vim
set modelines=0     &rdquo; CVE-2007-2438
set number
&ldquo; Normally we use vim-extensions. If you want true vi-compatibility
&rdquo; remove change the following statements
set nocompatible    &ldquo; Use Vim defaults instead of 100% vi compatibility
set backspace=2     &rdquo; more powerful backspacing
&ldquo; Don&rsquo;t write backup file if vim is being called by "crontab -e&rdquo;
au BufWrite /private/tmp/crontab.<em> set nowritebackup
&ldquo; Don&rsquo;t write backup file if vim is being called by "chpass&rdquo;
au BufWrite /private/etc/pw.</em> set nowritebackup
set autoread
nmap <leader>w :w!<cr>
&ldquo;map <leader>e :e! ~/.vim_runtime/vimrc<cr>
&rdquo; autocmd! bufwritepost vimrc source ~/.vim_runtime/vimrc
set so=7
set ruler
set cmdheight=2
set hid
set magic
set noerrorbells
syntax enable</p>

<p>&ldquo;ctag和taglist
let Tlist_Ctags_Cmd=&lsquo;/usr/local/bin/ctags&rsquo;
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let Tlist_WinWidth=30
let Tlist_Process_File_Always=1
let Tlist_Use_SingleClick=1
let Tlist_Auto_Open=1
map<F8> :Tlist<CR>
set tags=tags;
set autochdir
 "nmap ct :!ctags -R &mdash;c++-kinds=+p &mdash;fields=+iaS &mdash;extra=+q .<CR></p>

<p>&ldquo;配色
colorscheme desert</p>

<p>&ldquo;python自动补全
let g:pydiction_location=&lsquo;/usr/share/vim/vim73/ftplugin/complete-dict&rsquo;
let g:pydiction_menu_height=15
"winmanager
let g:winManagerwindowLayout=&lsquo;FileExplorer|TagList&rsquo;
nmap wm :WMToggle<CR></p>

<p>&ldquo;nerdtree
let NERDChristmasTree=1
let NERDTreeAutoCenter=1
let NERDTreeMouseMode=2
let NERDTreeShowBookmarks=1
let NREDTreeShowFiles=1
let NERDTreeShowHidden=1
let NERDTreeShowLineNumbers=1
let NERDTreeWinPos=&lsquo;left&rsquo;
let NERDTreeWinSize=31
"nnoremap f :NERDTreeToggle
nnoremap ff :NERDTree<CR></p>

<p>set smartcase
set hlsearch
set tabstop=4
set noexpandtab
set shiftwidth=4
set smarttab
set confirm
set autoindent
set cindent
set softtabstop=4
set history=700
set nobackup
set noswapfile
set ignorecase
set incsearch
set gdefault
set langmenu=zh_CN.UTF-8
set helplang=cn
set statusline=%F%m%r%h%w\ [FORMAT=%{&amp;ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\&ldquo;%d/%m/%y\     &ndash;\ %H:%M\&rdquo;)}
set laststatus=2</p>

<p>filetype on
filetype plugin on
filetype plugin indent on
filetype indent on
set viminfo+=!
set iskeyword+=_,$,@,%,#,&ndash;
set linespace=0
set backspace=2</p>

<p>set mouse=a
set selection=exclusive
set selectmode=mouse,key
set report=0
set shortmess=atl
set showmatch
&ldquo;set fillchars=vert:\,stl:\,stlnc:\
set matchtime=5
 &rdquo; 能够漂亮地显示.NFO文件
set encoding=utf-8
function! SetFileEncodings(encodings)</p>

<pre><code>let b:myfileencodingsbak=&amp;fileencodings
let &amp;fileencodings=a:encodings
</code></pre>

<p>endfunction
function! RestoreFileEncodings()</p>

<pre><code>let &amp;fileencodings=b:myfileencodingsbak
unlet b:myfileencodingsbak
</code></pre>

<p>endfunction</p>

<p>au BufReadPre <em>.nfo call SetFileEncodings(&lsquo;cp437&rsquo;)|set ambiwidth=single
au BufReadPost </em>.nfo call RestoreFileEncodings()</p>

<p>&ldquo; 高亮显示普通txt文件（需要txt.vim脚本）
au BufRead,BufNewFile *  setfiletype txt</p>

<p>&ldquo; C的编译和运行
map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
exec "w&rdquo;
exec &ldquo;!gcc % -o %&lt;&rdquo;
exec &ldquo;! ./%&lt;&rdquo;
endfunc</p>

<p>&ldquo; C++的编译和运行
map <F6> :call CompileRunGpp()<CR>
func! CompileRunGpp()
exec "w&rdquo;
exec &ldquo;!g++ % -o %&lt;&rdquo;
exec &ldquo;! ./%&lt;&rdquo;
endfunc</p>

<p>&ldquo;Markdown to HTML<br/>
nmap <leader>md :%!/usr/local/bin/Markdown.pl &mdash;html4tags <cr></p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
