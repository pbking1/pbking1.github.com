<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: IOS | KING]]></title>
  <link href="http://pbking1.github.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://pbking1.github.com/"/>
  <updated>2014-06-25T15:04:13+08:00</updated>
  <id>http://pbking1.github.com/</id>
  <author>
    <name><![CDATA[pb]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IOS UILabel and UITextfield]]></title>
    <link href="http://pbking1.github.com/blog/2014/06/25/ios-uilabel-and-uitextfield/"/>
    <updated>2014-06-25T15:00:33+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/06/25/ios-uilabel-and-uitextfield</id>
    <content type="html"><![CDATA[<h3>label</h3>

<ul>
<li>相当于android里面的textview</li>
<li>用setText来设置内容</li>
<li>setBackground来设置背景颜色</li>
</ul>


<!--more-->


<p>```</p>

<pre><code>UILabel *label1 = [[UILabel alloc] initWithFrame:CGRectMake(10, 60, 290, 44)];
[label1 setText:@"项目里程碑                          请选择&gt;"];
[label1 setBackgroundColor:[UIColor whiteColor]];
[self.view addSubview:label1];
</code></pre>

<p>```</p>

<h3>textfield</h3>

<ul>
<li>相当于android里面的edittext</li>
<li>用layer.cornerRadius设置圆角</li>
<li>placeholder设置hint，提示</li>
<li>貌似使用这些方法需要把UITextfield定义在.h里面</li>
</ul>


<p>```</p>

<pre><code>UITextField *text1 = [[UITextField alloc] initWithFrame:CGRectMake(10, 340, 290, 84)];
self.text1.placeholder = @"进度说明";
self.text1.layer.cornerRadius = 10;
[text1 setBackgroundColor:[UIColor whiteColor]];
[self.view addSubview:text1];
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS UIButton]]></title>
    <link href="http://pbking1.github.com/blog/2014/06/25/ios-uibutton/"/>
    <updated>2014-06-25T11:01:58+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/06/25/ios-uibutton</id>
    <content type="html"><![CDATA[<h3>IOS的button其实和其他的控件使用方法差不多</h3>

<ul>
<li>首先初始化button，用CGRectMake把控件画在view上</li>
<li>使用setTitle设置button的文字</li>
<li>使用layer来设置边界</li>
<li>用action里面设置selector来跳转或者响应事件</li>
</ul>


<!--more-->


<p>```</p>

<pre><code>UIButton *button1 = [[UIButton alloc] initWithFrame:CGRectMake(0, 420, 160, 44)];
[button1 setTitle:@"进度填报" forState:UIControlStateNormal];
//button1.backgroundColor = [UIColor colorWithRed:(12/255) green:(22/255) blue:(32/355) alpha:1.0];
[button1.layer setBorderWidth:1.0];
[button1 setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
[button1 addTarget:self action:@selector(gotorenewpage:) forControlEvents:UIControlEventTouchUpInside];
[self.view addSubview:button1];
</code></pre>

<p>```</p>

<p>```
&ndash; (void)gotorenewpage:(UIButton *)paramSender{</p>

<pre><code>viewcontroller *p = [[viewcontroller alloc] init];
[self presentModalViewController:p animated:YES];
[p release];
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS Segment Control]]></title>
    <link href="http://pbking1.github.com/blog/2014/06/25/ios-segment-control/"/>
    <updated>2014-06-25T11:01:49+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/06/25/ios-segment-control</id>
    <content type="html"><![CDATA[<h3>segment control</h3>

<ul>
<li>这一段是使用CGrectmake在view上直接按照坐标大小画segment control</li>
<li>因为tabbar只能按照默认的放在底部</li>
<li>因此要使用放在顶部的类似tabbar的效果有两种方式

<ul>
<li>一种就是segment control，每点击一个item就跳转到那个item对应的view那里</li>
<li>还有一种是使用button来仿造tabbar</li>
<li>不过总体来说还是button效果好一点</li>
</ul>
</li>
</ul>


<!--more-->


<p>```
&ndash; (void)viewDidLoad
{</p>

<pre><code>[super viewDidLoad];
//segment control
NSArray *items = [NSArray arrayWithObjects:@"关注项目", @"全部项目", nil];
UISegmentedControl *segmentedControl = [[UISegmentedControl alloc] initWithItems:items];
[segmentedControl setFrame:CGRectMake(15, 50, 300, 50)];  //画segment control
[segmentedControl addTarget:self action:@selector(segmentedControlChangedValue:) forControlEvents:UIControlEventValueChanged];  //响应事件
[segmentedControl setTag:1];
[self.view addSubview:segmentedControl];
[segmentedControl release];
</code></pre>

<p>}
```</p>

<ul>
<li>接下来通过使用不同的segmentControl里面的index来判断点了哪个，然后进行跳转</li>
</ul>


<p>```
&ndash; (void)segmentedControlChangedValue:(UISegmentedControl *)segmentedControl {</p>

<pre><code>NSInteger selectedindex = [segmentedControl selectedSegmentIndex];
if(selectedindex == 0){
    partViewController *p = [[partViewController alloc] init];
    [self presentModalViewController:p animated:YES];
    //[self dismissModalViewControllerAnimated:YES];
    [p release];
}else if(selectedindex == 1){
    allproViewController *a = [[allproViewController alloc] init];
    [self presentModalViewController:a animated:YES];
    //[self dismissModalViewControllerAnimated:YES];
    [a release];
}
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build Ios Webapp Using Phonegap and Jquery Mobile]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/27/build-ios-webapp-using-phonegap-and-jquery-mobile/"/>
    <updated>2014-05-27T17:30:09+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/27/build-ios-webapp-using-phonegap-and-jquery-mobile</id>
    <content type="html"><![CDATA[<h3>first install phonegap</h3>

<ul>
<li>download <code>phonegap-2.9.1</code>

<ul>
<li>enter the lib/ios/bin</li>
<li>use the command <code>./create ~/Documents/html_app/testphonegap test_phonegap test1</code>

<ul>
<li>to create the project that is located in <code>~/Documents/html_app/</code> and the name of it is <code>test_phonegap</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<h3>then use xcode to open the project</h3>

<ul>
<li>add the following code in the index.html and run the simulater</li>
<li>the jquery mobile is used from internet and we do not need to download it

<ul>
<li>but I can not find out a way to use the jquery mobile js file in my computer</li>
</ul>
</li>
<li>remember to add <code>&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</code> to enable the chinese utf-8</li>
</ul>


<p>```
<html></p>

<pre><code>&lt;head&gt;
    &lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css"&gt;
        &lt;script src="http://code.jquery.com/jquery-1.8.3.min.js"&gt;&lt;/script&gt;
        &lt;script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"&gt;&lt;/script&gt;
         &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div data-role="page" id="pageone"&gt;
        &lt;div data-role="header"&gt;
            &lt;h1&gt;欢迎来到我的主页&lt;/h1&gt;
            &lt;div data-role="navbar"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;a href="#" class="ui-btn-active" data-icon="home"&gt;首页&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#pagetwo" data-icon="arrow-r"&gt;页面二&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;select name="day" id="day"&gt;
                &lt;optgroup label="Weekdays"&gt;
                    &lt;option value="mon"&gt;Monday&lt;/option&gt;
                    &lt;option value="tue"&gt;Tuesday&lt;/option&gt;
                    &lt;option value="wed"&gt;Wednesday&lt;/option&gt;
                &lt;/optgroup&gt;
                &lt;optgroup label="Weekends"&gt;
                    &lt;option value="sat"&gt;Saturday&lt;/option&gt;
                    &lt;option value="sun"&gt;Sunday&lt;/option&gt;
                &lt;/optgroup&gt;
            &lt;/select&gt;
        &lt;/div&gt;

        &lt;div data-role="content"&gt;
            &lt;p&gt;本例设有 ui-btn-active 类，请注意首页按钮时突出显示的（已选）。&lt;/p&gt;
            &lt;p&gt;如果点击页面二，您会注意到按钮不会突出显示。&lt;/p&gt;
        &lt;/div&gt;

        &lt;div data-role="footer"&gt;
            &lt;h1&gt;我的页脚&lt;/h1&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;div data-role="page" id="pagetwo"&gt;
        &lt;div data-role="header"&gt;
            &lt;h1&gt;欢迎来到我的主页&lt;/h1&gt;
            &lt;div data-role="navbar"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;a href="#pageone" data-icon="home"&gt;首页&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#" data-icon="arrow-r"&gt;页面二&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;

        &lt;div data-role="content"&gt;
            &lt;p&gt;本页中没有被预选的按钮（突出显示）。&lt;/p&gt; 
            &lt;p&gt;如需让按钮被选的外观表示当前正在访问页面，请返回导航栏教程，继续向下阅读。&lt;/p&gt;
        &lt;/div&gt;

        &lt;div data-role="footer"&gt;
            &lt;h1&gt;我的页脚&lt;/h1&gt;
        &lt;/div&gt;
    &lt;/div&gt; 
&lt;/body&gt;
</code></pre>

<p></html></p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zst Internship IOS Code Step2]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/23/zst-internship-ios-code-step2/"/>
    <updated>2014-05-23T15:21:09+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/23/zst-internship-ios-code-step2</id>
    <content type="html"><![CDATA[<h3>Here are the method added</h3>

<ul>
<li>I want to implement a button that used to went back to the main page if the user suddenly do not want to continue ordering the things

<ul>
<li>First

<ul>
<li>Go to Sections &ndash;> ButtonMacro.h

<ul>
<li>add <code>#define BACKTOMAINPAGE 13</code> at the end</li>
</ul>
</li>
<li>then go to Sections &ndash;> Buttons &ndash;> CreateButtom.m

<ul>
<li>add the following code</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>```
else if (_type == BACKTOMAINPAGE)
{</p>

<pre><code>self.frame = CGRectMake(50, 50, 40, 44);
[self setTitle:@"返回主页" forState:UIControlStateNormal];
[self setTitle:@"返回主页" forState:UIControlStateHighlighted];
</code></pre>

<p>}</p>

<p>```</p>

<!--more-->


<ul>
<li>go to Controller &ndash;> 我 &ndash;> 应用推荐 &ndash;> OrderDetailViewController.m

<ul>
<li>and this is create a button on the right top corner and its function is to went back to the mainpage</li>
<li>add the following code in <code>viewdidload</code> function</li>
</ul>
</li>
</ul>


<p>```</p>

<pre><code>ButtonFactory *buttonFactory = [ButtonFactory factory];
UIButton *rightBtn = [buttonFactory createButtonWithType:BACKTOMAINPAGE];
[rightBtn addTarget:self action:@selector(gobacktomain:) forControlEvents:UIControlEventTouchUpInside];
UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:rightBtn];
self.navigationItem.rightBarButtonItem = rightBarItem;
[rightBarItem release];
</code></pre>

<p><code>``
- add a new function called</code>gobacktomain`</p>

<pre><code>- this is a selector that used to find the main viewcontroller and jump to it.
- the code in it is
</code></pre>

<p>```</p>

<pre><code>- (void)gobacktomain:(id)paramSender{
    UIViewController *target = nil;
    for(UIViewController *controller in self.navigationController.viewControllers){
        if([controller isKindOfClass:[HomePageViewController class]]){
            target = controller;
        }
    }
    if(target){
        [self.navigationController popToViewController:target animated:YES];
    }
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
