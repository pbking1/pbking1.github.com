<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: IOS | KING]]></title>
  <link href="http://pbking1.github.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://pbking1.github.com/"/>
  <updated>2014-06-23T19:44:02+08:00</updated>
  <id>http://pbking1.github.com/</id>
  <author>
    <name><![CDATA[pb]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Build Ios Webapp Using Phonegap and Jquery Mobile]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/27/build-ios-webapp-using-phonegap-and-jquery-mobile/"/>
    <updated>2014-05-27T17:30:09+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/27/build-ios-webapp-using-phonegap-and-jquery-mobile</id>
    <content type="html"><![CDATA[<h3>first install phonegap</h3>

<ul>
<li>download <code>phonegap-2.9.1</code>

<ul>
<li>enter the lib/ios/bin</li>
<li>use the command <code>./create ~/Documents/html_app/testphonegap test_phonegap test1</code>

<ul>
<li>to create the project that is located in <code>~/Documents/html_app/</code> and the name of it is <code>test_phonegap</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<h3>then use xcode to open the project</h3>

<ul>
<li>add the following code in the index.html and run the simulater</li>
<li>the jquery mobile is used from internet and we do not need to download it

<ul>
<li>but I can not find out a way to use the jquery mobile js file in my computer</li>
</ul>
</li>
<li>remember to add <code>&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;</code> to enable the chinese utf-8</li>
</ul>


<p>```
<html></p>

<pre><code>&lt;head&gt;
    &lt;link rel="stylesheet" href="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.css"&gt;
        &lt;script src="http://code.jquery.com/jquery-1.8.3.min.js"&gt;&lt;/script&gt;
        &lt;script src="http://code.jquery.com/mobile/1.3.2/jquery.mobile-1.3.2.min.js"&gt;&lt;/script&gt;
         &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div data-role="page" id="pageone"&gt;
        &lt;div data-role="header"&gt;
            &lt;h1&gt;欢迎来到我的主页&lt;/h1&gt;
            &lt;div data-role="navbar"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;a href="#" class="ui-btn-active" data-icon="home"&gt;首页&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#pagetwo" data-icon="arrow-r"&gt;页面二&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
            &lt;select name="day" id="day"&gt;
                &lt;optgroup label="Weekdays"&gt;
                    &lt;option value="mon"&gt;Monday&lt;/option&gt;
                    &lt;option value="tue"&gt;Tuesday&lt;/option&gt;
                    &lt;option value="wed"&gt;Wednesday&lt;/option&gt;
                &lt;/optgroup&gt;
                &lt;optgroup label="Weekends"&gt;
                    &lt;option value="sat"&gt;Saturday&lt;/option&gt;
                    &lt;option value="sun"&gt;Sunday&lt;/option&gt;
                &lt;/optgroup&gt;
            &lt;/select&gt;
        &lt;/div&gt;

        &lt;div data-role="content"&gt;
            &lt;p&gt;本例设有 ui-btn-active 类，请注意首页按钮时突出显示的（已选）。&lt;/p&gt;
            &lt;p&gt;如果点击页面二，您会注意到按钮不会突出显示。&lt;/p&gt;
        &lt;/div&gt;

        &lt;div data-role="footer"&gt;
            &lt;h1&gt;我的页脚&lt;/h1&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;div data-role="page" id="pagetwo"&gt;
        &lt;div data-role="header"&gt;
            &lt;h1&gt;欢迎来到我的主页&lt;/h1&gt;
            &lt;div data-role="navbar"&gt;
                &lt;ul&gt;
                    &lt;li&gt;&lt;a href="#pageone" data-icon="home"&gt;首页&lt;/a&gt;&lt;/li&gt;
                    &lt;li&gt;&lt;a href="#" data-icon="arrow-r"&gt;页面二&lt;/a&gt;&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/div&gt;
        &lt;/div&gt;

        &lt;div data-role="content"&gt;
            &lt;p&gt;本页中没有被预选的按钮（突出显示）。&lt;/p&gt; 
            &lt;p&gt;如需让按钮被选的外观表示当前正在访问页面，请返回导航栏教程，继续向下阅读。&lt;/p&gt;
        &lt;/div&gt;

        &lt;div data-role="footer"&gt;
            &lt;h1&gt;我的页脚&lt;/h1&gt;
        &lt;/div&gt;
    &lt;/div&gt; 
&lt;/body&gt;
</code></pre>

<p></html></p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zst Internship IOS Code Step2]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/23/zst-internship-ios-code-step2/"/>
    <updated>2014-05-23T15:21:09+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/23/zst-internship-ios-code-step2</id>
    <content type="html"><![CDATA[<h3>Here are the method added</h3>

<ul>
<li>I want to implement a button that used to went back to the main page if the user suddenly do not want to continue ordering the things

<ul>
<li>First

<ul>
<li>Go to Sections &ndash;> ButtonMacro.h

<ul>
<li>add <code>#define BACKTOMAINPAGE 13</code> at the end</li>
</ul>
</li>
<li>then go to Sections &ndash;> Buttons &ndash;> CreateButtom.m

<ul>
<li>add the following code</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>```
else if (_type == BACKTOMAINPAGE)
{</p>

<pre><code>self.frame = CGRectMake(50, 50, 40, 44);
[self setTitle:@"返回主页" forState:UIControlStateNormal];
[self setTitle:@"返回主页" forState:UIControlStateHighlighted];
</code></pre>

<p>}</p>

<p>```</p>

<!--more-->


<ul>
<li>go to Controller &ndash;> 我 &ndash;> 应用推荐 &ndash;> OrderDetailViewController.m

<ul>
<li>and this is create a button on the right top corner and its function is to went back to the mainpage</li>
<li>add the following code in <code>viewdidload</code> function</li>
</ul>
</li>
</ul>


<p>```</p>

<pre><code>ButtonFactory *buttonFactory = [ButtonFactory factory];
UIButton *rightBtn = [buttonFactory createButtonWithType:BACKTOMAINPAGE];
[rightBtn addTarget:self action:@selector(gobacktomain:) forControlEvents:UIControlEventTouchUpInside];
UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:rightBtn];
self.navigationItem.rightBarButtonItem = rightBarItem;
[rightBarItem release];
</code></pre>

<p><code>``
- add a new function called</code>gobacktomain`</p>

<pre><code>- this is a selector that used to find the main viewcontroller and jump to it.
- the code in it is
</code></pre>

<p>```</p>

<pre><code>- (void)gobacktomain:(id)paramSender{
    UIViewController *target = nil;
    for(UIViewController *controller in self.navigationController.viewControllers){
        if([controller isKindOfClass:[HomePageViewController class]]){
            target = controller;
        }
    }
    if(target){
        [self.navigationController popToViewController:target animated:YES];
    }
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zst Internship IOS Code Step1]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/23/zst-internship-ios-code-step1/"/>
    <updated>2014-05-23T11:47:46+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/23/zst-internship-ios-code-step1</id>
    <content type="html"><![CDATA[<h3>In order to understand better about the code of the project in zst ios project, first list the folder</h3>

<ul>
<li>in the <code>huyihui</code> folder

<ul>
<li>image</li>
<li>Third party</li>
<li>Sections</li>
<li>Controller</li>
<li>Model</li>
<li>Public</li>
<li>AppDelegate.h</li>
<li>AppDelegate.m</li>
<li>Main.storyboard</li>
<li>ViewController.h</li>
<li>ViewController.m</li>
<li>Images.xcassets</li>
<li>Supporting Files</li>
<li>Products</li>
</ul>
</li>
<li>For the project is nearly finished, so I do not introduce the framework they use.</li>
</ul>


<!--more-->


<h3>First in the <code>Image</code> folder</h3>

<ul>
<li>There are following pics

<ul>
<li>the login picture, the registe picture, the personal center picture, the general picture, the shopping picture, the first page picture, the search picture</li>
</ul>
</li>
</ul>


<h3>Second in the <code>Third Party</code> folder</h3>

<ul>
<li>mainly used for the ailipay and the shared sdk</li>
<li>There is a class <code>AGViewDelegate</code> which is used for the sharing</li>
</ul>


<h3>Third in the <code>Section</code> folder</h3>

<ul>
<li><p>we can see the following</p>

<ul>
<li>ButtonFactory

<ul>
<li>ButtonFactory.h</li>
<li>ButtonFactory.m</li>
</ul>
</li>
<li>Buttons

<ul>
<li>CreateButton.h</li>
<li>CreateButton.m</li>
</ul>
</li>
<li>SectionFactory.h</li>
<li>SectionFactory.m</li>
<li>ButtonMacro.h</li>
</ul>
</li>
<li><p>And I think this folder is implement the <code>factory mode</code></p></li>
<li>and most of the button is implement in the <code>CreateButton.m</code> file</li>
</ul>


<h3>Fourth in the <code>Controller</code> folder</h3>

<ul>
<li>Here comes <code>the most important</code>one</li>
<li>we can see the following

<ul>
<li>BaseViewController.h</li>
<li>BaseViewController.m</li>
<li>Mediator

<ul>
<li>CoordinatingController.h</li>
<li>CoordinatingController.m</li>
</ul>
</li>
<li>login_and_registe

<ul>
<li><img src="/images/internship_zst/1.png"></li>
</ul>
</li>
<li>first_page

<ul>
<li>firstpageandmore(is a tableview that used to show more about the product)

<ul>
<li><img src="/images/internship_zst/2.png"></li>
</ul>
</li>
<li>shopping()

<ul>
<li><img src="/images/internship_zst/3.png"></li>
<li>(those that contrain cell.xib is use to define the layout of the cell of the tableview)</li>
</ul>
</li>
<li>detailsoftheproduct()

<ul>
<li><img src="/images/internship_zst/4.png"></li>
</ul>
</li>
<li>tuangou

<ul>
<li><img src="/images/internship_zst/5.png"></li>
</ul>
</li>
<li>preferential_ticket

<ul>
<li><img src="/images/internship_zst/6.png"></li>
</ul>
</li>
<li>HomePageViewController.h</li>
<li>HomePageViewController.m</li>
<li>HomePageViewController.xib</li>
<li>NewProductCollectionView.xib</li>
<li>HomeCollectionHeader0.xib</li>
<li>HomeCollectionHeader1.xib</li>
<li>HomeCollectionHeader2.xib</li>
<li>OrdinaryProductImageDetailCell.xib</li>
<li>ProductImageDetailCell.xib</li>
<li>ProductConstants.h</li>
</ul>
</li>
<li>search

<ul>
<li><img src="/images/internship_zst/7.png"></li>
</ul>
</li>
<li>shoppingcart

<ul>
<li><img src="/images/internship_zst/8.png"></li>
</ul>
</li>
<li>comment_and_share

<ul>
<li><img src="/images/internship_zst/9.png"></li>
</ul>
</li>
<li>me

<ul>
<li>AppRecommand

<ul>
<li><img src="/images/internship_zst/10.png"></li>
</ul>
</li>
<li><img src="/images/internship_zst/11.png"></li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>Fifth is the <code>Model</code></h3>

<ul>
<li>we can see the following</li>
<li><img src="/images/internship_zst/12.png"></li>
</ul>


<h3>Sixth is the <code>Public</code></h3>

<ul>
<li>we can see the following</li>
<li><img src="/images/internship_zst/13.png"></li>
<li><img src="/images/internship_zst/14.png"></li>
<li><img src="/images/internship_zst/15.png"></li>
<li><img src="/images/internship_zst/16.png"></li>
<li><img src="/images/internship_zst/17.png"></li>
<li><img src="/images/internship_zst/18.png"></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use CocoaPods to Management Dependence in Xcode5]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/20/use-cocoapods-to-management-dependence-in-xcode5/"/>
    <updated>2014-05-20T20:05:22+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/20/use-cocoapods-to-management-dependence-in-xcode5</id>
    <content type="html"><![CDATA[<h3>What is CocoaPods?</h3>

<ul>
<li>CocoaPods is a tools used to management the Third party code in IOS project</li>
</ul>


<h3>How to install it?</h3>

<ul>
<li>use the ruby gem to install

<ul>
<li><code>sudo gem install cocoapods</code></li>
<li>and the ruby should be above ruby 2.0</li>
<li><code>pod setup</code>

<ul>
<li>this step is download the info in the ~/.cocoapods</li>
<li>and you can use <code>du -sh *</code> to see how it process</li>
</ul>
</li>
<li>if the gem is too old

<ul>
<li>use <code>sudo gem update --system</code></li>
</ul>
</li>
</ul>
</li>
</ul>


<!--more-->


<ul>
<li>most inportantly

<ul>
<li>for the ruby&rsquo;s software source is using the Amazon could and will be block by the great fire wall.</li>
<li><p>so you need to change to ruby temperatly</p>

<p>  <code>
  gem sources --remove https://rubygems.org/
  gem sources -a http://ruby.taobao.org/
 </code></p></li>
<li>after that

<ul>
<li>you can install the pod</li>
</ul>
</li>
</ul>
</li>
<li>and when you need to use the pod

<ul>
<li>change back to the origin source</li>
</ul>
</li>
</ul>


<h3>how to use it?</h3>

<ul>
<li>we will need a file called <code>Podfile</code>

<ul>
<li>and the content of it is
<code>
platform :ios, '7.0'
pod 'Mantle'
pod 'LBBlurredImage'
pod 'TSMessages'
pod 'ReactiveCocoa'
</code></li>
<li>then press <code>ctrl + O</code> and rename into <code>Podfile</code></li>
<li>press <code>ctrl + x</code> to exit</li>
</ul>
</li>
<li><p>after that</p>

<ul>
<li>use <code>pod install</code>

<ul>
<li>and you will see
<code>
$ pod install
Analyzing dependencies
CocoaPods 0.28.0 is available.
Downloading dependencies
Installing HexColors (2.2.1)
Installing LBBlurredImage (0.1.0)
Installing Mantle (1.3.1)
Installing ReactiveCocoa (2.1.7)
Installing TSMessages (0.9.4)
Generating Pods project
Integrating client project
[!] From now on use `SimpleWeather.xcworkspace`.
</code></li>
</ul>
</li>
</ul>
</li>
<li><p>and the Cocoapods will create a xxxxx.xcworkspce</p></li>
</ul>


<h3>Something else</h3>

<ul>
<li>after you use <code>pod install</code>

<ul>
<li>a file called <code>Podfile.lock</code> will be generated and this file should not be add into the .gitignore.</li>
<li>for this file will lock on all the version of the dependences</li>
<li>and you will not be able to change the version of these dependences even you use <code>pod install</code></li>
<li>and only the command <code>pod update</code> will work.</li>
</ul>
</li>
</ul>


<h3>generate the doc</h3>

<ul>
<li>use <code>brew install appledoc</code> to generate the Third party library doc</li>
</ul>


<h3>search the library you want in the cocapods library</h3>

<ul>
<li>use <code>pod search library_name</code>

<ul>
<li>like <code>pod search json</code></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build a Xib Program in Xcode5]]></title>
    <link href="http://pbking1.github.com/blog/2014/05/20/build-a-xib-program-in-xcode5/"/>
    <updated>2014-05-20T19:45:48+08:00</updated>
    <id>http://pbking1.github.com/blog/2014/05/20/build-a-xib-program-in-xcode5</id>
    <content type="html"><![CDATA[<ul>
<li>由于xcode5里面默认使用了storyboard这种视图控制器，因此有以下的解决方案

<ul>
<li>1.新建工程&mdash;ios&mdash;-Application&mdash;-Single View Application</li>
<li>2.将自动生成的Main.storyboard,ViewController.h,ViewController.m这三个文件彻底删除</li>
<li>3.在项目设置里面,将MainInterface这一项中的内容删除置为空</li>
<li>4.新建一个类,继承UIViewController,并且选中WithXIB for user interface.并且把内存计数器改为MRC.(改成MRC的方法就是再build setting里面找automatic, 然后把Object-C Automatic Reference Counting改成NO)
<!--more--></li>
<li>5.在AppDelegate中,导入新建的类:ViewController.h</li>
<li>6.在AppDelegate.h中,添加属性:@property(strong,nonatomic)ViewController*viewController;</li>
<li>7.在AppDelegate.m中,添加以下代码:
<code>
self.window= [[[UIWindowalloc]initWithFrame:[[UIScreenmainScreen]bounds]]autorelease];
self.viewController= [[[PT4ViewControlleralloc]initWithNibName:@"PT4ViewController"bundle:nil]autorelease];
self.window.rootViewController=self.viewController;
[self.windowmakeKeyAndVisible];
</code></li>
<li>8.处理好内存分配以及dealloc方法.
```</li>
<li>(void)dealloc
{
  [<em>window release];
  [</em>viewController release];
  [super dealloc];
}
```</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
