<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim | KING]]></title>
  <link href="http://pbking1.github.com/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://pbking1.github.com/"/>
  <updated>2015-04-22T01:02:51-04:00</updated>
  <id>http://pbking1.github.com/</id>
  <author>
    <name><![CDATA[pb]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vi regular expression and data processing(1)]]></title>
    <link href="http://pbking1.github.com/blog/2014/11/21/vi-regular-expression-1/"/>
    <updated>2014-11-21T15:07:04-05:00</updated>
    <id>http://pbking1.github.com/blog/2014/11/21/vi-regular-expression-1</id>
    <content type="html"><![CDATA[<h3>data processing is very important before data mining</h3>

<ul>
<li>like if you are going to do some data mining in the linkedin public profile</li>
<li>1.find out the number of the people that have

<pre><code> - education
 - experience
 - skills
 - have all
</code></pre></li>
<li>2.find out all the skills and list the number of user who own them in a diagram</li>
<li>3.find out all the company number</li>
<li>4.find out all the people that is in US</li>
<li>5.find out all the education level of all people

<pre><code> - like undergraduate, graduate, phd
</code></pre></li>
<li>6.find out all the experience about job numbers

<pre><code> - like 1 job, 2 jobs, 3 jobs
</code></pre></li>
</ul>


<!--more-->


<h3>regular expression in VIM</h3>

<ul>
<li>delete the line that match the particular format

<ul>
<li>like match all the lines in a document that match &lsquo;name: current&rsquo;

<ul>
<li>:%s/^name:\tcurrent.*$//g</li>
<li>:%s/skill_num:0\n//g</li>
</ul>
</li>
</ul>
</li>
</ul>


<h3>count the number</h3>

<ul>
<li><p>the number of the education, the number of the experience and the number of the skill</p>

<ul>
<li>like

<ul>
<li>grep &lsquo;skill_num&rsquo; *.txt > ./checklist/skill_num.txt

<ul>
<li>:%s/output[1-9][0-9]*.txt:skill_num://

<ul>
<li>delete the tag</li>
</ul>
</li>
</ul>
</li>
<li>grep &lsquo;experience_num&rsquo; *.txt > checklist/exp_num.txt

<ul>
<li>:%s/output[1-9][0-9]*.txt:experience_number://

<ul>
<li>delete the tag</li>
</ul>
</li>
</ul>
</li>
<li>grep &lsquo;education_nun&rsquo; *.txt > ./checklist/edu_num.txt

<ul>
<li>:%s/output[1-9][0-9]*.txt:education_nun://

<ul>
<li>delete the tag before the number</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>use the number of the education, experience and skills to plot the tendency
```
clear all;
clc;
edu = csvread(&lsquo;edu.csv&rsquo;);
exp = csvread(&lsquo;exp.csv&rsquo;);
skill = csvread(&lsquo;skill.csv&rsquo;);</p></li>
</ul>


<p>figure</p>

<p>%education number
edu_res = zeros(size(edu));
edu = sort(edu);
for i=1:size(edu)-1
   if edu(i) == edu(i + 1)</p>

<pre><code>   edu_res(edu(i)) = edu_res(edu(i)) + 1;
</code></pre>

<p>   elseif edu(i) ~= edu(i + 1)</p>

<pre><code>   edu_res(edu(i+1)) = edu_res(edu(i+1)) + 1;
</code></pre>

<p>   end
end</p>

<p>subplot(3,1,1); %add plot into one image
plot(edu_res(1:15, :));
title(&lsquo;education line plot&rsquo;)
xlabel(&lsquo;index of education number&rsquo;)
ylabel(&lsquo;number of the people&rsquo;)</p>

<p>%experience number
exp_res = zeros(size(exp));
exp = sort(exp);
for i=1:size(exp)-1
   if exp(i) == exp(i + 1)</p>

<pre><code>   exp_res(exp(i)) = exp_res(exp(i)) + 1;
</code></pre>

<p>   elseif exp(i) ~= exp(i + 1)</p>

<pre><code>   exp_res(exp(i+1)) = exp_res(exp(i+1)) + 1;
</code></pre>

<p>   end
end</p>

<p>subplot(3,1,2); %add plot into one image
plot(exp_res(1:43, :));
title(&lsquo;experience line plot&rsquo;)
xlabel(&lsquo;index of experience number&rsquo;)
ylabel(&lsquo;number of the people&rsquo;)</p>

<p>%skill number
skill_res = zeros(size(skill));
skill = sort(skill);
for i=1:size(skill)-1
   if skill(i) == skill(i + 1)</p>

<pre><code>   skill_res(skill(i)) = skill_res(skill(i)) + 1;
</code></pre>

<p>   elseif skill(i) ~= skill(i + 1)</p>

<pre><code>   skill_res(skill(i+1)) = skill_res(skill(i+1)) + 1;
</code></pre>

<p>   end
end</p>

<p>subplot(3,1,3); %add plot into one image
plot(skill_res(1:50, :));
title(&lsquo;skill line plot&rsquo;)
xlabel(&lsquo;index of skill number&rsquo;)
ylabel(&lsquo;number of the people&rsquo;)
```</p>

<h3>diff the file</h3>

<ul>
<li>diff whole_file subfile | grep &ldquo;&lt; &rdquo; | sed &rsquo;s/&lt; //g'

<ul>
<li>using this command can get all the content in the subfile out of the wholefile</li>
</ul>
</li>
</ul>


<h3>if you want to separate one very long string</h3>

<ul>
<li>use &ldquo;\r&rdquo; to replace &ldquo;,&rdquo; not &ldquo;\n&rdquo; in vim</li>
<li>or use

<ul>
<li><code>tr ", " "\n"</code></li>
</ul>
</li>
</ul>


<h3>erase the empty line</h3>

<ul>
<li><code>sed 's/^*$//g' file</code></li>
</ul>


<h3>replace the ^M into \n</h3>

<ul>
<li>use &rsquo;s/\r/\r/'</li>
</ul>


<h3>in vim use \r as &ldquo;enter button&rdquo;</h3>

<h3>sort the file use the sequence of first line</h3>

<ul>
<li><code>sort -n -k1,1</code> filename</li>
</ul>

]]></content>
  </entry>
  
</feed>
